cc_library_headers {
    name: "libnetd_client_headers",
    export_include_dirs: ["include"],
}

cc_library_headers {
    name: "libnetdbinder_utils_headers",
    export_include_dirs: ["include/binder_utils"],
    apex_available: [
        "//apex_available:platform",
        "com.android.resolv",
    ],
    min_sdk_version: "29",
}

cc_defaults {
    name: "netd_defaults",
    cflags: [
        "-Wall",
        "-Werror",
        // Override -Wno-error=implicit-fallthrough from soong
        "-Werror=implicit-fallthrough",
        "-Werror=sometimes-uninitialized",
        "-Werror=conditional-uninitialized",
        "-Wnullable-to-nonnull-conversion",
        "-Wsign-compare",
        "-Wthread-safety",
        "-Wunused-parameter",
        "-Wuninitialized",
    ],
    tidy: true,
    cpp_std: "experimental",
    tidy_checks: [
        "android-*",
        "bugprone-*",
        "cert-*",
        "clang-analyzer-security*",
        "google-*",
        "misc-*",
        "performance-*",
        "-bugprone-narrowing-conversions",  // lots of unsigned -> int conversions
        "-cert-err34-c",  // TODO: re-enable after removing atoi() and sscanf() calls
        "-google-readability-*",  // Too pedantic
        "-google-runtime-int",  // Too many unavoidable warnings due to strtol()
        "-google-runtime-references",  // Grandfathered usage of pass by non-const reference
        "-misc-non-private-member-variables-in-classes",  // Also complains about structs
    ],
    tidy_flags: [
        "-warnings-as-errors="
        + "android-*,"
        + "bugprone-*,"
        + "cert-*,"
        + "clang-analyzer-security*,"
        + "google-*,"
        + "misc-*,"
        + "performance-*"
    ],
}
