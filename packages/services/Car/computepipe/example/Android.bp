// Copyright 2020 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

cc_binary {
    name: "computepipe_face_runner",
    srcs: [
        "Runner.cpp",
    ],
    static_libs: [
        "libcomputepipeprotos",
        "computepipe_prebuilt_graph",
        "computepipe_client_interface",
    ],
    shared_libs: [
        "computepipe_runner_engine",
        "libprotobuf-cpp-lite",
        "libbase",
        "libbinder_ndk",
        "android.automotive.computepipe.runner-ndk_platform",
        "android.automotive.computepipe.registry-ndk_platform",
        "liblog",
        "libutils",
        "libdl",
        "libfacegraph",
	"libnativewindow",
    ],
    cflags: ["-DLOG_TAG=\"ComputepipeRunner\""] + [
        "-D_LIBCPP_ENABLE_THREAD_SAFETY_ANNOTATIONS",
        "-Wall",
        "-Werror",
        "-Wunused",
        "-Wunreachable-code",
        "-Wthread-safety",
    ],
    header_libs: [
        "computepipe_runner_includes",
    ],
    include_dirs: [
        "packages/services/Car/computepipe",
    ],
}

cc_prebuilt_library_shared {
    name: "libfacegraph",
    strip: {
        keep_symbols: true,
    },
    target: {
        android_arm64: {
            srcs: ["lib_arm64/libfacegraph.so"],
        },
        android_arm: {
            srcs: ["lib_arm/libfacegraph.so"],
        },
        android_x86_64: {
            srcs: ["lib_x86_64/libfacegraph.so"],
        },
        android_x86: {
            srcs: ["lib_x86/libfacegraph.so"],
        },
    },
    shared_libs: [
        "libc",
        "libdl",
        "libEGL",
        "libGLESv2",
        "liblog",
        "libm",
        "libz",
    ],
}

cc_binary {
    name: "computepipe_face_tracker",
    srcs: [
        "FaceTracker.cpp",
	"ClientSvc.cpp",
    ],
    vendor: true,
    static_libs: [
        "libcomputepipefaceproto",
    ],
    shared_libs: [
        "liblog",
        "libbase",
        "libbinder_ndk",
        "libutils",
        "android.hardware.automotive.occupant_awareness-ndk_platform",
        "libprotobuf-cpp-lite",
        "android.automotive.computepipe.runner-ndk_platform",
        "android.automotive.computepipe.registry-ndk_platform",
    ],
    cflags: ["-DLOG_TAG=\"FaceTrackerClient\""] + [
        "-D_LIBCPP_ENABLE_THREAD_SAFETY_ANNOTATIONS",
        "-Wall",
        "-Werror",
        "-Wunused",
        "-Wunreachable-code",
        "-Wthread-safety",
    ],
}

cc_defaults {
    name: "libcomputepipeface-defaults",

    proto: {
        export_proto_headers: true,
        include_dirs: ["external/protobuf/src"],
    },

    cflags: [
        "-Wall",
        "-Werror",
        "-Wno-unused-parameter",
    ],

    srcs: [
        "*.proto",
    ],
}

cc_library {
    name: "libcomputepipefaceproto",
    defaults: ["libcomputepipeface-defaults"],
    host_supported: false,
    vendor_available: true,
    target: {
        android: {
            proto: {
                type: "lite",
            },
            static_libs: [
                "libprotobuf-cpp-lite",
            ],
            shared: {
                enabled: false,
            },
        },
    },
}
