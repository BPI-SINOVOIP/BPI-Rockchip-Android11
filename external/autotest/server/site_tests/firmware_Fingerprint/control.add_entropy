# Copyright 2019 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

from autotest_lib.server import utils

AUTHOR = "Chrome OS Team"
NAME = "firmware_Fingerprint.AddEntropy"
PURPOSE = """
Verify that the add_entropy behavior works correctly.
"""
CRITERIA = """
Fails if we can add entropy from RW or cannot add entropy from RO."
"""
ATTRIBUTES = "suite:fingerprint"
TIME = "SHORT"
TEST_CATEGORY = "Functional"
TEST_CLASS = "firmware"
TEST_TYPE = "server"
DEPENDENCIES = "servo, fingerprint"
JOB_RETRIES = 0

DOC = """
Attempts to add entropy while running RW firmware and verifies that it fails.
Adds entropy from RO firmware and verifies that rollback block ID increments by
one. Then adds entropy with reset (double write) and verifies block ID
incremented by two. Finally, reboots back to RW.
"""

args_dict = utils.args_to_dict(args)
servo_args = hosts.CrosHost.get_servo_arguments(args_dict)

def run(machine):
    host = hosts.create_host(machine, servo_args=servo_args)
    job.run_test("firmware_Fingerprint", host=host, test_exe="add_entropy.sh")

parallel_simple(run, machines)
