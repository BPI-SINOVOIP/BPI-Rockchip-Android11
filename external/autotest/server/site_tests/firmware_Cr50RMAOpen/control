# Copyright 2018 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

from autotest_lib.server import utils

AUTHOR = "mruthven"
NAME = "firmware_Cr50RMAOpen"
PURPOSE = "Verify RMA Open"
ATTRIBUTES = "suite:faft_cr50_pvt, suite:faft_cr50_prepvt"
TIME = "SHORT"
TEST_TYPE = "server"
DEPENDENCIES = "servo"

DOC = """
Verify Cr50 RMA behavoior

Verify a couple of things:
    - basic open from AP and command line
    - Rate limiting
    - Authcodes can't be reused once another challenge is generated.
    - if the image is prod signed with mp flags, it isn't using test keys

Generate the challenge and calculate the response using rma_reset -c. Verify
open works and enables all of the ccd features.

If the generated challenge has the wrong version, make sure the challenge
generated with the test key fails.
"""

if 'args_dict' not in locals():
    args_dict = {}

args_dict.update(utils.args_to_dict(args))
servo_args = hosts.CrosHost.get_servo_arguments(args_dict)

def run(machine):
    host = hosts.create_host(machine, servo_args=servo_args)

    iterations = int(args_dict.get("iterations", 1))

    job.run_test("firmware_Cr50RMAOpen", host=host, cmdline_args=args,
                 full_args=args_dict, iterations=iterations)

parallel_simple(run, machines)
