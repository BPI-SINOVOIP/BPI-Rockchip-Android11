# Copyright 2018 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# This file has been automatically generated. Do not edit!

from autotest_lib.server import utils

AUTHOR = 'ARC++ Team'
NAME = 'cheets_CTS_P.9.0_r11.x86.CtsBluetoothTestCases'
ATTRIBUTES = 'suite:arc-cts, suite:arc-cts-unibuild, suite:arc-cts-unibuild-hw, suite:vmtest-informational1'
DEPENDENCIES = 'arc, cts_abi_x86'
JOB_RETRIES = 1
TEST_TYPE = 'server'
TIME = 'MEDIUM'
MAX_RESULT_SIZE_KB = 512000
DOC = 'Run module CtsBluetoothTestCases of the Android Compatibility Test Suite (CTS) using x86 ABI in the ARC++ container.'

# For local debugging, if your test setup doesn't have servo, REMOVE these
# two lines.
args_dict = utils.args_to_dict(args)
servo_args = hosts.CrosHost.get_servo_arguments(args_dict)

def run_TS(machine):
    # REMOVE 'servo_args=servo_args' arg for local debugging if your test
    # setup doesn't have servo.
    try:
        host_list = [hosts.create_host(machine, servo_args=servo_args)]
    except:
        # Just ignore any servo setup flakiness.
        host_list = [hosts.create_host(machine)]
    job.run_test(
        'cheets_CTS_P',
        hosts=host_list,
        iterations=1,
        tag='9.0_r11.x86.CtsBluetoothTestCases',
        test_name='cheets_CTS_P.9.0_r11.x86.CtsBluetoothTestCases',
        run_template=['run', 'commandAndExit', 'cts', '--module', 'CtsBluetoothTestCases', '--logcat-on-failure'],
        retry_template=['run', 'commandAndExit', 'retry', '--retry', '{session_id}'],
        target_module='CtsBluetoothTestCases',
        target_plan=None,
        bundle='x86',
        uri='gs://chromeos-arc-images/cts/bundle/P/android-cts-9.0_r11-linux_x86-x86.zip',
        prerequisites=['bluetooth'],
        hard_reboot_on_failure=True,
        timeout=3600)

parallel_simple(run_TS, machines)
