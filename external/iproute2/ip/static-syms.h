extern char ipvlan_link_util[] __attribute__((weak)); if (!strcmp(sym, "ipvlan_link_util")) return ipvlan_link_util;
extern char can_link_util[] __attribute__((weak)); if (!strcmp(sym, "can_link_util")) return can_link_util;
extern char team_link_util[] __attribute__((weak)); if (!strcmp(sym, "team_link_util")) return team_link_util;
extern char team_slave_link_util[] __attribute__((weak)); if (!strcmp(sym, "team_slave_link_util")) return team_slave_link_util;
extern char macvlan_link_util[] __attribute__((weak)); if (!strcmp(sym, "macvlan_link_util")) return macvlan_link_util;
extern char macvtap_link_util[] __attribute__((weak)); if (!strcmp(sym, "macvtap_link_util")) return macvtap_link_util;
extern char vti_link_util[] __attribute__((weak)); if (!strcmp(sym, "vti_link_util")) return vti_link_util;
extern char vcan_link_util[] __attribute__((weak)); if (!strcmp(sym, "vcan_link_util")) return vcan_link_util;
extern char ifb_link_util[] __attribute__((weak)); if (!strcmp(sym, "ifb_link_util")) return ifb_link_util;
extern char ipoib_link_util[] __attribute__((weak)); if (!strcmp(sym, "ipoib_link_util")) return ipoib_link_util;
extern char bond_slave_link_util[] __attribute__((weak)); if (!strcmp(sym, "bond_slave_link_util")) return bond_slave_link_util;
extern char vxlan_link_util[] __attribute__((weak)); if (!strcmp(sym, "vxlan_link_util")) return vxlan_link_util;
extern char ip6gre_link_util[] __attribute__((weak)); if (!strcmp(sym, "ip6gre_link_util")) return ip6gre_link_util;
extern char ip6gretap_link_util[] __attribute__((weak)); if (!strcmp(sym, "ip6gretap_link_util")) return ip6gretap_link_util;
extern char nlmon_link_util[] __attribute__((weak)); if (!strcmp(sym, "nlmon_link_util")) return nlmon_link_util;
extern char geneve_link_util[] __attribute__((weak)); if (!strcmp(sym, "geneve_link_util")) return geneve_link_util;
extern char vrf_link_util[] __attribute__((weak)); if (!strcmp(sym, "vrf_link_util")) return vrf_link_util;
extern char vrf_slave_link_util[] __attribute__((weak)); if (!strcmp(sym, "vrf_slave_link_util")) return vrf_slave_link_util;
extern char vlan_link_util[] __attribute__((weak)); if (!strcmp(sym, "vlan_link_util")) return vlan_link_util;
extern char dummy_link_util[] __attribute__((weak)); if (!strcmp(sym, "dummy_link_util")) return dummy_link_util;
extern char hsr_link_util[] __attribute__((weak)); if (!strcmp(sym, "hsr_link_util")) return hsr_link_util;
extern char veth_link_util[] __attribute__((weak)); if (!strcmp(sym, "veth_link_util")) return veth_link_util;
extern char macsec_link_util[] __attribute__((weak)); if (!strcmp(sym, "macsec_link_util")) return macsec_link_util;
extern char ipip_link_util[] __attribute__((weak)); if (!strcmp(sym, "ipip_link_util")) return ipip_link_util;
extern char sit_link_util[] __attribute__((weak)); if (!strcmp(sym, "sit_link_util")) return sit_link_util;
extern char bond_link_util[] __attribute__((weak)); if (!strcmp(sym, "bond_link_util")) return bond_link_util;
extern char vti6_link_util[] __attribute__((weak)); if (!strcmp(sym, "vti6_link_util")) return vti6_link_util;
extern char bridge_link_util[] __attribute__((weak)); if (!strcmp(sym, "bridge_link_util")) return bridge_link_util;
extern char gre_link_util[] __attribute__((weak)); if (!strcmp(sym, "gre_link_util")) return gre_link_util;
extern char gretap_link_util[] __attribute__((weak)); if (!strcmp(sym, "gretap_link_util")) return gretap_link_util;
extern char erspan_link_util[] __attribute__((weak)); if (!strcmp(sym, "erspan_link_util")) return erspan_link_util;
extern char ip6tnl_link_util[] __attribute__((weak)); if (!strcmp(sym, "ip6tnl_link_util")) return ip6tnl_link_util;
extern char vxcan_link_util[] __attribute__((weak)); if (!strcmp(sym, "vxcan_link_util")) return vxcan_link_util;
extern char bridge_slave_link_util[] __attribute__((weak)); if (!strcmp(sym, "bridge_slave_link_util")) return bridge_slave_link_util;
