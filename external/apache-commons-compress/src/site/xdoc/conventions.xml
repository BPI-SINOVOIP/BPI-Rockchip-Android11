<?xml version="1.0"?>
<!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<document>
   <properties>
      <title>Conventions</title>
   </properties>

   <body>
      <section name="Code Style">
            <p>
            The developers of this component decided to follow the recommended standards
            but not to include Checkstyle (or similar tools) into Commons Compress.
            </p>
      </section>
      <section name="Multithreading">
            <p>
            Commons Compress does not aim to be threadsafe at the moment. But the developers
            agreed to document multithreading behaviour in the javadocs.
            </p>
            <p>
            We use some of the annotations from 
            <a href="http://jcip.net/annotations/doc/net/jcip/annotations/package-summary.html">JCIP</a>
            as Javadoc tags. The used tags are: 
    
            <ul>
                <li>@GuardedBy (field or method)</li>
                <li>@Immutable (class)</li>
                <li>@NotThreadSafe (class)</li>
                <li>@ThreadSafe (class)</li>
            </ul>

            For example:
            <source>
/**
 * Utility class that represents a four byte integer with conversion
 * rules for the big endian byte order of ZIP files.
 *
 * @Immutable
 */
public final class ZipLong implements Cloneable {
            </source> 
            
            and:
            
            <source> 
private final char [] highChars;
//@GuardedBy("this")
private Simple8BitZipEncoding encoding;
            </source>
            </p>
      </section>

   </body>
</document>
