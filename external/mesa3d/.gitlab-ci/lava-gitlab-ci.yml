variables:
  DISTRIBUTION_TAG: "2020-11-09-kmod-fix"

.kernel+rootfs:
  stage: container-2
  extends:
    - .ci-run-policy
  variables:
    GIT_STRATEGY: fetch
    KERNEL_URL: "https://gitlab.freedesktop.org/tomeu/linux/-/archive/v5.10-rc2-for-mesa-ci/linux-v5.10-rc2-for-mesa-ci.tar.gz"
    UPLOAD_FOR_LAVA: 1
    INSTALL_KERNEL_MODULES: 1
  script:
    - .gitlab-ci/container/lava_build.sh

kernel+rootfs_amd64:
  extends:
    - .use-x86_build-base
    - .kernel+rootfs
  image: "$CI_REGISTRY_IMAGE/debian/x86_build-base:$BASE_TAG"
  variables:
    DEBIAN_ARCH: "amd64"

kernel+rootfs_arm64:
  extends:
    - .use-arm_build
    - .kernel+rootfs
  tags:
    - aarch64
  variables:
    DEBIAN_ARCH: "arm64"

kernel+rootfs_armhf:
  extends:
    - kernel+rootfs_arm64
  variables:
    DEBIAN_ARCH: "armhf"

.lava-test:
  extends:
    - .ci-run-policy
  # Cancel job if a newer commit is pushed to the same branch
  interruptible: true
  variables:
    GIT_STRATEGY: none # testing doesn't build anything from source
    ENV_VARS: "DEQP_PARALLEL=6"
    FIXED_ENV_VARS: "CI_PIPELINE_ID=${CI_PIPELINE_ID} CI_JOB_ID=${CI_JOB_ID} CI_PROJECT_PATH=${CI_PROJECT_PATH} CI_JOB_JWT=${CI_JOB_JWT} TRACIE_NO_UNIT_TESTS=1 TRACIE_UPLOAD_TO_MINIO=1 DRIVER_NAME=${DRIVER_NAME}"
    DEQP_VERSION: gles2
    ARTIFACTS_PREFIX: "https://minio-packet.freedesktop.org/mesa-lava/"
    MESA_URL: "https://minio-packet.freedesktop.org/artifacts/${CI_PROJECT_PATH}/${CI_PIPELINE_ID}/mesa-${ARCH}.tar.gz"
  script:
    # Try to use the kernel and rootfs built in mainline first, to save cycles
    - >
      if wget -q --method=HEAD "${ARTIFACTS_PREFIX}/mesa/mesa/${DISTRIBUTION_TAG}/${ARCH}/done"; then
        ARTIFACTS_URL="${ARTIFACTS_PREFIX}/mesa/mesa/${DISTRIBUTION_TAG}/${ARCH}"
      else
        ARTIFACTS_URL="${ARTIFACTS_PREFIX}/${CI_PROJECT_PATH}/${DISTRIBUTION_TAG}/${ARCH}"
      fi
    - >
      artifacts/generate_lava.py \
        --template artifacts/lava-${TEST_SUITE}.yml.jinja2 \
        --pipeline-info "$CI_PIPELINE_URL on $CI_COMMIT_REF_NAME ${CI_NODE_INDEX}/${CI_NODE_TOTAL}" \
        --base-artifacts-url ${ARTIFACTS_URL} \
        --mesa-url ${MESA_URL} \
        --device-type ${DEVICE_TYPE} \
        --dtb ${DTB} \
        --env-vars "${ENV_VARS} ${FIXED_ENV_VARS}" \
        --deqp-version ${DEQP_VERSION} \
        --kernel-image-name ${KERNEL_IMAGE_NAME} \
        --kernel-image-type "${KERNEL_IMAGE_TYPE}" \
        --gpu-version ${GPU_VERSION} \
        --boot-method ${BOOT_METHOD} \
        --lava-tags "${LAVA_TAGS}" \
        --ci-node-index "${CI_NODE_INDEX}" \
        --ci-node-total "${CI_NODE_TOTAL}"
    - lava_job_id=`lavacli jobs submit lava-${TEST_SUITE}.yml` || lavacli jobs submit lava-${TEST_SUITE}.yml
    - echo $lava_job_id
    - rm -rf artifacts/*
    - cp lava-${TEST_SUITE}.yml artifacts/.
    - lavacli jobs logs $lava_job_id | tee artifacts/lava-${TEST_SUITE}-$lava_job_id.log
    - lavacli jobs show $lava_job_id
    - result=`lavacli results $lava_job_id 0_${TEST_SUITE} ${TEST_SUITE} | head -1`
    - echo $result
    - '[[ "$result" == "pass" ]]'
  artifacts:
    name: "mesa_${CI_JOB_NAME}"
    when: always
    paths:
      - artifacts/

.lava-test:armhf:
  variables:
    ARCH: armhf
    KERNEL_IMAGE_NAME: zImage
    KERNEL_IMAGE_TYPE: "type:\ zimage"
    BOOT_METHOD: u-boot
    TEST_SUITE: "deqp"
  extends:
    - .lava-test
    - .use-arm_build
  needs:
    - kernel+rootfs_armhf
    - meson-armhf

.lava-test:arm64:
  variables:
    ARCH: arm64
    KERNEL_IMAGE_NAME: Image
    KERNEL_IMAGE_TYPE: "type:\ image"
    BOOT_METHOD: u-boot
    TEST_SUITE: "deqp"
  extends:
    - .lava-test
    - .use-arm_build
  dependencies:
    - meson-arm64
  needs:
    - kernel+rootfs_arm64
    - meson-arm64

.lava-test:amd64:
  variables:
    ARCH: amd64
    KERNEL_IMAGE_NAME: bzImage
    KERNEL_IMAGE_TYPE: "type:\ zimage"
    BOOT_METHOD: u-boot
    TEST_SUITE: "deqp"
  extends:
    - .lava-test
    - .use-arm_build
  needs:
    - kernel+rootfs_amd64
    - arm_build
    - meson-testing

.lava-traces-base:
  after_script:
    - mkdir -p artifacts
    - wget -O "artifacts/junit.xml" "https://minio-packet.freedesktop.org/artifacts/${CI_PROJECT_PATH}/${CI_PIPELINE_ID}/${CI_JOB_ID}/traces/junit.xml"
  artifacts:
    reports:
      junit: artifacts/junit.xml

.lava-traces:amd64:
  variables:
    TEST_SUITE: "tracie"
  extends:
    - .lava-test:amd64
    - .lava-traces-base

.lava-traces:armhf:
  variables:
    TEST_SUITE: "tracie"
  extends:
    - .lava-test:armhf
    - .lava-traces-base

.lava-traces:arm64:
  variables:
    TEST_SUITE: "tracie"
  extends:
    - .lava-test:arm64
    - .lava-traces-base

panfrost-t720-gles2:arm64:
  extends:
    - .lava-test:arm64
    - .panfrost-rules
  variables:
    DEVICE_TYPE: sun50i-h6-pine-h64
    DTB: ${DEVICE_TYPE}
    GPU_VERSION: panfrost-t720
    ENV_VARS: "PAN_MESA_DEBUG=gles3 DEQP_PARALLEL=6 DEQP_EXPECTED_RENDERER=T720 DEQP_FLAKES=deqp-panfrost-t720-flakes.txt"
  tags:
    - mesa-ci-aarch64-lava-collabora

.panfrost-t760-gles2:armhf:
  extends:
    - .lava-test:armhf
    - .panfrost-rules
  variables:
    DEVICE_TYPE: rk3288-veyron-jaq
    DTB: ${DEVICE_TYPE}
    GPU_VERSION: panfrost-t760
    BOOT_METHOD: depthcharge
    KERNEL_IMAGE_TYPE: ""
    ENV_VARS: "PAN_MESA_DEBUG=gles3 DEQP_PARALLEL=6 DEQP_EXPECTED_RENDERER=T760"
  tags:
    - mesa-ci-aarch64-lava-collabora

.panfrost-t760-traces:armhf:
  extends:
    - .lava-traces:armhf
    - .panfrost-rules
  variables:
    DEVICE_TYPE: rk3288-veyron-jaq
    DTB: ${DEVICE_TYPE}
    GPU_VERSION: panfrost-t760
    DRIVER_NAME: panfrost
    BOOT_METHOD: depthcharge
    KERNEL_IMAGE_TYPE: ""
    ENV_VARS: "PAN_MESA_DEBUG=deqp MESA_GLES_VERSION_OVERRIDE=3.1 MESA_GL_VERSION_OVERRIDE=3.3 MESA_GLSL_VERSION_OVERRIDE=330"
  tags:
    - mesa-ci-aarch64-lava-collabora

.lava-rk3399-gru-kevin:
  extends:
    - .panfrost-rules
  variables:
    DEVICE_TYPE: rk3399-gru-kevin
    DTB: ${DEVICE_TYPE}
    GPU_VERSION: panfrost-t860
    DRIVER_NAME: panfrost
    BOOT_METHOD: depthcharge
    KERNEL_IMAGE_TYPE: ""
  tags:
    - mesa-ci-aarch64-lava-collabora

panfrost-t860-gles2:arm64:
  extends:
    - .lava-test:arm64
    - .lava-rk3399-gru-kevin
  variables:
    ENV_VARS: "PAN_MESA_DEBUG=gles3 DEQP_PARALLEL=6 DEQP_EXPECTED_RENDERER=T860"

panfrost-t860-gles3:arm64:
  parallel: 2
  extends:
    - .lava-test:arm64
    - .lava-rk3399-gru-kevin
  variables:
    DEQP_VERSION: gles3
    ENV_VARS: "PAN_MESA_DEBUG=gles3 DEQP_PARALLEL=6 DEQP_EXPECTED_RENDERER=T860"

panfrost-t860-traces:arm64:
  extends:
    - .lava-traces:arm64
    - .lava-rk3399-gru-kevin
  variables:
    ENV_VARS: "PAN_MESA_DEBUG=deqp MESA_GLES_VERSION_OVERRIDE=3.1 MESA_GL_VERSION_OVERRIDE=3.3 MESA_GLSL_VERSION_OVERRIDE=330"

panfrost-g52-gles2:arm64:
  extends:
    - .lava-test:arm64
    - .panfrost-rules
  variables:
    DEVICE_TYPE: meson-g12b-a311d-khadas-vim3
    DTB: ${DEVICE_TYPE}
    GPU_VERSION: panfrost-g52
    ENV_VARS: "PAN_MESA_DEBUG=bifrost DEQP_PARALLEL=6 DEQP_EXPECTED_RENDERER=G52"
  tags:
    - mesa-ci-aarch64-lava-collabora

.panfrost-t820-gles2:arm64:
  extends:
    - .lava-test:arm64
    - .panfrost-rules
  variables:
    DEVICE_TYPE: meson-gxm-khadas-vim2
    DTB: ${DEVICE_TYPE}
    GPU_VERSION: panfrost-t820
    LAVA_TAGS: panfrost
    ENV_VARS: "PAN_MESA_DEBUG=gles3 DEQP_PARALLEL=6 DEQP_EXPECTED_RENDERER=T820"
  tags:
    - mesa-ci-aarch64-lava-baylibre

.lima-mali400-test:armhf:
  parallel: 2
  extends:
    - .lava-test:armhf
    - .lima-rules
  variables:
    DEVICE_TYPE: sun8i-h3-libretech-all-h3-cc
    DTB: ${DEVICE_TYPE}
    GPU_VERSION: lima
    ENV_VARS: "DEQP_PARALLEL=3 DEQP_EXPECTED_RENDERER=Mali400"
  tags:
    - mesa-ci-aarch64-lava-baylibre

.lima-mali450-test:arm64:
  extends:
    - .lava-test:arm64
    - .lima-rules
  variables:
    DEVICE_TYPE: meson-gxl-s905x-libretech-cc
    DTB: ${DEVICE_TYPE}
    GPU_VERSION: lima
    ENV_VARS: "DEQP_PARALLEL=6 DEQP_EXPECTED_RENDERER=Mali450"
  tags:
    - mesa-ci-aarch64-lava-baylibre

radeonsi-stoney-gles2:amd64:
  extends:
    - .lava-test:amd64
    - .radeonsi-rules
  variables:
    DEVICE_TYPE: hp-11A-G6-EE-grunt
    DTB: ""
    GPU_VERSION: radeonsi-stoney
    BOOT_METHOD: depthcharge
    KERNEL_IMAGE_TYPE: ""
    ENV_VARS: "DEQP_PARALLEL=4 DEQP_EXPECTED_RENDERER=STONEY"
  tags:
    - mesa-ci-aarch64-lava-collabora

radeonsi-stoney-gles3:amd64:
  extends:
    - radeonsi-stoney-gles2:amd64
  variables:
    DEQP_VERSION: gles3
    CI_NODE_INDEX: 1
    CI_NODE_TOTAL: 4
  tags:
    - mesa-ci-aarch64-lava-collabora

radeonsi-stoney-gles31:amd64:
  extends:
    - radeonsi-stoney-gles2:amd64
  variables:
    DEQP_VERSION: gles31
    CI_NODE_INDEX: 1
    CI_NODE_TOTAL: 5
  tags:
    - mesa-ci-aarch64-lava-collabora

radeonsi-stoney-traces:amd64:
  extends:
    - .lava-traces:amd64
    - .radeonsi-rules
  variables:
    DEVICE_TYPE: hp-11A-G6-EE-grunt
    DTB: ""
    GPU_VERSION: radeonsi-stoney
    DRIVER_NAME: radeonsi
    BOOT_METHOD: depthcharge
    KERNEL_IMAGE_TYPE: ""
  tags:
    - mesa-ci-aarch64-lava-collabora
