// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpc/channelz/v1/channelz.proto

package io.grpc.channelz.v1;

public interface ServerOrBuilder extends
    // @@protoc_insertion_point(interface_extends:grpc.channelz.v1.Server)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The identifier for a Server.  This should be set.
   * </pre>
   *
   * <code>.grpc.channelz.v1.ServerRef ref = 1;</code>
   */
  boolean hasRef();
  /**
   * <pre>
   * The identifier for a Server.  This should be set.
   * </pre>
   *
   * <code>.grpc.channelz.v1.ServerRef ref = 1;</code>
   */
  io.grpc.channelz.v1.ServerRef getRef();
  /**
   * <pre>
   * The identifier for a Server.  This should be set.
   * </pre>
   *
   * <code>.grpc.channelz.v1.ServerRef ref = 1;</code>
   */
  io.grpc.channelz.v1.ServerRefOrBuilder getRefOrBuilder();

  /**
   * <pre>
   * The associated data of the Server.
   * </pre>
   *
   * <code>.grpc.channelz.v1.ServerData data = 2;</code>
   */
  boolean hasData();
  /**
   * <pre>
   * The associated data of the Server.
   * </pre>
   *
   * <code>.grpc.channelz.v1.ServerData data = 2;</code>
   */
  io.grpc.channelz.v1.ServerData getData();
  /**
   * <pre>
   * The associated data of the Server.
   * </pre>
   *
   * <code>.grpc.channelz.v1.ServerData data = 2;</code>
   */
  io.grpc.channelz.v1.ServerDataOrBuilder getDataOrBuilder();

  /**
   * <pre>
   * The sockets that the server is listening on.  There are no ordering
   * guarantees.  This may be absent.
   * </pre>
   *
   * <code>repeated .grpc.channelz.v1.SocketRef listen_socket = 3;</code>
   */
  java.util.List<io.grpc.channelz.v1.SocketRef> 
      getListenSocketList();
  /**
   * <pre>
   * The sockets that the server is listening on.  There are no ordering
   * guarantees.  This may be absent.
   * </pre>
   *
   * <code>repeated .grpc.channelz.v1.SocketRef listen_socket = 3;</code>
   */
  io.grpc.channelz.v1.SocketRef getListenSocket(int index);
  /**
   * <pre>
   * The sockets that the server is listening on.  There are no ordering
   * guarantees.  This may be absent.
   * </pre>
   *
   * <code>repeated .grpc.channelz.v1.SocketRef listen_socket = 3;</code>
   */
  int getListenSocketCount();
  /**
   * <pre>
   * The sockets that the server is listening on.  There are no ordering
   * guarantees.  This may be absent.
   * </pre>
   *
   * <code>repeated .grpc.channelz.v1.SocketRef listen_socket = 3;</code>
   */
  java.util.List<? extends io.grpc.channelz.v1.SocketRefOrBuilder> 
      getListenSocketOrBuilderList();
  /**
   * <pre>
   * The sockets that the server is listening on.  There are no ordering
   * guarantees.  This may be absent.
   * </pre>
   *
   * <code>repeated .grpc.channelz.v1.SocketRef listen_socket = 3;</code>
   */
  io.grpc.channelz.v1.SocketRefOrBuilder getListenSocketOrBuilder(
      int index);
}
