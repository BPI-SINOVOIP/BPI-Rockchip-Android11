// GENERATED FILE - DO NOT EDIT.
// Generated by scripts/generate_android_bp.py
//
// Copyright 2020 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//

cc_defaults {
    name: "angle_jsoncpp",
    stl: "libc++_static",
    local_include_dirs: [
        "",
        "third_party/jsoncpp/generated/",
        "third_party/jsoncpp/source/include/",
        "third_party/jsoncpp/source/src/lib_json/",
    ],
    srcs: [
        "third_party/jsoncpp/source/src/lib_json/json_reader.cpp",
        "third_party/jsoncpp/source/src/lib_json/json_value.cpp",
        "third_party/jsoncpp/source/src/lib_json/json_writer.cpp",
    ],
    sdk_version: "28",
    cflags: [
        "-DANDROID",
        "-DANDROID_NDK_VERSION_ROLL=r20_1",
        "-DCR_CLANG_REVISION=\"n344329-9284abd0-6\"",
        "-DDYNAMIC_ANNOTATIONS_ENABLED=0",
        "-DHAVE_SYS_UIO_H",
        "-DJSON_USE_EXCEPTION=0",
        "-DJSON_USE_NULLREF=0",
        "-DNDEBUG",
        "-DNVALGRIND",
        "-D_FORTIFY_SOURCE=2",
        "-D_GNU_SOURCE",
        "-D__STDC_CONSTANT_MACROS",
        "-D__STDC_FORMAT_MACROS",
        "-Wno-bitwise-conditional-parentheses",
        "-Wno-builtin-assume-aligned-alignment",
        "-Wno-builtin-macro-redefined",
        "-Wno-c++11-narrowing",
        "-Wno-deprecated-copy",
        "-Wno-deprecated-declarations",
        "-Wno-final-dtor-non-final-class",
        "-Wno-ignored-pragma-optimize",
        "-Wno-implicit-fallthrough",
        "-Wno-implicit-int-float-conversion",
        "-Wno-missing-field-initializers",
        "-Wno-non-c-typedef-for-linkage",
        "-Wno-undefined-var-template",
        "-Wno-unknown-warning-option",
        "-Wno-unneeded-internal-declaration",
        "-Wno-unused-parameter",
    ],
}
cc_library_shared {
    generated_headers: [
        "angle_commit_id",
    ],
    name: "libfeature_support_angle",
    stl: "libc++_static",
    static_libs: [
        "angle_common",
        "angle_gpu_info_util",
    ],
    shared_libs: [
        "libdl",
        "liblog",
        "libm",
    ],
    local_include_dirs: [
        "",
        "include/",
        "src/",
        "src/common/third_party/base/",
        "third_party/jsoncpp/generated/",
        "third_party/jsoncpp/source/include/",
    ],
    srcs: [
        "src/feature_support_util/feature_support_util.cpp",
    ],
    sdk_version: "28",
    cflags: [
        "-DANDROID",
        "-DANDROID_NDK_VERSION_ROLL=r20_1",
        "-DANGLE_ENABLE_OPENGL",
        "-DANGLE_ENABLE_OPENGL_NULL",
        "-DANGLE_ENABLE_VULKAN",
        "-DANGLE_USE_CUSTOM_VULKAN_CMD_BUFFERS=1",
        "-DCR_CLANG_REVISION=\"n344329-9284abd0-6\"",
        "-DDYNAMIC_ANNOTATIONS_ENABLED=0",
        "-DHAVE_SYS_UIO_H",
        "-DLIBFEATURE_SUPPORT_IMPLEMENTATION",
        "-DNDEBUG",
        "-DNVALGRIND",
        "-D_FORTIFY_SOURCE=2",
        "-D_GNU_SOURCE",
        "-D__STDC_CONSTANT_MACROS",
        "-D__STDC_FORMAT_MACROS",
        "-Wno-bitwise-conditional-parentheses",
        "-Wno-builtin-assume-aligned-alignment",
        "-Wno-builtin-macro-redefined",
        "-Wno-c++11-narrowing",
        "-Wno-deprecated-copy",
        "-Wno-deprecated-declarations",
        "-Wno-final-dtor-non-final-class",
        "-Wno-ignored-pragma-optimize",
        "-Wno-implicit-fallthrough",
        "-Wno-implicit-int-float-conversion",
        "-Wno-missing-field-initializers",
        "-Wno-non-c-typedef-for-linkage",
        "-Wno-undefined-var-template",
        "-Wno-unknown-warning-option",
        "-Wno-unneeded-internal-declaration",
        "-Wno-unused-parameter",
    ],
    defaults: [
        "angle_jsoncpp",
    ],
    arch: {
        arm64: {
            cflags: [
                "-DANGLE_IS_64_BIT_CPU",
            ],
        },
        x86_64: {
            cflags: [
                "-DANGLE_IS_64_BIT_CPU",
            ],
        },
        x86: {
            cflags: [
                "-DANGLE_IS_32_BIT_CPU",
            ],
        },
        arm: {
            cflags: [
                "-DANGLE_IS_32_BIT_CPU",
            ],
        },
    },
}
cc_defaults {
    name: "angle_libEGL_egl_loader",
    stl: "libc++_static",
    local_include_dirs: [
        "include/",
        "src/",
    ],
    srcs: [
        "src/libEGL/egl_loader_autogen.cpp",
    ],
    sdk_version: "28",
    cflags: [
        "-DANDROID",
        "-DANDROID_NDK_VERSION_ROLL=r20_1",
        "-DANGLE_USE_EGL_LOADER",
        "-DCR_CLANG_REVISION=\"n344329-9284abd0-6\"",
        "-DDYNAMIC_ANNOTATIONS_ENABLED=0",
        "-DEGL_EGLEXT_PROTOTYPES",
        "-DEGL_EGL_PROTOTYPES=1",
        "-DGL_GLES_PROTOTYPES=1",
        "-DGL_GLEXT_PROTOTYPES",
        "-DHAVE_SYS_UIO_H",
        "-DNDEBUG",
        "-DNVALGRIND",
        "-D_FORTIFY_SOURCE=2",
        "-D_GNU_SOURCE",
        "-D__STDC_CONSTANT_MACROS",
        "-D__STDC_FORMAT_MACROS",
        "-Wno-bitwise-conditional-parentheses",
        "-Wno-builtin-assume-aligned-alignment",
        "-Wno-builtin-macro-redefined",
        "-Wno-c++11-narrowing",
        "-Wno-deprecated-copy",
        "-Wno-final-dtor-non-final-class",
        "-Wno-ignored-pragma-optimize",
        "-Wno-implicit-fallthrough",
        "-Wno-implicit-int-float-conversion",
        "-Wno-missing-field-initializers",
        "-Wno-non-c-typedef-for-linkage",
        "-Wno-undefined-var-template",
        "-Wno-unknown-warning-option",
        "-Wno-unneeded-internal-declaration",
        "-Wno-unused-parameter",
    ],
    defaults: [
        "angle_includes",
    ],
    arch: {
        arm64: {
            cflags: [
                "-DANGLE_IS_64_BIT_CPU",
            ],
        },
        x86_64: {
            cflags: [
                "-DANGLE_IS_64_BIT_CPU",
            ],
        },
        x86: {
            cflags: [
                "-DANGLE_IS_32_BIT_CPU",
            ],
        },
        arm: {
            cflags: [
                "-DANGLE_IS_32_BIT_CPU",
            ],
        },
    },
}
cc_library_shared {
    generated_headers: [
        "angle_commit_id",
        "angle_spvtools_core_enums_unified1",
        "angle_spvtools_core_tables_unified1",
        "angle_spvtools_generators_inc",
        "angle_spvtools_glsl_tables_glsl1-0",
        "angle_spvtools_language_header_cldebuginfo100",
        "angle_spvtools_language_header_debuginfo",
        "angle_spvtools_opencl_tables_opencl1-0",
        "angle_spvtools_vendor_tables_debuginfo",
        "angle_spvtools_vendor_tables_opencl.debuginfo.100",
        "angle_spvtools_vendor_tables_spv-amd-gcn-shader",
        "angle_spvtools_vendor_tables_spv-amd-shader-ballot",
        "angle_spvtools_vendor_tables_spv-amd-shader-explicit-vertex-parameter",
        "angle_spvtools_vendor_tables_spv-amd-shader-trinary-minmax",
    ],
    name: "libEGL_angle",
    stl: "libc++_static",
    static_libs: [
        "angle_common",
        "angle_gpu_info_util",
        "angle_image_util",
        "angle_preprocessor",
        "angle_spvtools",
        "angle_spvtools_opt",
        "angle_spvtools_val",
        "angle_translator",
    ],
    shared_libs: [
        "libGLESv2_angle",
        "libdl",
        "liblog",
        "libm",
    ],
    local_include_dirs: [
        "",
        "include/",
        "src/",
        "src/common/third_party/base/",
    ],
    srcs: [
        "src/libEGL/libEGL.cpp",
    ],
    sdk_version: "28",
    cflags: [
        "-DANDROID",
        "-DANDROID_NDK_VERSION_ROLL=r20_1",
        "-DANGLE_EGL_LIBRARY_NAME=\"libEGL_angle\"",
        "-DANGLE_GLESV2_LIBRARY_NAME=\"libGLESv2_angle\"",
        "-DANGLE_USE_EGL_LOADER",
        "-DCR_CLANG_REVISION=\"n344329-9284abd0-6\"",
        "-DDYNAMIC_ANNOTATIONS_ENABLED=0",
        "-DEGLAPI=__attribute__((visibility(\"default\")))",
        "-DEGL_EGLEXT_PROTOTYPES",
        "-DEGL_EGL_PROTOTYPES=1",
        "-DGL_GLES_PROTOTYPES=1",
        "-DGL_GLEXT_PROTOTYPES",
        "-DHAVE_SYS_UIO_H",
        "-DLIBEGL_IMPLEMENTATION",
        "-DNDEBUG",
        "-DNVALGRIND",
        "-D_FORTIFY_SOURCE=2",
        "-D_GNU_SOURCE",
        "-D__STDC_CONSTANT_MACROS",
        "-D__STDC_FORMAT_MACROS",
        "-Wno-bitwise-conditional-parentheses",
        "-Wno-builtin-assume-aligned-alignment",
        "-Wno-builtin-macro-redefined",
        "-Wno-c++11-narrowing",
        "-Wno-deprecated-copy",
        "-Wno-final-dtor-non-final-class",
        "-Wno-ignored-pragma-optimize",
        "-Wno-implicit-fallthrough",
        "-Wno-implicit-int-float-conversion",
        "-Wno-missing-field-initializers",
        "-Wno-non-c-typedef-for-linkage",
        "-Wno-undefined-var-template",
        "-Wno-unknown-warning-option",
        "-Wno-unneeded-internal-declaration",
        "-Wno-unused-parameter",
    ],
    defaults: [
        "angle_includes",
        "angle_libEGL_egl_loader",
        "angle_system_utils",
        "angle_version",
    ],
    arch: {
        arm64: {
            cflags: [
                "-DANGLE_IS_64_BIT_CPU",
            ],
        },
        x86_64: {
            cflags: [
                "-DANGLE_IS_64_BIT_CPU",
            ],
        },
        x86: {
            cflags: [
                "-DANGLE_IS_32_BIT_CPU",
            ],
        },
        arm: {
            cflags: [
                "-DANGLE_IS_32_BIT_CPU",
            ],
        },
    },
}
cc_library_shared {
    generated_headers: [
        "angle_commit_id",
        "angle_spvtools_core_enums_unified1",
        "angle_spvtools_core_tables_unified1",
        "angle_spvtools_generators_inc",
        "angle_spvtools_glsl_tables_glsl1-0",
        "angle_spvtools_language_header_cldebuginfo100",
        "angle_spvtools_language_header_debuginfo",
        "angle_spvtools_opencl_tables_opencl1-0",
        "angle_spvtools_vendor_tables_debuginfo",
        "angle_spvtools_vendor_tables_opencl.debuginfo.100",
        "angle_spvtools_vendor_tables_spv-amd-gcn-shader",
        "angle_spvtools_vendor_tables_spv-amd-shader-ballot",
        "angle_spvtools_vendor_tables_spv-amd-shader-explicit-vertex-parameter",
        "angle_spvtools_vendor_tables_spv-amd-shader-trinary-minmax",
    ],
    name: "libGLESv1_CM_angle",
    stl: "libc++_static",
    static_libs: [
        "angle_common",
        "angle_gpu_info_util",
        "angle_image_util",
        "angle_preprocessor",
        "angle_spvtools",
        "angle_spvtools_opt",
        "angle_spvtools_val",
        "angle_translator",
    ],
    shared_libs: [
        "libGLESv2_angle",
        "libdl",
        "libm",
    ],
    local_include_dirs: [
        "",
        "include/",
        "src/",
    ],
    srcs: [
        "src/libGLESv1_CM/libGLESv1_CM.cpp",
    ],
    sdk_version: "28",
    cflags: [
        "-DANDROID",
        "-DANDROID_NDK_VERSION_ROLL=r20_1",
        "-DCR_CLANG_REVISION=\"n344329-9284abd0-6\"",
        "-DDYNAMIC_ANNOTATIONS_ENABLED=0",
        "-DEGL_EGLEXT_PROTOTYPES",
        "-DEGL_EGL_PROTOTYPES=1",
        "-DGL_API=__attribute__((visibility(\"default\")))",
        "-DGL_APICALL=__attribute__((visibility(\"default\")))",
        "-DGL_GLES_PROTOTYPES=1",
        "-DGL_GLEXT_PROTOTYPES",
        "-DHAVE_SYS_UIO_H",
        "-DNDEBUG",
        "-DNVALGRIND",
        "-D_FORTIFY_SOURCE=2",
        "-D_GNU_SOURCE",
        "-D__STDC_CONSTANT_MACROS",
        "-D__STDC_FORMAT_MACROS",
        "-Wno-bitwise-conditional-parentheses",
        "-Wno-builtin-assume-aligned-alignment",
        "-Wno-builtin-macro-redefined",
        "-Wno-c++11-narrowing",
        "-Wno-deprecated-copy",
        "-Wno-final-dtor-non-final-class",
        "-Wno-ignored-pragma-optimize",
        "-Wno-implicit-fallthrough",
        "-Wno-implicit-int-float-conversion",
        "-Wno-missing-field-initializers",
        "-Wno-non-c-typedef-for-linkage",
        "-Wno-undefined-var-template",
        "-Wno-unknown-warning-option",
        "-Wno-unneeded-internal-declaration",
        "-Wno-unused-parameter",
    ],
    defaults: [
        "angle_includes",
    ],
    arch: {
        arm64: {
            cflags: [
                "-DANGLE_IS_64_BIT_CPU",
            ],
        },
        x86_64: {
            cflags: [
                "-DANGLE_IS_64_BIT_CPU",
            ],
        },
        x86: {
            cflags: [
                "-DANGLE_IS_32_BIT_CPU",
            ],
        },
        arm: {
            cflags: [
                "-DANGLE_IS_32_BIT_CPU",
            ],
        },
    },
}
cc_defaults {
    name: "angle_vulkan_entry_points",
    stl: "libc++_static",
    shared_libs: [
        "libvulkan",
    ],
    sdk_version: "28",
    cflags: [
        "-Wno-unknown-warning-option",
    ],
    defaults: [
        "angle_volk",
    ],
}
cc_defaults {
    name: "angle_volk",
    stl: "libc++_static",
    local_include_dirs: [
        "",
        "src/third_party/volk/",
        "third_party/vulkan-headers/src/include/",
    ],
    srcs: [
        "src/third_party/volk/volk.c",
    ],
    sdk_version: "28",
    cflags: [
        "-DANDROID",
        "-DANDROID_NDK_VERSION_ROLL=r20_1",
        "-DCR_CLANG_REVISION=\"n344329-9284abd0-6\"",
        "-DDYNAMIC_ANNOTATIONS_ENABLED=0",
        "-DHAVE_SYS_UIO_H",
        "-DNDEBUG",
        "-DNVALGRIND",
        "-DVK_USE_PLATFORM_ANDROID_KHR",
        "-D_FORTIFY_SOURCE=2",
        "-D_GNU_SOURCE",
        "-D__STDC_CONSTANT_MACROS",
        "-D__STDC_FORMAT_MACROS",
        "-Wno-bitwise-conditional-parentheses",
        "-Wno-builtin-assume-aligned-alignment",
        "-Wno-builtin-macro-redefined",
        "-Wno-c++11-narrowing",
        "-Wno-deprecated-copy",
        "-Wno-final-dtor-non-final-class",
        "-Wno-ignored-pragma-optimize",
        "-Wno-implicit-fallthrough",
        "-Wno-implicit-int-float-conversion",
        "-Wno-missing-field-initializers",
        "-Wno-non-c-typedef-for-linkage",
        "-Wno-undefined-var-template",
        "-Wno-unknown-warning-option",
        "-Wno-unneeded-internal-declaration",
        "-Wno-unused-parameter",
    ],
    defaults: [
        "angle_vulkan_headers",
    ],
}
cc_defaults {
    name: "angle_vulkan_memory_allocator",
    stl: "libc++_static",
    local_include_dirs: [
        "",
        "src/third_party/volk/",
        "third_party/VulkanMemoryAllocator/src/",
        "third_party/vulkan-headers/src/include/",
    ],
    sdk_version: "28",
    cflags: [
        "-DANDROID",
        "-DANDROID_NDK_VERSION_ROLL=r20_1",
        "-DCR_CLANG_REVISION=\"n344329-9284abd0-6\"",
        "-DDYNAMIC_ANNOTATIONS_ENABLED=0",
        "-DHAVE_SYS_UIO_H",
        "-DNDEBUG",
        "-DNVALGRIND",
        "-DVK_USE_PLATFORM_ANDROID_KHR",
        "-DVMA_IMPLEMENTATION",
        "-D_FORTIFY_SOURCE=2",
        "-D_GNU_SOURCE",
        "-D__STDC_CONSTANT_MACROS",
        "-D__STDC_FORMAT_MACROS",
        "-Wno-bitwise-conditional-parentheses",
        "-Wno-builtin-assume-aligned-alignment",
        "-Wno-builtin-macro-redefined",
        "-Wno-c++11-narrowing",
        "-Wno-deprecated-copy",
        "-Wno-final-dtor-non-final-class",
        "-Wno-ignored-pragma-optimize",
        "-Wno-implicit-fallthrough",
        "-Wno-implicit-int-float-conversion",
        "-Wno-missing-field-initializers",
        "-Wno-non-c-typedef-for-linkage",
        "-Wno-undefined-var-template",
        "-Wno-unknown-warning-option",
        "-Wno-unneeded-internal-declaration",
        "-Wno-unused-parameter",
        "-Wno-unused-variable",
    ],
    defaults: [
        "angle_volk",
    ],
}
cc_defaults {
    name: "angle_vk_mem_alloc_wrapper",
    stl: "libc++_static",
    local_include_dirs: [
        "include/",
        "src/",
        "src/third_party/volk/",
        "third_party/VulkanMemoryAllocator/src/",
        "third_party/vulkan-headers/src/include/",
    ],
    srcs: [
        "src/libANGLE/renderer/vulkan/vk_mem_alloc_wrapper.cpp",
    ],
    sdk_version: "28",
    cflags: [
        "-DANDROID",
        "-DANDROID_NDK_VERSION_ROLL=r20_1",
        "-DCR_CLANG_REVISION=\"n344329-9284abd0-6\"",
        "-DDYNAMIC_ANNOTATIONS_ENABLED=0",
        "-DHAVE_SYS_UIO_H",
        "-DNDEBUG",
        "-DNVALGRIND",
        "-DVK_USE_PLATFORM_ANDROID_KHR",
        "-DVMA_IMPLEMENTATION",
        "-D_FORTIFY_SOURCE=2",
        "-D_GNU_SOURCE",
        "-D__STDC_CONSTANT_MACROS",
        "-D__STDC_FORMAT_MACROS",
        "-Wno-bitwise-conditional-parentheses",
        "-Wno-builtin-assume-aligned-alignment",
        "-Wno-builtin-macro-redefined",
        "-Wno-c++11-narrowing",
        "-Wno-deprecated-copy",
        "-Wno-extra-semi-stmt",
        "-Wno-final-dtor-non-final-class",
        "-Wno-ignored-pragma-optimize",
        "-Wno-implicit-fallthrough",
        "-Wno-implicit-int-float-conversion",
        "-Wno-missing-field-initializers",
        "-Wno-non-c-typedef-for-linkage",
        "-Wno-undefined-var-template",
        "-Wno-unknown-warning-option",
        "-Wno-unneeded-internal-declaration",
        "-Wno-unused-parameter",
        "-Wno-unused-variable",
    ],
    defaults: [
        "angle_vulkan_memory_allocator",
    ],
    arch: {
        arm64: {
            cflags: [
                "-DANGLE_IS_64_BIT_CPU",
            ],
        },
        x86_64: {
            cflags: [
                "-DANGLE_IS_64_BIT_CPU",
            ],
        },
        x86: {
            cflags: [
                "-DANGLE_IS_32_BIT_CPU",
            ],
        },
        arm: {
            cflags: [
                "-DANGLE_IS_32_BIT_CPU",
            ],
        },
    },
}
cc_library_static {
    generated_headers: [
        "angle_spvtools_core_enums_unified1",
        "angle_spvtools_core_tables_unified1",
        "angle_spvtools_generators_inc",
        "angle_spvtools_glsl_tables_glsl1-0",
        "angle_spvtools_language_header_cldebuginfo100",
        "angle_spvtools_language_header_debuginfo",
        "angle_spvtools_opencl_tables_opencl1-0",
        "angle_spvtools_vendor_tables_debuginfo",
        "angle_spvtools_vendor_tables_opencl.debuginfo.100",
        "angle_spvtools_vendor_tables_spv-amd-gcn-shader",
        "angle_spvtools_vendor_tables_spv-amd-shader-ballot",
        "angle_spvtools_vendor_tables_spv-amd-shader-explicit-vertex-parameter",
        "angle_spvtools_vendor_tables_spv-amd-shader-trinary-minmax",
    ],
    name: "angle_spvtools_val",
    stl: "libc++_static",
    static_libs: [
        "angle_spvtools",
    ],
    local_include_dirs: [
        "",
        "third_party/spirv-headers/src/include/",
        "third_party/spirv-tools/src/",
        "third_party/spirv-tools/src/include/",
    ],
    srcs: [
        "third_party/spirv-tools/src/source/val/basic_block.cpp",
        "third_party/spirv-tools/src/source/val/construct.cpp",
        "third_party/spirv-tools/src/source/val/function.cpp",
        "third_party/spirv-tools/src/source/val/instruction.cpp",
        "third_party/spirv-tools/src/source/val/validate.cpp",
        "third_party/spirv-tools/src/source/val/validate_adjacency.cpp",
        "third_party/spirv-tools/src/source/val/validate_annotation.cpp",
        "third_party/spirv-tools/src/source/val/validate_arithmetics.cpp",
        "third_party/spirv-tools/src/source/val/validate_atomics.cpp",
        "third_party/spirv-tools/src/source/val/validate_barriers.cpp",
        "third_party/spirv-tools/src/source/val/validate_bitwise.cpp",
        "third_party/spirv-tools/src/source/val/validate_builtins.cpp",
        "third_party/spirv-tools/src/source/val/validate_capability.cpp",
        "third_party/spirv-tools/src/source/val/validate_cfg.cpp",
        "third_party/spirv-tools/src/source/val/validate_composites.cpp",
        "third_party/spirv-tools/src/source/val/validate_constants.cpp",
        "third_party/spirv-tools/src/source/val/validate_conversion.cpp",
        "third_party/spirv-tools/src/source/val/validate_debug.cpp",
        "third_party/spirv-tools/src/source/val/validate_decorations.cpp",
        "third_party/spirv-tools/src/source/val/validate_derivatives.cpp",
        "third_party/spirv-tools/src/source/val/validate_execution_limitations.cpp",
        "third_party/spirv-tools/src/source/val/validate_extensions.cpp",
        "third_party/spirv-tools/src/source/val/validate_function.cpp",
        "third_party/spirv-tools/src/source/val/validate_id.cpp",
        "third_party/spirv-tools/src/source/val/validate_image.cpp",
        "third_party/spirv-tools/src/source/val/validate_instruction.cpp",
        "third_party/spirv-tools/src/source/val/validate_interfaces.cpp",
        "third_party/spirv-tools/src/source/val/validate_layout.cpp",
        "third_party/spirv-tools/src/source/val/validate_literals.cpp",
        "third_party/spirv-tools/src/source/val/validate_logicals.cpp",
        "third_party/spirv-tools/src/source/val/validate_memory.cpp",
        "third_party/spirv-tools/src/source/val/validate_memory_semantics.cpp",
        "third_party/spirv-tools/src/source/val/validate_misc.cpp",
        "third_party/spirv-tools/src/source/val/validate_mode_setting.cpp",
        "third_party/spirv-tools/src/source/val/validate_non_uniform.cpp",
        "third_party/spirv-tools/src/source/val/validate_primitives.cpp",
        "third_party/spirv-tools/src/source/val/validate_scopes.cpp",
        "third_party/spirv-tools/src/source/val/validate_small_type_uses.cpp",
        "third_party/spirv-tools/src/source/val/validate_type.cpp",
        "third_party/spirv-tools/src/source/val/validation_state.cpp",
    ],
    sdk_version: "28",
    cflags: [
        "-DANDROID",
        "-DANDROID_NDK_VERSION_ROLL=r20_1",
        "-DCR_CLANG_REVISION=\"n344329-9284abd0-6\"",
        "-DDYNAMIC_ANNOTATIONS_ENABLED=0",
        "-DHAVE_SYS_UIO_H",
        "-DNDEBUG",
        "-DNVALGRIND",
        "-D_FORTIFY_SOURCE=2",
        "-D_GNU_SOURCE",
        "-D__STDC_CONSTANT_MACROS",
        "-D__STDC_FORMAT_MACROS",
        "-Wno-bitwise-conditional-parentheses",
        "-Wno-builtin-assume-aligned-alignment",
        "-Wno-builtin-macro-redefined",
        "-Wno-c++11-narrowing",
        "-Wno-deprecated-copy",
        "-Wno-final-dtor-non-final-class",
        "-Wno-ignored-pragma-optimize",
        "-Wno-implicit-fallthrough",
        "-Wno-implicit-int-float-conversion",
        "-Wno-missing-field-initializers",
        "-Wno-newline-eof",
        "-Wno-non-c-typedef-for-linkage",
        "-Wno-undefined-var-template",
        "-Wno-unknown-warning-option",
        "-Wno-unneeded-internal-declaration",
        "-Wno-unused-parameter",
    ],
    defaults: [
        "angle_spvtools_headers",
    ],
}
cc_genrule {
    name: "angle_spvtools_vendor_tables_spv-amd-shader-trinary-minmax",
    tool_files: [
        "third_party/spirv-tools/src/utils/generate_grammar_tables.py",
    ],
    cmd: "$(location) --extinst-vendor-grammar $(location third_party/spirv-tools/src/source/extinst.spv-amd-shader-trinary-minmax.grammar.json) --vendor-insts-output $(location spv-amd-shader-trinary-minmax.insts.inc) --vendor-operand-kind-prefix ...nil...",
    srcs: [
        "third_party/spirv-tools/src/source/extinst.spv-amd-shader-trinary-minmax.grammar.json",
    ],
    sdk_version: "28",
    out: [
        "spv-amd-shader-trinary-minmax.insts.inc",
    ],
}
cc_genrule {
    name: "angle_spvtools_vendor_tables_spv-amd-shader-explicit-vertex-parameter",
    tool_files: [
        "third_party/spirv-tools/src/utils/generate_grammar_tables.py",
    ],
    cmd: "$(location) --extinst-vendor-grammar $(location third_party/spirv-tools/src/source/extinst.spv-amd-shader-explicit-vertex-parameter.grammar.json) --vendor-insts-output $(location spv-amd-shader-explicit-vertex-parameter.insts.inc) --vendor-operand-kind-prefix ...nil...",
    srcs: [
        "third_party/spirv-tools/src/source/extinst.spv-amd-shader-explicit-vertex-parameter.grammar.json",
    ],
    sdk_version: "28",
    out: [
        "spv-amd-shader-explicit-vertex-parameter.insts.inc",
    ],
}
cc_genrule {
    name: "angle_spvtools_vendor_tables_spv-amd-shader-ballot",
    tool_files: [
        "third_party/spirv-tools/src/utils/generate_grammar_tables.py",
    ],
    cmd: "$(location) --extinst-vendor-grammar $(location third_party/spirv-tools/src/source/extinst.spv-amd-shader-ballot.grammar.json) --vendor-insts-output $(location spv-amd-shader-ballot.insts.inc) --vendor-operand-kind-prefix ...nil...",
    srcs: [
        "third_party/spirv-tools/src/source/extinst.spv-amd-shader-ballot.grammar.json",
    ],
    sdk_version: "28",
    out: [
        "spv-amd-shader-ballot.insts.inc",
    ],
}
cc_genrule {
    name: "angle_spvtools_vendor_tables_spv-amd-gcn-shader",
    tool_files: [
        "third_party/spirv-tools/src/utils/generate_grammar_tables.py",
    ],
    cmd: "$(location) --extinst-vendor-grammar $(location third_party/spirv-tools/src/source/extinst.spv-amd-gcn-shader.grammar.json) --vendor-insts-output $(location spv-amd-gcn-shader.insts.inc) --vendor-operand-kind-prefix ...nil...",
    srcs: [
        "third_party/spirv-tools/src/source/extinst.spv-amd-gcn-shader.grammar.json",
    ],
    sdk_version: "28",
    out: [
        "spv-amd-gcn-shader.insts.inc",
    ],
}
cc_genrule {
    name: "angle_spvtools_vendor_tables_opencl.debuginfo.100",
    tool_files: [
        "third_party/spirv-tools/src/utils/generate_grammar_tables.py",
    ],
    cmd: "$(location) --extinst-vendor-grammar $(location third_party/spirv-tools/src/source/extinst.opencl.debuginfo.100.grammar.json) --vendor-insts-output $(location opencl.debuginfo.100.insts.inc) --vendor-operand-kind-prefix CLDEBUG100_",
    srcs: [
        "third_party/spirv-tools/src/source/extinst.opencl.debuginfo.100.grammar.json",
    ],
    sdk_version: "28",
    out: [
        "opencl.debuginfo.100.insts.inc",
    ],
}
cc_genrule {
    name: "angle_spvtools_vendor_tables_debuginfo",
    tool_files: [
        "third_party/spirv-tools/src/utils/generate_grammar_tables.py",
    ],
    cmd: "$(location) --extinst-vendor-grammar $(location third_party/spirv-tools/src/source/extinst.debuginfo.grammar.json) --vendor-insts-output $(location debuginfo.insts.inc) --vendor-operand-kind-prefix ...nil...",
    srcs: [
        "third_party/spirv-tools/src/source/extinst.debuginfo.grammar.json",
    ],
    sdk_version: "28",
    out: [
        "debuginfo.insts.inc",
    ],
}
cc_genrule {
    name: "angle_spvtools_opencl_tables_opencl1-0",
    tool_files: [
        "third_party/spirv-tools/src/utils/generate_grammar_tables.py",
    ],
    cmd: "$(location) --spirv-core-grammar $(location third_party/spirv-headers/src/include/spirv/1.0/spirv.core.grammar.json) --extinst-debuginfo-grammar $(location third_party/spirv-tools/src/source/extinst.debuginfo.grammar.json) --extinst-cldebuginfo100-grammar $(location third_party/spirv-tools/src/source/extinst.opencl.debuginfo.100.grammar.json) --extinst-opencl-grammar $(location third_party/spirv-headers/src/include/spirv/1.0/extinst.opencl.std.100.grammar.json) --opencl-insts-output $(location opencl.std.insts.inc)",
    srcs: [
        "third_party/spirv-headers/src/include/spirv/1.0/extinst.opencl.std.100.grammar.json",
        "third_party/spirv-headers/src/include/spirv/1.0/spirv.core.grammar.json",
        "third_party/spirv-tools/src/source/extinst.debuginfo.grammar.json",
        "third_party/spirv-tools/src/source/extinst.opencl.debuginfo.100.grammar.json",
    ],
    sdk_version: "28",
    out: [
        "opencl.std.insts.inc",
    ],
}
cc_genrule {
    name: "angle_spvtools_language_header_debuginfo",
    tool_files: [
        "third_party/spirv-tools/src/utils/generate_language_headers.py",
    ],
    cmd: "$(location) --extinst-grammar $(location third_party/spirv-tools/src/source/extinst.debuginfo.grammar.json) --extinst-output-path $(location DebugInfo.h)",
    srcs: [
        "third_party/spirv-tools/src/source/extinst.debuginfo.grammar.json",
    ],
    sdk_version: "28",
    out: [
        "DebugInfo.h",
    ],
}
cc_genrule {
    name: "angle_spvtools_language_header_cldebuginfo100",
    tool_files: [
        "third_party/spirv-tools/src/utils/generate_language_headers.py",
    ],
    cmd: "$(location) --extinst-grammar $(location third_party/spirv-tools/src/source/extinst.opencl.debuginfo.100.grammar.json) --extinst-output-path $(location OpenCLDebugInfo100.h)",
    srcs: [
        "third_party/spirv-tools/src/source/extinst.opencl.debuginfo.100.grammar.json",
    ],
    sdk_version: "28",
    out: [
        "OpenCLDebugInfo100.h",
    ],
}
cc_defaults {
    name: "angle_spvtools_headers",
    stl: "libc++_static",
    local_include_dirs: [
        "",
        "third_party/spirv-tools/src/include/",
    ],
    sdk_version: "28",
    cflags: [
        "-DANDROID",
        "-DANDROID_NDK_VERSION_ROLL=r20_1",
        "-DCR_CLANG_REVISION=\"n344329-9284abd0-6\"",
        "-DDYNAMIC_ANNOTATIONS_ENABLED=0",
        "-DHAVE_SYS_UIO_H",
        "-DNDEBUG",
        "-DNVALGRIND",
        "-D_FORTIFY_SOURCE=2",
        "-D_GNU_SOURCE",
        "-D__STDC_CONSTANT_MACROS",
        "-D__STDC_FORMAT_MACROS",
        "-Wno-bitwise-conditional-parentheses",
        "-Wno-builtin-assume-aligned-alignment",
        "-Wno-builtin-macro-redefined",
        "-Wno-c++11-narrowing",
        "-Wno-deprecated-copy",
        "-Wno-final-dtor-non-final-class",
        "-Wno-ignored-pragma-optimize",
        "-Wno-implicit-fallthrough",
        "-Wno-implicit-int-float-conversion",
        "-Wno-missing-field-initializers",
        "-Wno-non-c-typedef-for-linkage",
        "-Wno-undefined-var-template",
        "-Wno-unknown-warning-option",
        "-Wno-unneeded-internal-declaration",
        "-Wno-unused-parameter",
    ],
}
cc_genrule {
    name: "angle_spvtools_glsl_tables_glsl1-0",
    tool_files: [
        "third_party/spirv-tools/src/utils/generate_grammar_tables.py",
    ],
    cmd: "$(location) --spirv-core-grammar $(location third_party/spirv-headers/src/include/spirv/1.0/spirv.core.grammar.json) --extinst-debuginfo-grammar $(location third_party/spirv-tools/src/source/extinst.debuginfo.grammar.json) --extinst-cldebuginfo100-grammar $(location third_party/spirv-tools/src/source/extinst.opencl.debuginfo.100.grammar.json) --extinst-glsl-grammar $(location third_party/spirv-headers/src/include/spirv/1.0/extinst.glsl.std.450.grammar.json) --glsl-insts-output $(location glsl.std.450.insts.inc)",
    srcs: [
        "third_party/spirv-headers/src/include/spirv/1.0/extinst.glsl.std.450.grammar.json",
        "third_party/spirv-headers/src/include/spirv/1.0/spirv.core.grammar.json",
        "third_party/spirv-tools/src/source/extinst.debuginfo.grammar.json",
        "third_party/spirv-tools/src/source/extinst.opencl.debuginfo.100.grammar.json",
    ],
    sdk_version: "28",
    out: [
        "glsl.std.450.insts.inc",
    ],
}
cc_genrule {
    name: "angle_spvtools_generators_inc",
    tool_files: [
        "third_party/spirv-tools/src/utils/generate_registry_tables.py",
    ],
    cmd: "$(location) --xml $(location third_party/spirv-headers/src/include/spirv/spir-v.xml) --generator $(location generators.inc)",
    srcs: [
        "third_party/spirv-headers/src/include/spirv/spir-v.xml",
    ],
    sdk_version: "28",
    out: [
        "generators.inc",
    ],
}
cc_genrule {
    name: "angle_spvtools_core_tables_unified1",
    tool_files: [
        "third_party/spirv-tools/src/utils/generate_grammar_tables.py",
    ],
    cmd: "$(location) --spirv-core-grammar $(location third_party/spirv-headers/src/include/spirv/unified1/spirv.core.grammar.json) --core-insts-output $(location core.insts-unified1.inc) --extinst-debuginfo-grammar $(location third_party/spirv-tools/src/source/extinst.debuginfo.grammar.json) --extinst-cldebuginfo100-grammar $(location third_party/spirv-tools/src/source/extinst.opencl.debuginfo.100.grammar.json) --operand-kinds-output $(location operand.kinds-unified1.inc)",
    srcs: [
        "third_party/spirv-headers/src/include/spirv/unified1/spirv.core.grammar.json",
        "third_party/spirv-tools/src/source/extinst.debuginfo.grammar.json",
        "third_party/spirv-tools/src/source/extinst.opencl.debuginfo.100.grammar.json",
    ],
    sdk_version: "28",
    out: [
        "core.insts-unified1.inc",
        "operand.kinds-unified1.inc",
    ],
}
cc_genrule {
    name: "angle_spvtools_core_enums_unified1",
    tool_files: [
        "third_party/spirv-tools/src/utils/generate_grammar_tables.py",
    ],
    cmd: "$(location) --spirv-core-grammar $(location third_party/spirv-headers/src/include/spirv/unified1/spirv.core.grammar.json) --extinst-debuginfo-grammar $(location third_party/spirv-tools/src/source/extinst.debuginfo.grammar.json) --extinst-cldebuginfo100-grammar $(location third_party/spirv-tools/src/source/extinst.opencl.debuginfo.100.grammar.json) --extension-enum-output $(location extension_enum.inc) --enum-string-mapping-output $(location enum_string_mapping.inc)",
    srcs: [
        "third_party/spirv-headers/src/include/spirv/unified1/spirv.core.grammar.json",
        "third_party/spirv-tools/src/source/extinst.debuginfo.grammar.json",
        "third_party/spirv-tools/src/source/extinst.opencl.debuginfo.100.grammar.json",
    ],
    sdk_version: "28",
    out: [
        "enum_string_mapping.inc",
        "extension_enum.inc",
    ],
}
cc_defaults {
    name: "angle_spv_headers",
    stl: "libc++_static",
    local_include_dirs: [
        "",
        "third_party/spirv-headers/src/include/",
    ],
    sdk_version: "28",
    cflags: [
        "-DANDROID",
        "-DANDROID_NDK_VERSION_ROLL=r20_1",
        "-DCR_CLANG_REVISION=\"n344329-9284abd0-6\"",
        "-DDYNAMIC_ANNOTATIONS_ENABLED=0",
        "-DHAVE_SYS_UIO_H",
        "-DNDEBUG",
        "-DNVALGRIND",
        "-D_FORTIFY_SOURCE=2",
        "-D_GNU_SOURCE",
        "-D__STDC_CONSTANT_MACROS",
        "-D__STDC_FORMAT_MACROS",
        "-Wno-bitwise-conditional-parentheses",
        "-Wno-builtin-assume-aligned-alignment",
        "-Wno-builtin-macro-redefined",
        "-Wno-c++11-narrowing",
        "-Wno-deprecated-copy",
        "-Wno-final-dtor-non-final-class",
        "-Wno-ignored-pragma-optimize",
        "-Wno-implicit-fallthrough",
        "-Wno-implicit-int-float-conversion",
        "-Wno-missing-field-initializers",
        "-Wno-non-c-typedef-for-linkage",
        "-Wno-undefined-var-template",
        "-Wno-unknown-warning-option",
        "-Wno-unneeded-internal-declaration",
        "-Wno-unused-parameter",
    ],
}
cc_library_static {
    generated_headers: [
        "angle_spvtools_core_enums_unified1",
        "angle_spvtools_core_tables_unified1",
        "angle_spvtools_generators_inc",
        "angle_spvtools_glsl_tables_glsl1-0",
        "angle_spvtools_language_header_cldebuginfo100",
        "angle_spvtools_language_header_debuginfo",
        "angle_spvtools_opencl_tables_opencl1-0",
        "angle_spvtools_vendor_tables_debuginfo",
        "angle_spvtools_vendor_tables_opencl.debuginfo.100",
        "angle_spvtools_vendor_tables_spv-amd-gcn-shader",
        "angle_spvtools_vendor_tables_spv-amd-shader-ballot",
        "angle_spvtools_vendor_tables_spv-amd-shader-explicit-vertex-parameter",
        "angle_spvtools_vendor_tables_spv-amd-shader-trinary-minmax",
    ],
    name: "angle_spvtools",
    stl: "libc++_static",
    local_include_dirs: [
        "",
        "third_party/spirv-headers/src/include/",
        "third_party/spirv-tools/src/",
        "third_party/spirv-tools/src/include/",
    ],
    srcs: [
        "third_party/spirv-tools/src/source/assembly_grammar.cpp",
        "third_party/spirv-tools/src/source/binary.cpp",
        "third_party/spirv-tools/src/source/diagnostic.cpp",
        "third_party/spirv-tools/src/source/disassemble.cpp",
        "third_party/spirv-tools/src/source/enum_string_mapping.cpp",
        "third_party/spirv-tools/src/source/ext_inst.cpp",
        "third_party/spirv-tools/src/source/extensions.cpp",
        "third_party/spirv-tools/src/source/libspirv.cpp",
        "third_party/spirv-tools/src/source/name_mapper.cpp",
        "third_party/spirv-tools/src/source/opcode.cpp",
        "third_party/spirv-tools/src/source/operand.cpp",
        "third_party/spirv-tools/src/source/parsed_operand.cpp",
        "third_party/spirv-tools/src/source/print.cpp",
        "third_party/spirv-tools/src/source/spirv_endian.cpp",
        "third_party/spirv-tools/src/source/spirv_optimizer_options.cpp",
        "third_party/spirv-tools/src/source/spirv_target_env.cpp",
        "third_party/spirv-tools/src/source/spirv_validator_options.cpp",
        "third_party/spirv-tools/src/source/table.cpp",
        "third_party/spirv-tools/src/source/text.cpp",
        "third_party/spirv-tools/src/source/text_handler.cpp",
        "third_party/spirv-tools/src/source/util/bit_vector.cpp",
        "third_party/spirv-tools/src/source/util/parse_number.cpp",
        "third_party/spirv-tools/src/source/util/string_utils.cpp",
        "third_party/spirv-tools/src/source/util/timer.cpp",
    ],
    sdk_version: "28",
    cflags: [
        "-DANDROID",
        "-DANDROID_NDK_VERSION_ROLL=r20_1",
        "-DCR_CLANG_REVISION=\"n344329-9284abd0-6\"",
        "-DDYNAMIC_ANNOTATIONS_ENABLED=0",
        "-DHAVE_SYS_UIO_H",
        "-DNDEBUG",
        "-DNVALGRIND",
        "-D_FORTIFY_SOURCE=2",
        "-D_GNU_SOURCE",
        "-D__STDC_CONSTANT_MACROS",
        "-D__STDC_FORMAT_MACROS",
        "-Wno-bitwise-conditional-parentheses",
        "-Wno-builtin-assume-aligned-alignment",
        "-Wno-builtin-macro-redefined",
        "-Wno-c++11-narrowing",
        "-Wno-deprecated-copy",
        "-Wno-final-dtor-non-final-class",
        "-Wno-ignored-pragma-optimize",
        "-Wno-implicit-fallthrough",
        "-Wno-implicit-int-float-conversion",
        "-Wno-missing-field-initializers",
        "-Wno-newline-eof",
        "-Wno-non-c-typedef-for-linkage",
        "-Wno-undefined-var-template",
        "-Wno-unknown-warning-option",
        "-Wno-unneeded-internal-declaration",
        "-Wno-unused-parameter",
    ],
    defaults: [
        "angle_spv_headers",
        "angle_spvtools_headers",
    ],
}
cc_library_static {
    generated_headers: [
        "angle_spvtools_core_enums_unified1",
        "angle_spvtools_core_tables_unified1",
        "angle_spvtools_generators_inc",
        "angle_spvtools_glsl_tables_glsl1-0",
        "angle_spvtools_language_header_cldebuginfo100",
        "angle_spvtools_language_header_debuginfo",
        "angle_spvtools_opencl_tables_opencl1-0",
        "angle_spvtools_vendor_tables_debuginfo",
        "angle_spvtools_vendor_tables_opencl.debuginfo.100",
        "angle_spvtools_vendor_tables_spv-amd-gcn-shader",
        "angle_spvtools_vendor_tables_spv-amd-shader-ballot",
        "angle_spvtools_vendor_tables_spv-amd-shader-explicit-vertex-parameter",
        "angle_spvtools_vendor_tables_spv-amd-shader-trinary-minmax",
    ],
    name: "angle_spvtools_opt",
    stl: "libc++_static",
    static_libs: [
        "angle_spvtools",
    ],
    local_include_dirs: [
        "",
        "third_party/spirv-headers/src/include/",
        "third_party/spirv-tools/src/",
        "third_party/spirv-tools/src/include/",
    ],
    srcs: [
        "third_party/spirv-tools/src/source/opt/aggressive_dead_code_elim_pass.cpp",
        "third_party/spirv-tools/src/source/opt/amd_ext_to_khr.cpp",
        "third_party/spirv-tools/src/source/opt/basic_block.cpp",
        "third_party/spirv-tools/src/source/opt/block_merge_pass.cpp",
        "third_party/spirv-tools/src/source/opt/block_merge_util.cpp",
        "third_party/spirv-tools/src/source/opt/build_module.cpp",
        "third_party/spirv-tools/src/source/opt/ccp_pass.cpp",
        "third_party/spirv-tools/src/source/opt/cfg.cpp",
        "third_party/spirv-tools/src/source/opt/cfg_cleanup_pass.cpp",
        "third_party/spirv-tools/src/source/opt/code_sink.cpp",
        "third_party/spirv-tools/src/source/opt/combine_access_chains.cpp",
        "third_party/spirv-tools/src/source/opt/compact_ids_pass.cpp",
        "third_party/spirv-tools/src/source/opt/composite.cpp",
        "third_party/spirv-tools/src/source/opt/const_folding_rules.cpp",
        "third_party/spirv-tools/src/source/opt/constants.cpp",
        "third_party/spirv-tools/src/source/opt/convert_to_half_pass.cpp",
        "third_party/spirv-tools/src/source/opt/copy_prop_arrays.cpp",
        "third_party/spirv-tools/src/source/opt/dead_branch_elim_pass.cpp",
        "third_party/spirv-tools/src/source/opt/dead_insert_elim_pass.cpp",
        "third_party/spirv-tools/src/source/opt/dead_variable_elimination.cpp",
        "third_party/spirv-tools/src/source/opt/decompose_initialized_variables_pass.cpp",
        "third_party/spirv-tools/src/source/opt/decoration_manager.cpp",
        "third_party/spirv-tools/src/source/opt/def_use_manager.cpp",
        "third_party/spirv-tools/src/source/opt/desc_sroa.cpp",
        "third_party/spirv-tools/src/source/opt/dominator_analysis.cpp",
        "third_party/spirv-tools/src/source/opt/dominator_tree.cpp",
        "third_party/spirv-tools/src/source/opt/eliminate_dead_constant_pass.cpp",
        "third_party/spirv-tools/src/source/opt/eliminate_dead_functions_pass.cpp",
        "third_party/spirv-tools/src/source/opt/eliminate_dead_functions_util.cpp",
        "third_party/spirv-tools/src/source/opt/eliminate_dead_members_pass.cpp",
        "third_party/spirv-tools/src/source/opt/feature_manager.cpp",
        "third_party/spirv-tools/src/source/opt/fix_storage_class.cpp",
        "third_party/spirv-tools/src/source/opt/flatten_decoration_pass.cpp",
        "third_party/spirv-tools/src/source/opt/fold.cpp",
        "third_party/spirv-tools/src/source/opt/fold_spec_constant_op_and_composite_pass.cpp",
        "third_party/spirv-tools/src/source/opt/folding_rules.cpp",
        "third_party/spirv-tools/src/source/opt/freeze_spec_constant_value_pass.cpp",
        "third_party/spirv-tools/src/source/opt/function.cpp",
        "third_party/spirv-tools/src/source/opt/generate_webgpu_initializers_pass.cpp",
        "third_party/spirv-tools/src/source/opt/graphics_robust_access_pass.cpp",
        "third_party/spirv-tools/src/source/opt/if_conversion.cpp",
        "third_party/spirv-tools/src/source/opt/inline_exhaustive_pass.cpp",
        "third_party/spirv-tools/src/source/opt/inline_opaque_pass.cpp",
        "third_party/spirv-tools/src/source/opt/inline_pass.cpp",
        "third_party/spirv-tools/src/source/opt/inst_bindless_check_pass.cpp",
        "third_party/spirv-tools/src/source/opt/inst_buff_addr_check_pass.cpp",
        "third_party/spirv-tools/src/source/opt/inst_debug_printf_pass.cpp",
        "third_party/spirv-tools/src/source/opt/instruction.cpp",
        "third_party/spirv-tools/src/source/opt/instruction_list.cpp",
        "third_party/spirv-tools/src/source/opt/instrument_pass.cpp",
        "third_party/spirv-tools/src/source/opt/ir_context.cpp",
        "third_party/spirv-tools/src/source/opt/ir_loader.cpp",
        "third_party/spirv-tools/src/source/opt/legalize_vector_shuffle_pass.cpp",
        "third_party/spirv-tools/src/source/opt/licm_pass.cpp",
        "third_party/spirv-tools/src/source/opt/local_access_chain_convert_pass.cpp",
        "third_party/spirv-tools/src/source/opt/local_redundancy_elimination.cpp",
        "third_party/spirv-tools/src/source/opt/local_single_block_elim_pass.cpp",
        "third_party/spirv-tools/src/source/opt/local_single_store_elim_pass.cpp",
        "third_party/spirv-tools/src/source/opt/loop_dependence.cpp",
        "third_party/spirv-tools/src/source/opt/loop_dependence_helpers.cpp",
        "third_party/spirv-tools/src/source/opt/loop_descriptor.cpp",
        "third_party/spirv-tools/src/source/opt/loop_fission.cpp",
        "third_party/spirv-tools/src/source/opt/loop_fusion.cpp",
        "third_party/spirv-tools/src/source/opt/loop_fusion_pass.cpp",
        "third_party/spirv-tools/src/source/opt/loop_peeling.cpp",
        "third_party/spirv-tools/src/source/opt/loop_unroller.cpp",
        "third_party/spirv-tools/src/source/opt/loop_unswitch_pass.cpp",
        "third_party/spirv-tools/src/source/opt/loop_utils.cpp",
        "third_party/spirv-tools/src/source/opt/mem_pass.cpp",
        "third_party/spirv-tools/src/source/opt/merge_return_pass.cpp",
        "third_party/spirv-tools/src/source/opt/module.cpp",
        "third_party/spirv-tools/src/source/opt/optimizer.cpp",
        "third_party/spirv-tools/src/source/opt/pass.cpp",
        "third_party/spirv-tools/src/source/opt/pass_manager.cpp",
        "third_party/spirv-tools/src/source/opt/private_to_local_pass.cpp",
        "third_party/spirv-tools/src/source/opt/process_lines_pass.cpp",
        "third_party/spirv-tools/src/source/opt/propagator.cpp",
        "third_party/spirv-tools/src/source/opt/reduce_load_size.cpp",
        "third_party/spirv-tools/src/source/opt/redundancy_elimination.cpp",
        "third_party/spirv-tools/src/source/opt/register_pressure.cpp",
        "third_party/spirv-tools/src/source/opt/relax_float_ops_pass.cpp",
        "third_party/spirv-tools/src/source/opt/remove_duplicates_pass.cpp",
        "third_party/spirv-tools/src/source/opt/replace_invalid_opc.cpp",
        "third_party/spirv-tools/src/source/opt/scalar_analysis.cpp",
        "third_party/spirv-tools/src/source/opt/scalar_analysis_simplification.cpp",
        "third_party/spirv-tools/src/source/opt/scalar_replacement_pass.cpp",
        "third_party/spirv-tools/src/source/opt/set_spec_constant_default_value_pass.cpp",
        "third_party/spirv-tools/src/source/opt/simplification_pass.cpp",
        "third_party/spirv-tools/src/source/opt/split_invalid_unreachable_pass.cpp",
        "third_party/spirv-tools/src/source/opt/ssa_rewrite_pass.cpp",
        "third_party/spirv-tools/src/source/opt/strength_reduction_pass.cpp",
        "third_party/spirv-tools/src/source/opt/strip_atomic_counter_memory_pass.cpp",
        "third_party/spirv-tools/src/source/opt/strip_debug_info_pass.cpp",
        "third_party/spirv-tools/src/source/opt/strip_reflect_info_pass.cpp",
        "third_party/spirv-tools/src/source/opt/struct_cfg_analysis.cpp",
        "third_party/spirv-tools/src/source/opt/type_manager.cpp",
        "third_party/spirv-tools/src/source/opt/types.cpp",
        "third_party/spirv-tools/src/source/opt/unify_const_pass.cpp",
        "third_party/spirv-tools/src/source/opt/upgrade_memory_model.cpp",
        "third_party/spirv-tools/src/source/opt/value_number_table.cpp",
        "third_party/spirv-tools/src/source/opt/vector_dce.cpp",
        "third_party/spirv-tools/src/source/opt/workaround1209.cpp",
        "third_party/spirv-tools/src/source/opt/wrap_opkill.cpp",
    ],
    sdk_version: "28",
    cflags: [
        "-DANDROID",
        "-DANDROID_NDK_VERSION_ROLL=r20_1",
        "-DCR_CLANG_REVISION=\"n344329-9284abd0-6\"",
        "-DDYNAMIC_ANNOTATIONS_ENABLED=0",
        "-DHAVE_SYS_UIO_H",
        "-DNDEBUG",
        "-DNVALGRIND",
        "-D_FORTIFY_SOURCE=2",
        "-D_GNU_SOURCE",
        "-D__STDC_CONSTANT_MACROS",
        "-D__STDC_FORMAT_MACROS",
        "-Wno-bitwise-conditional-parentheses",
        "-Wno-builtin-assume-aligned-alignment",
        "-Wno-builtin-macro-redefined",
        "-Wno-c++11-narrowing",
        "-Wno-deprecated-copy",
        "-Wno-final-dtor-non-final-class",
        "-Wno-ignored-pragma-optimize",
        "-Wno-implicit-fallthrough",
        "-Wno-implicit-int-float-conversion",
        "-Wno-missing-field-initializers",
        "-Wno-newline-eof",
        "-Wno-non-c-typedef-for-linkage",
        "-Wno-undefined-var-template",
        "-Wno-unknown-warning-option",
        "-Wno-unneeded-internal-declaration",
        "-Wno-unused-parameter",
    ],
    defaults: [
        "angle_spvtools_headers",
    ],
}
cc_defaults {
    generated_headers: [
        "angle_spvtools_core_enums_unified1",
        "angle_spvtools_core_tables_unified1",
        "angle_spvtools_generators_inc",
        "angle_spvtools_glsl_tables_glsl1-0",
        "angle_spvtools_language_header_cldebuginfo100",
        "angle_spvtools_language_header_debuginfo",
        "angle_spvtools_opencl_tables_opencl1-0",
        "angle_spvtools_vendor_tables_debuginfo",
        "angle_spvtools_vendor_tables_opencl.debuginfo.100",
        "angle_spvtools_vendor_tables_spv-amd-gcn-shader",
        "angle_spvtools_vendor_tables_spv-amd-shader-ballot",
        "angle_spvtools_vendor_tables_spv-amd-shader-explicit-vertex-parameter",
        "angle_spvtools_vendor_tables_spv-amd-shader-trinary-minmax",
    ],
    name: "angle_glslang_sources",
    stl: "libc++_static",
    static_libs: [
        "angle_spvtools",
        "angle_spvtools_opt",
        "angle_spvtools_val",
    ],
    local_include_dirs: [
        "",
        "third_party/glslang/src/",
        "third_party/spirv-tools/src/include/",
    ],
    srcs: [
        "third_party/glslang/src/OGLCompilersDLL/InitializeDll.cpp",
        "third_party/glslang/src/SPIRV/GlslangToSpv.cpp",
        "third_party/glslang/src/SPIRV/InReadableOrder.cpp",
        "third_party/glslang/src/SPIRV/Logger.cpp",
        "third_party/glslang/src/SPIRV/SPVRemapper.cpp",
        "third_party/glslang/src/SPIRV/SpvBuilder.cpp",
        "third_party/glslang/src/SPIRV/SpvPostProcess.cpp",
        "third_party/glslang/src/SPIRV/SpvTools.cpp",
        "third_party/glslang/src/SPIRV/disassemble.cpp",
        "third_party/glslang/src/SPIRV/doc.cpp",
        "third_party/glslang/src/glslang/GenericCodeGen/CodeGen.cpp",
        "third_party/glslang/src/glslang/GenericCodeGen/Link.cpp",
        "third_party/glslang/src/glslang/MachineIndependent/Constant.cpp",
        "third_party/glslang/src/glslang/MachineIndependent/InfoSink.cpp",
        "third_party/glslang/src/glslang/MachineIndependent/Initialize.cpp",
        "third_party/glslang/src/glslang/MachineIndependent/IntermTraverse.cpp",
        "third_party/glslang/src/glslang/MachineIndependent/Intermediate.cpp",
        "third_party/glslang/src/glslang/MachineIndependent/ParseContextBase.cpp",
        "third_party/glslang/src/glslang/MachineIndependent/ParseHelper.cpp",
        "third_party/glslang/src/glslang/MachineIndependent/PoolAlloc.cpp",
        "third_party/glslang/src/glslang/MachineIndependent/RemoveTree.cpp",
        "third_party/glslang/src/glslang/MachineIndependent/Scan.cpp",
        "third_party/glslang/src/glslang/MachineIndependent/ShaderLang.cpp",
        "third_party/glslang/src/glslang/MachineIndependent/SymbolTable.cpp",
        "third_party/glslang/src/glslang/MachineIndependent/Versions.cpp",
        "third_party/glslang/src/glslang/MachineIndependent/attribute.cpp",
        "third_party/glslang/src/glslang/MachineIndependent/glslang_tab.cpp",
        "third_party/glslang/src/glslang/MachineIndependent/intermOut.cpp",
        "third_party/glslang/src/glslang/MachineIndependent/iomapper.cpp",
        "third_party/glslang/src/glslang/MachineIndependent/limits.cpp",
        "third_party/glslang/src/glslang/MachineIndependent/linkValidate.cpp",
        "third_party/glslang/src/glslang/MachineIndependent/parseConst.cpp",
        "third_party/glslang/src/glslang/MachineIndependent/preprocessor/Pp.cpp",
        "third_party/glslang/src/glslang/MachineIndependent/preprocessor/PpAtom.cpp",
        "third_party/glslang/src/glslang/MachineIndependent/preprocessor/PpContext.cpp",
        "third_party/glslang/src/glslang/MachineIndependent/preprocessor/PpScanner.cpp",
        "third_party/glslang/src/glslang/MachineIndependent/preprocessor/PpTokens.cpp",
        "third_party/glslang/src/glslang/MachineIndependent/propagateNoContraction.cpp",
        "third_party/glslang/src/glslang/MachineIndependent/reflection.cpp",
        "third_party/glslang/src/glslang/OSDependent/Unix/ossource.cpp",
        "third_party/glslang/src/hlsl/hlslAttributes.cpp",
        "third_party/glslang/src/hlsl/hlslGrammar.cpp",
        "third_party/glslang/src/hlsl/hlslOpMap.cpp",
        "third_party/glslang/src/hlsl/hlslParseHelper.cpp",
        "third_party/glslang/src/hlsl/hlslParseables.cpp",
        "third_party/glslang/src/hlsl/hlslScanContext.cpp",
        "third_party/glslang/src/hlsl/hlslTokenStream.cpp",
    ],
    sdk_version: "28",
    cflags: [
        "-DANDROID",
        "-DANDROID_NDK_VERSION_ROLL=r20_1",
        "-DCR_CLANG_REVISION=\"n344329-9284abd0-6\"",
        "-DDYNAMIC_ANNOTATIONS_ENABLED=0",
        "-DENABLE_HLSL=1",
        "-DENABLE_OPT=1",
        "-DGLSLANG_OSINCLUDE_UNIX",
        "-DHAVE_SYS_UIO_H",
        "-DNDEBUG",
        "-DNVALGRIND",
        "-D_GNU_SOURCE",
        "-Wno-bitwise-conditional-parentheses",
        "-Wno-builtin-assume-aligned-alignment",
        "-Wno-builtin-macro-redefined",
        "-Wno-c++11-narrowing",
        "-Wno-deprecated-copy",
        "-Wno-extra-semi",
        "-Wno-final-dtor-non-final-class",
        "-Wno-ignored-pragma-optimize",
        "-Wno-ignored-qualifiers",
        "-Wno-implicit-fallthrough",
        "-Wno-implicit-int-float-conversion",
        "-Wno-inconsistent-missing-override",
        "-Wno-misleading-indentation",
        "-Wno-missing-field-initializers",
        "-Wno-newline-eof",
        "-Wno-non-c-typedef-for-linkage",
        "-Wno-sign-compare",
        "-Wno-undefined-var-template",
        "-Wno-unknown-warning-option",
        "-Wno-unneeded-internal-declaration",
        "-Wno-unused-parameter",
        "-Wno-unused-variable",
    ],
}
cc_defaults {
    generated_headers: [
        "angle_spvtools_core_enums_unified1",
        "angle_spvtools_core_tables_unified1",
        "angle_spvtools_generators_inc",
        "angle_spvtools_glsl_tables_glsl1-0",
        "angle_spvtools_language_header_cldebuginfo100",
        "angle_spvtools_language_header_debuginfo",
        "angle_spvtools_opencl_tables_opencl1-0",
        "angle_spvtools_vendor_tables_debuginfo",
        "angle_spvtools_vendor_tables_opencl.debuginfo.100",
        "angle_spvtools_vendor_tables_spv-amd-gcn-shader",
        "angle_spvtools_vendor_tables_spv-amd-shader-ballot",
        "angle_spvtools_vendor_tables_spv-amd-shader-explicit-vertex-parameter",
        "angle_spvtools_vendor_tables_spv-amd-shader-trinary-minmax",
    ],
    name: "angle_glslang_default_resource_limits_sources",
    stl: "libc++_static",
    static_libs: [
        "angle_spvtools",
        "angle_spvtools_opt",
        "angle_spvtools_val",
    ],
    local_include_dirs: [
        "",
        "third_party/glslang/src/",
    ],
    srcs: [
        "third_party/glslang/src/StandAlone/ResourceLimits.cpp",
    ],
    sdk_version: "28",
    cflags: [
        "-DANDROID",
        "-DANDROID_NDK_VERSION_ROLL=r20_1",
        "-DCR_CLANG_REVISION=\"n344329-9284abd0-6\"",
        "-DDYNAMIC_ANNOTATIONS_ENABLED=0",
        "-DENABLE_HLSL=1",
        "-DHAVE_SYS_UIO_H",
        "-DNDEBUG",
        "-DNVALGRIND",
        "-D_GNU_SOURCE",
        "-Wno-bitwise-conditional-parentheses",
        "-Wno-builtin-assume-aligned-alignment",
        "-Wno-builtin-macro-redefined",
        "-Wno-c++11-narrowing",
        "-Wno-deprecated-copy",
        "-Wno-final-dtor-non-final-class",
        "-Wno-ignored-pragma-optimize",
        "-Wno-implicit-fallthrough",
        "-Wno-implicit-int-float-conversion",
        "-Wno-misleading-indentation",
        "-Wno-missing-field-initializers",
        "-Wno-non-c-typedef-for-linkage",
        "-Wno-undefined-var-template",
        "-Wno-unknown-warning-option",
        "-Wno-unneeded-internal-declaration",
        "-Wno-unused-parameter",
        "-Wno-unused-variable",
    ],
    defaults: [
        "angle_glslang_sources",
    ],
}
cc_defaults {
    generated_headers: [
        "angle_commit_id",
        "angle_spvtools_core_enums_unified1",
        "angle_spvtools_core_tables_unified1",
        "angle_spvtools_generators_inc",
        "angle_spvtools_glsl_tables_glsl1-0",
        "angle_spvtools_language_header_cldebuginfo100",
        "angle_spvtools_language_header_debuginfo",
        "angle_spvtools_opencl_tables_opencl1-0",
        "angle_spvtools_vendor_tables_debuginfo",
        "angle_spvtools_vendor_tables_opencl.debuginfo.100",
        "angle_spvtools_vendor_tables_spv-amd-gcn-shader",
        "angle_spvtools_vendor_tables_spv-amd-shader-ballot",
        "angle_spvtools_vendor_tables_spv-amd-shader-explicit-vertex-parameter",
        "angle_spvtools_vendor_tables_spv-amd-shader-trinary-minmax",
    ],
    name: "angle_glslang_wrapper",
    stl: "libc++_static",
    static_libs: [
        "angle_common",
        "angle_spvtools",
        "angle_spvtools_opt",
        "angle_spvtools_val",
    ],
    shared_libs: [
        "liblog",
        "libnativewindow",
    ],
    local_include_dirs: [
        "",
        "include/",
        "src/",
        "src/common/third_party/base/",
        "third_party/glslang/src/",
        "third_party/spirv-headers/src/include/",
        "third_party/spirv-tools/src/include/",
    ],
    srcs: [
        "src/libANGLE/renderer/glslang_wrapper_utils.cpp",
    ],
    sdk_version: "28",
    cflags: [
        "-DANDROID",
        "-DANDROID_NDK_VERSION_ROLL=r20_1",
        "-DCR_CLANG_REVISION=\"n344329-9284abd0-6\"",
        "-DDYNAMIC_ANNOTATIONS_ENABLED=0",
        "-DENABLE_HLSL=1",
        "-DHAVE_SYS_UIO_H",
        "-DLIBANGLE_IMPLEMENTATION",
        "-DNDEBUG",
        "-DNVALGRIND",
        "-D_FORTIFY_SOURCE=2",
        "-D_GNU_SOURCE",
        "-D__STDC_CONSTANT_MACROS",
        "-D__STDC_FORMAT_MACROS",
        "-Wno-bitwise-conditional-parentheses",
        "-Wno-builtin-assume-aligned-alignment",
        "-Wno-builtin-macro-redefined",
        "-Wno-c++11-narrowing",
        "-Wno-deprecated-copy",
        "-Wno-final-dtor-non-final-class",
        "-Wno-ignored-pragma-optimize",
        "-Wno-implicit-fallthrough",
        "-Wno-implicit-int-float-conversion",
        "-Wno-missing-field-initializers",
        "-Wno-non-c-typedef-for-linkage",
        "-Wno-undefined-var-template",
        "-Wno-unknown-warning-option",
        "-Wno-unneeded-internal-declaration",
        "-Wno-unused-parameter",
    ],
    defaults: [
        "angle_glslang_default_resource_limits_sources",
        "angle_glslang_sources",
        "angle_libANGLE_headers",
        "angle_spv_headers",
        "angle_spvtools_headers",
    ],
    arch: {
        arm64: {
            cflags: [
                "-DANGLE_IS_64_BIT_CPU",
            ],
        },
        x86_64: {
            cflags: [
                "-DANGLE_IS_64_BIT_CPU",
            ],
        },
        x86: {
            cflags: [
                "-DANGLE_IS_32_BIT_CPU",
            ],
        },
        arm: {
            cflags: [
                "-DANGLE_IS_32_BIT_CPU",
            ],
        },
    },
}
cc_defaults {
    generated_headers: [
        "angle_commit_id",
        "angle_spvtools_core_enums_unified1",
        "angle_spvtools_core_tables_unified1",
        "angle_spvtools_generators_inc",
        "angle_spvtools_glsl_tables_glsl1-0",
        "angle_spvtools_language_header_cldebuginfo100",
        "angle_spvtools_language_header_debuginfo",
        "angle_spvtools_opencl_tables_opencl1-0",
        "angle_spvtools_vendor_tables_debuginfo",
        "angle_spvtools_vendor_tables_opencl.debuginfo.100",
        "angle_spvtools_vendor_tables_spv-amd-gcn-shader",
        "angle_spvtools_vendor_tables_spv-amd-shader-ballot",
        "angle_spvtools_vendor_tables_spv-amd-shader-explicit-vertex-parameter",
        "angle_spvtools_vendor_tables_spv-amd-shader-trinary-minmax",
    ],
    name: "angle_vulkan_backend",
    stl: "libc++_static",
    static_libs: [
        "angle_common",
        "angle_gpu_info_util",
        "angle_image_util",
        "angle_spvtools",
        "angle_spvtools_opt",
        "angle_spvtools_val",
    ],
    shared_libs: [
        "liblog",
        "libnativewindow",
        "libvulkan",
    ],
    local_include_dirs: [
        "",
        "include/",
        "src/",
        "src/common/third_party/base/",
        "src/third_party/volk/",
        "third_party/spirv-tools/src/include/",
        "third_party/vulkan-headers/src/include/",
    ],
    srcs: [
        "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "src/libANGLE/renderer/vulkan/CompilerVk.cpp",
        "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "src/libANGLE/renderer/vulkan/DeviceVk.cpp",
        "src/libANGLE/renderer/vulkan/DisplayVk.cpp",
        "src/libANGLE/renderer/vulkan/FenceNVVk.cpp",
        "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "src/libANGLE/renderer/vulkan/GlslangWrapperVk.cpp",
        "src/libANGLE/renderer/vulkan/ImageVk.cpp",
        "src/libANGLE/renderer/vulkan/MemoryObjectVk.cpp",
        "src/libANGLE/renderer/vulkan/OverlayVk.cpp",
        "src/libANGLE/renderer/vulkan/PersistentCommandPool.cpp",
        "src/libANGLE/renderer/vulkan/ProgramExecutableVk.cpp",
        "src/libANGLE/renderer/vulkan/ProgramPipelineVk.cpp",
        "src/libANGLE/renderer/vulkan/ProgramVk.cpp",
        "src/libANGLE/renderer/vulkan/QueryVk.cpp",
        "src/libANGLE/renderer/vulkan/RenderTargetVk.cpp",
        "src/libANGLE/renderer/vulkan/RenderbufferVk.cpp",
        "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "src/libANGLE/renderer/vulkan/ResourceVk.cpp",
        "src/libANGLE/renderer/vulkan/SamplerVk.cpp",
        "src/libANGLE/renderer/vulkan/SecondaryCommandBuffer.cpp",
        "src/libANGLE/renderer/vulkan/SemaphoreVk.cpp",
        "src/libANGLE/renderer/vulkan/ShaderVk.cpp",
        "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "src/libANGLE/renderer/vulkan/SyncVk.cpp",
        "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "src/libANGLE/renderer/vulkan/TransformFeedbackVk.cpp",
        "src/libANGLE/renderer/vulkan/UtilsVk.cpp",
        "src/libANGLE/renderer/vulkan/VertexArrayVk.cpp",
        "src/libANGLE/renderer/vulkan/android/DisplayVkAndroid.cpp",
        "src/libANGLE/renderer/vulkan/android/HardwareBufferImageSiblingVkAndroid.cpp",
        "src/libANGLE/renderer/vulkan/android/WindowSurfaceVkAndroid.cpp",
        "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "src/libANGLE/renderer/vulkan/vk_caps_utils.cpp",
        "src/libANGLE/renderer/vulkan/vk_format_table_autogen.cpp",
        "src/libANGLE/renderer/vulkan/vk_format_utils.cpp",
        "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "src/libANGLE/renderer/vulkan/vk_internal_shaders_autogen.cpp",
        "src/libANGLE/renderer/vulkan/vk_mandatory_format_support_table_autogen.cpp",
        "src/libANGLE/renderer/vulkan/vk_utils.cpp",
    ],
    sdk_version: "28",
    cflags: [
        "-DANDROID",
        "-DANDROID_NDK_VERSION_ROLL=r20_1",
        "-DANGLE_ENABLE_OPENGL",
        "-DANGLE_ENABLE_OPENGL_NULL",
        "-DANGLE_ENABLE_VULKAN",
        "-DANGLE_USE_CUSTOM_VULKAN_CMD_BUFFERS=1",
        "-DANGLE_VK_LAYERS_DIR=\"angledata\"",
        "-DANGLE_VK_MOCK_ICD_JSON=\"angledata/VkICD_mock_icd.json\"",
        "-DCR_CLANG_REVISION=\"n344329-9284abd0-6\"",
        "-DDYNAMIC_ANNOTATIONS_ENABLED=0",
        "-DHAVE_SYS_UIO_H",
        "-DLIBANGLE_IMPLEMENTATION",
        "-DNDEBUG",
        "-DNVALGRIND",
        "-DVK_USE_PLATFORM_ANDROID_KHR",
        "-D_FORTIFY_SOURCE=2",
        "-D_GNU_SOURCE",
        "-D__STDC_CONSTANT_MACROS",
        "-D__STDC_FORMAT_MACROS",
        "-Wno-bitwise-conditional-parentheses",
        "-Wno-builtin-assume-aligned-alignment",
        "-Wno-builtin-macro-redefined",
        "-Wno-c++11-narrowing",
        "-Wno-deprecated-copy",
        "-Wno-final-dtor-non-final-class",
        "-Wno-ignored-pragma-optimize",
        "-Wno-implicit-fallthrough",
        "-Wno-implicit-int-float-conversion",
        "-Wno-missing-field-initializers",
        "-Wno-non-c-typedef-for-linkage",
        "-Wno-undefined-var-template",
        "-Wno-unknown-warning-option",
        "-Wno-unneeded-internal-declaration",
        "-Wno-unused-parameter",
    ],
    defaults: [
        "angle_glslang_wrapper",
        "angle_libANGLE_headers",
        "angle_vk_mem_alloc_wrapper",
        "angle_vulkan_entry_points",
        "angle_vulkan_headers",
    ],
    arch: {
        arm64: {
            cflags: [
                "-DANGLE_IS_64_BIT_CPU",
            ],
        },
        x86_64: {
            cflags: [
                "-DANGLE_IS_64_BIT_CPU",
            ],
        },
        x86: {
            cflags: [
                "-DANGLE_IS_32_BIT_CPU",
            ],
        },
        arm: {
            cflags: [
                "-DANGLE_IS_32_BIT_CPU",
            ],
        },
    },
}
cc_library_static {
    generated_headers: [
        "angle_commit_id",
    ],
    name: "angle_preprocessor",
    stl: "libc++_static",
    static_libs: [
        "angle_common",
    ],
    shared_libs: [
        "liblog",
    ],
    local_include_dirs: [
        "",
        "include/",
        "src/",
        "src/common/third_party/base/",
    ],
    srcs: [
        "src/compiler/preprocessor/DiagnosticsBase.cpp",
        "src/compiler/preprocessor/DirectiveHandlerBase.cpp",
        "src/compiler/preprocessor/DirectiveParser.cpp",
        "src/compiler/preprocessor/Input.cpp",
        "src/compiler/preprocessor/Lexer.cpp",
        "src/compiler/preprocessor/Macro.cpp",
        "src/compiler/preprocessor/MacroExpander.cpp",
        "src/compiler/preprocessor/Preprocessor.cpp",
        "src/compiler/preprocessor/Token.cpp",
        "src/compiler/preprocessor/preprocessor_lex_autogen.cpp",
        "src/compiler/preprocessor/preprocessor_tab_autogen.cpp",
    ],
    sdk_version: "28",
    cflags: [
        "-DANDROID",
        "-DANDROID_NDK_VERSION_ROLL=r20_1",
        "-DCR_CLANG_REVISION=\"n344329-9284abd0-6\"",
        "-DDYNAMIC_ANNOTATIONS_ENABLED=0",
        "-DHAVE_SYS_UIO_H",
        "-DNDEBUG",
        "-DNVALGRIND",
        "-D_FORTIFY_SOURCE=2",
        "-D_GNU_SOURCE",
        "-D__STDC_CONSTANT_MACROS",
        "-D__STDC_FORMAT_MACROS",
        "-Wno-bitwise-conditional-parentheses",
        "-Wno-builtin-assume-aligned-alignment",
        "-Wno-builtin-macro-redefined",
        "-Wno-c++11-narrowing",
        "-Wno-deprecated-copy",
        "-Wno-final-dtor-non-final-class",
        "-Wno-ignored-pragma-optimize",
        "-Wno-implicit-fallthrough",
        "-Wno-implicit-int-float-conversion",
        "-Wno-missing-field-initializers",
        "-Wno-non-c-typedef-for-linkage",
        "-Wno-undefined-var-template",
        "-Wno-unknown-warning-option",
        "-Wno-unneeded-internal-declaration",
        "-Wno-unused-parameter",
    ],
    defaults: [
        "angle_translator_headers",
    ],
    arch: {
        arm64: {
            cflags: [
                "-DANGLE_IS_64_BIT_CPU",
            ],
        },
        x86_64: {
            cflags: [
                "-DANGLE_IS_64_BIT_CPU",
            ],
        },
        x86: {
            cflags: [
                "-DANGLE_IS_32_BIT_CPU",
            ],
        },
        arm: {
            cflags: [
                "-DANGLE_IS_32_BIT_CPU",
            ],
        },
    },
}
cc_library_static {
    generated_headers: [
        "angle_commit_id",
    ],
    name: "angle_translator",
    stl: "libc++_static",
    static_libs: [
        "angle_common",
        "angle_preprocessor",
    ],
    shared_libs: [
        "liblog",
    ],
    local_include_dirs: [
        "",
        "include/",
        "src/",
        "src/common/third_party/base/",
    ],
    srcs: [
        "src/compiler/translator/BuiltInFunctionEmulator.cpp",
        "src/compiler/translator/BuiltInFunctionEmulatorGLSL.cpp",
        "src/compiler/translator/BuiltinsWorkaroundGLSL.cpp",
        "src/compiler/translator/CallDAG.cpp",
        "src/compiler/translator/CodeGen.cpp",
        "src/compiler/translator/CollectVariables.cpp",
        "src/compiler/translator/Compiler.cpp",
        "src/compiler/translator/ConstantUnion.cpp",
        "src/compiler/translator/Declarator.cpp",
        "src/compiler/translator/Diagnostics.cpp",
        "src/compiler/translator/DirectiveHandler.cpp",
        "src/compiler/translator/ExtensionBehavior.cpp",
        "src/compiler/translator/ExtensionGLSL.cpp",
        "src/compiler/translator/FlagStd140Structs.cpp",
        "src/compiler/translator/FunctionLookup.cpp",
        "src/compiler/translator/HashNames.cpp",
        "src/compiler/translator/ImmutableStringBuilder.cpp",
        "src/compiler/translator/ImmutableString_ESSL_autogen.cpp",
        "src/compiler/translator/InfoSink.cpp",
        "src/compiler/translator/Initialize.cpp",
        "src/compiler/translator/InitializeDll.cpp",
        "src/compiler/translator/IntermNode.cpp",
        "src/compiler/translator/IsASTDepthBelowLimit.cpp",
        "src/compiler/translator/Operator.cpp",
        "src/compiler/translator/OutputESSL.cpp",
        "src/compiler/translator/OutputGLSL.cpp",
        "src/compiler/translator/OutputGLSLBase.cpp",
        "src/compiler/translator/OutputTree.cpp",
        "src/compiler/translator/OutputVulkanGLSL.cpp",
        "src/compiler/translator/ParseContext.cpp",
        "src/compiler/translator/PoolAlloc.cpp",
        "src/compiler/translator/QualifierTypes.cpp",
        "src/compiler/translator/ShaderLang.cpp",
        "src/compiler/translator/ShaderVars.cpp",
        "src/compiler/translator/Symbol.cpp",
        "src/compiler/translator/SymbolTable.cpp",
        "src/compiler/translator/SymbolTable_ESSL_autogen.cpp",
        "src/compiler/translator/SymbolUniqueId.cpp",
        "src/compiler/translator/TranslatorESSL.cpp",
        "src/compiler/translator/TranslatorGLSL.cpp",
        "src/compiler/translator/TranslatorVulkan.cpp",
        "src/compiler/translator/Types.cpp",
        "src/compiler/translator/ValidateAST.cpp",
        "src/compiler/translator/ValidateGlobalInitializer.cpp",
        "src/compiler/translator/ValidateLimitations.cpp",
        "src/compiler/translator/ValidateMaxParameters.cpp",
        "src/compiler/translator/ValidateOutputs.cpp",
        "src/compiler/translator/ValidateSwitch.cpp",
        "src/compiler/translator/ValidateVaryingLocations.cpp",
        "src/compiler/translator/VariablePacker.cpp",
        "src/compiler/translator/VersionGLSL.cpp",
        "src/compiler/translator/blocklayout.cpp",
        "src/compiler/translator/glslang_lex_autogen.cpp",
        "src/compiler/translator/glslang_tab_autogen.cpp",
        "src/compiler/translator/tree_ops/AddAndTrueToLoopCondition.cpp",
        "src/compiler/translator/tree_ops/BreakVariableAliasingInInnerLoops.cpp",
        "src/compiler/translator/tree_ops/ClampFragDepth.cpp",
        "src/compiler/translator/tree_ops/ClampPointSize.cpp",
        "src/compiler/translator/tree_ops/DeclareAndInitBuiltinsForInstancedMultiview.cpp",
        "src/compiler/translator/tree_ops/DeferGlobalInitializers.cpp",
        "src/compiler/translator/tree_ops/EarlyFragmentTestsOptimization.cpp",
        "src/compiler/translator/tree_ops/EmulateGLFragColorBroadcast.cpp",
        "src/compiler/translator/tree_ops/EmulateMultiDrawShaderBuiltins.cpp",
        "src/compiler/translator/tree_ops/EmulatePrecision.cpp",
        "src/compiler/translator/tree_ops/ExpandIntegerPowExpressions.cpp",
        "src/compiler/translator/tree_ops/FoldExpressions.cpp",
        "src/compiler/translator/tree_ops/InitializeVariables.cpp",
        "src/compiler/translator/tree_ops/NameEmbeddedUniformStructs.cpp",
        "src/compiler/translator/tree_ops/PruneEmptyCases.cpp",
        "src/compiler/translator/tree_ops/PruneNoOps.cpp",
        "src/compiler/translator/tree_ops/RecordConstantPrecision.cpp",
        "src/compiler/translator/tree_ops/RegenerateStructNames.cpp",
        "src/compiler/translator/tree_ops/RemoveArrayLengthMethod.cpp",
        "src/compiler/translator/tree_ops/RemoveAtomicCounterBuiltins.cpp",
        "src/compiler/translator/tree_ops/RemoveDynamicIndexing.cpp",
        "src/compiler/translator/tree_ops/RemoveInactiveInterfaceVariables.cpp",
        "src/compiler/translator/tree_ops/RemoveInvariantDeclaration.cpp",
        "src/compiler/translator/tree_ops/RemovePow.cpp",
        "src/compiler/translator/tree_ops/RemoveUnreferencedVariables.cpp",
        "src/compiler/translator/tree_ops/RewriteAtomicCounters.cpp",
        "src/compiler/translator/tree_ops/RewriteAtomicFunctionExpressions.cpp",
        "src/compiler/translator/tree_ops/RewriteCubeMapSamplersAs2DArray.cpp",
        "src/compiler/translator/tree_ops/RewriteDfdy.cpp",
        "src/compiler/translator/tree_ops/RewriteDoWhile.cpp",
        "src/compiler/translator/tree_ops/RewriteExpressionsWithShaderStorageBlock.cpp",
        "src/compiler/translator/tree_ops/RewriteRepeatedAssignToSwizzled.cpp",
        "src/compiler/translator/tree_ops/RewriteRowMajorMatrices.cpp",
        "src/compiler/translator/tree_ops/RewriteStructSamplers.cpp",
        "src/compiler/translator/tree_ops/RewriteStructSamplersOld.cpp",
        "src/compiler/translator/tree_ops/RewriteTexelFetchOffset.cpp",
        "src/compiler/translator/tree_ops/RewriteUnaryMinusOperatorFloat.cpp",
        "src/compiler/translator/tree_ops/RewriteUnaryMinusOperatorInt.cpp",
        "src/compiler/translator/tree_ops/ScalarizeVecAndMatConstructorArgs.cpp",
        "src/compiler/translator/tree_ops/SeparateDeclarations.cpp",
        "src/compiler/translator/tree_ops/SimplifyLoopConditions.cpp",
        "src/compiler/translator/tree_ops/SplitSequenceOperator.cpp",
        "src/compiler/translator/tree_ops/UnfoldShortCircuitAST.cpp",
        "src/compiler/translator/tree_ops/UseInterfaceBlockFields.cpp",
        "src/compiler/translator/tree_ops/VectorizeVectorScalarArithmetic.cpp",
        "src/compiler/translator/tree_util/FindFunction.cpp",
        "src/compiler/translator/tree_util/FindMain.cpp",
        "src/compiler/translator/tree_util/FindSymbolNode.cpp",
        "src/compiler/translator/tree_util/IntermNodePatternMatcher.cpp",
        "src/compiler/translator/tree_util/IntermNode_util.cpp",
        "src/compiler/translator/tree_util/IntermTraverse.cpp",
        "src/compiler/translator/tree_util/ReplaceShadowingVariables.cpp",
        "src/compiler/translator/tree_util/ReplaceVariable.cpp",
        "src/compiler/translator/tree_util/RunAtTheEndOfShader.cpp",
        "src/compiler/translator/util.cpp",
        "src/third_party/compiler/ArrayBoundsClamper.cpp",
    ],
    sdk_version: "28",
    cflags: [
        "-DANDROID",
        "-DANDROID_NDK_VERSION_ROLL=r20_1",
        "-DANGLE_ENABLE_ESSL",
        "-DANGLE_ENABLE_GLSL",
        "-DANGLE_ENABLE_VULKAN",
        "-DCR_CLANG_REVISION=\"n344329-9284abd0-6\"",
        "-DDYNAMIC_ANNOTATIONS_ENABLED=0",
        "-DHAVE_SYS_UIO_H",
        "-DNDEBUG",
        "-DNVALGRIND",
        "-D_FORTIFY_SOURCE=2",
        "-D_GNU_SOURCE",
        "-D__STDC_CONSTANT_MACROS",
        "-D__STDC_FORMAT_MACROS",
        "-Wno-bitwise-conditional-parentheses",
        "-Wno-builtin-assume-aligned-alignment",
        "-Wno-builtin-macro-redefined",
        "-Wno-c++11-narrowing",
        "-Wno-deprecated-copy",
        "-Wno-final-dtor-non-final-class",
        "-Wno-ignored-pragma-optimize",
        "-Wno-implicit-fallthrough",
        "-Wno-implicit-int-float-conversion",
        "-Wno-missing-field-initializers",
        "-Wno-non-c-typedef-for-linkage",
        "-Wno-undefined-var-template",
        "-Wno-unknown-warning-option",
        "-Wno-unneeded-internal-declaration",
        "-Wno-unused-parameter",
    ],
    defaults: [
        "angle_includes",
        "angle_translator_headers",
    ],
    arch: {
        arm64: {
            cflags: [
                "-DANGLE_IS_64_BIT_CPU",
            ],
        },
        x86_64: {
            cflags: [
                "-DANGLE_IS_64_BIT_CPU",
            ],
        },
        x86: {
            cflags: [
                "-DANGLE_IS_32_BIT_CPU",
            ],
        },
        arm: {
            cflags: [
                "-DANGLE_IS_32_BIT_CPU",
            ],
        },
    },
}
cc_defaults {
    name: "angle_translator_headers",
    stl: "libc++_static",
    local_include_dirs: [
        "include/",
        "src/",
    ],
    sdk_version: "28",
    cflags: [
        "-DANDROID",
        "-DANDROID_NDK_VERSION_ROLL=r20_1",
        "-DCR_CLANG_REVISION=\"n344329-9284abd0-6\"",
        "-DDYNAMIC_ANNOTATIONS_ENABLED=0",
        "-DHAVE_SYS_UIO_H",
        "-DNDEBUG",
        "-DNVALGRIND",
        "-D_FORTIFY_SOURCE=2",
        "-D_GNU_SOURCE",
        "-D__STDC_CONSTANT_MACROS",
        "-D__STDC_FORMAT_MACROS",
        "-Wno-bitwise-conditional-parentheses",
        "-Wno-builtin-assume-aligned-alignment",
        "-Wno-builtin-macro-redefined",
        "-Wno-c++11-narrowing",
        "-Wno-deprecated-copy",
        "-Wno-final-dtor-non-final-class",
        "-Wno-ignored-pragma-optimize",
        "-Wno-implicit-fallthrough",
        "-Wno-implicit-int-float-conversion",
        "-Wno-missing-field-initializers",
        "-Wno-non-c-typedef-for-linkage",
        "-Wno-undefined-var-template",
        "-Wno-unknown-warning-option",
        "-Wno-unneeded-internal-declaration",
        "-Wno-unused-parameter",
    ],
    defaults: [
        "angle_includes",
    ],
    arch: {
        arm64: {
            cflags: [
                "-DANGLE_IS_64_BIT_CPU",
            ],
        },
        x86_64: {
            cflags: [
                "-DANGLE_IS_64_BIT_CPU",
            ],
        },
        x86: {
            cflags: [
                "-DANGLE_IS_32_BIT_CPU",
            ],
        },
        arm: {
            cflags: [
                "-DANGLE_IS_32_BIT_CPU",
            ],
        },
    },
}
cc_defaults {
    generated_headers: [
        "angle_commit_id",
    ],
    name: "angle_libANGLE_headers",
    stl: "libc++_static",
    static_libs: [
        "angle_common",
    ],
    shared_libs: [
        "liblog",
        "libnativewindow",
    ],
    local_include_dirs: [
        "",
        "include/",
        "src/",
        "src/common/third_party/base/",
    ],
    srcs: [
        "src/libANGLE/Overlay.cpp",
        "src/libANGLE/OverlayWidgets.cpp",
        "src/libANGLE/Overlay_autogen.cpp",
        "src/libANGLE/Overlay_font_autogen.cpp",
    ],
    sdk_version: "28",
    cflags: [
        "-DANDROID",
        "-DANDROID_NDK_VERSION_ROLL=r20_1",
        "-DCR_CLANG_REVISION=\"n344329-9284abd0-6\"",
        "-DDYNAMIC_ANNOTATIONS_ENABLED=0",
        "-DHAVE_SYS_UIO_H",
        "-DLIBANGLE_IMPLEMENTATION",
        "-DNDEBUG",
        "-DNVALGRIND",
        "-D_FORTIFY_SOURCE=2",
        "-D_GNU_SOURCE",
        "-D__STDC_CONSTANT_MACROS",
        "-D__STDC_FORMAT_MACROS",
        "-Wno-bitwise-conditional-parentheses",
        "-Wno-builtin-assume-aligned-alignment",
        "-Wno-builtin-macro-redefined",
        "-Wno-c++11-narrowing",
        "-Wno-deprecated-copy",
        "-Wno-final-dtor-non-final-class",
        "-Wno-ignored-pragma-optimize",
        "-Wno-implicit-fallthrough",
        "-Wno-implicit-int-float-conversion",
        "-Wno-missing-field-initializers",
        "-Wno-non-c-typedef-for-linkage",
        "-Wno-undefined-var-template",
        "-Wno-unknown-warning-option",
        "-Wno-unneeded-internal-declaration",
        "-Wno-unused-parameter",
    ],
    defaults: [
        "angle_translator_headers",
    ],
    arch: {
        arm64: {
            cflags: [
                "-DANGLE_IS_64_BIT_CPU",
            ],
        },
        x86_64: {
            cflags: [
                "-DANGLE_IS_64_BIT_CPU",
            ],
        },
        x86: {
            cflags: [
                "-DANGLE_IS_32_BIT_CPU",
            ],
        },
        arm: {
            cflags: [
                "-DANGLE_IS_32_BIT_CPU",
            ],
        },
    },
}
cc_defaults {
    generated_headers: [
        "angle_commit_id",
    ],
    name: "angle_image_util_headers",
    stl: "libc++_static",
    static_libs: [
        "angle_common",
    ],
    shared_libs: [
        "liblog",
    ],
    local_include_dirs: [
        "",
        "include/",
        "src/",
        "src/common/third_party/base/",
    ],
    sdk_version: "28",
    cflags: [
        "-DANDROID",
        "-DANDROID_NDK_VERSION_ROLL=r20_1",
        "-DCR_CLANG_REVISION=\"n344329-9284abd0-6\"",
        "-DDYNAMIC_ANNOTATIONS_ENABLED=0",
        "-DHAVE_SYS_UIO_H",
        "-DNDEBUG",
        "-DNVALGRIND",
        "-D_FORTIFY_SOURCE=2",
        "-D_GNU_SOURCE",
        "-D__STDC_CONSTANT_MACROS",
        "-D__STDC_FORMAT_MACROS",
        "-Wno-bitwise-conditional-parentheses",
        "-Wno-builtin-assume-aligned-alignment",
        "-Wno-builtin-macro-redefined",
        "-Wno-c++11-narrowing",
        "-Wno-deprecated-copy",
        "-Wno-final-dtor-non-final-class",
        "-Wno-ignored-pragma-optimize",
        "-Wno-implicit-fallthrough",
        "-Wno-implicit-int-float-conversion",
        "-Wno-missing-field-initializers",
        "-Wno-non-c-typedef-for-linkage",
        "-Wno-undefined-var-template",
        "-Wno-unknown-warning-option",
        "-Wno-unneeded-internal-declaration",
        "-Wno-unused-parameter",
    ],
    arch: {
        arm64: {
            cflags: [
                "-DANGLE_IS_64_BIT_CPU",
            ],
        },
        x86_64: {
            cflags: [
                "-DANGLE_IS_64_BIT_CPU",
            ],
        },
        x86: {
            cflags: [
                "-DANGLE_IS_32_BIT_CPU",
            ],
        },
        arm: {
            cflags: [
                "-DANGLE_IS_32_BIT_CPU",
            ],
        },
    },
}
cc_library_static {
    generated_headers: [
        "angle_commit_id",
    ],
    name: "angle_image_util",
    stl: "libc++_static",
    static_libs: [
        "angle_common",
    ],
    shared_libs: [
        "liblog",
    ],
    local_include_dirs: [
        "",
        "include/",
        "src/",
        "src/common/third_party/base/",
    ],
    srcs: [
        "src/image_util/copyimage.cpp",
        "src/image_util/imageformats.cpp",
        "src/image_util/loadimage.cpp",
        "src/image_util/loadimage_etc.cpp",
    ],
    sdk_version: "28",
    cflags: [
        "-DANDROID",
        "-DANDROID_NDK_VERSION_ROLL=r20_1",
        "-DCR_CLANG_REVISION=\"n344329-9284abd0-6\"",
        "-DDYNAMIC_ANNOTATIONS_ENABLED=0",
        "-DHAVE_SYS_UIO_H",
        "-DNDEBUG",
        "-DNVALGRIND",
        "-D_FORTIFY_SOURCE=2",
        "-D_GNU_SOURCE",
        "-D__STDC_CONSTANT_MACROS",
        "-D__STDC_FORMAT_MACROS",
        "-Wno-bitwise-conditional-parentheses",
        "-Wno-builtin-assume-aligned-alignment",
        "-Wno-builtin-macro-redefined",
        "-Wno-c++11-narrowing",
        "-Wno-deprecated-copy",
        "-Wno-final-dtor-non-final-class",
        "-Wno-ignored-pragma-optimize",
        "-Wno-implicit-fallthrough",
        "-Wno-implicit-int-float-conversion",
        "-Wno-missing-field-initializers",
        "-Wno-non-c-typedef-for-linkage",
        "-Wno-undefined-var-template",
        "-Wno-unknown-warning-option",
        "-Wno-unneeded-internal-declaration",
        "-Wno-unused-parameter",
    ],
    defaults: [
        "angle_image_util_headers",
    ],
    arch: {
        arm64: {
            cflags: [
                "-DANGLE_IS_64_BIT_CPU",
            ],
        },
        x86_64: {
            cflags: [
                "-DANGLE_IS_64_BIT_CPU",
            ],
        },
        x86: {
            cflags: [
                "-DANGLE_IS_32_BIT_CPU",
            ],
        },
        arm: {
            cflags: [
                "-DANGLE_IS_32_BIT_CPU",
            ],
        },
    },
}
cc_defaults {
    name: "angle_vulkan_headers",
    stl: "libc++_static",
    local_include_dirs: [
        "",
        "third_party/vulkan-headers/src/include/",
    ],
    sdk_version: "28",
    cflags: [
        "-DANDROID",
        "-DANDROID_NDK_VERSION_ROLL=r20_1",
        "-DCR_CLANG_REVISION=\"n344329-9284abd0-6\"",
        "-DDYNAMIC_ANNOTATIONS_ENABLED=0",
        "-DHAVE_SYS_UIO_H",
        "-DNDEBUG",
        "-DNVALGRIND",
        "-DVK_USE_PLATFORM_ANDROID_KHR",
        "-D_FORTIFY_SOURCE=2",
        "-D_GNU_SOURCE",
        "-D__STDC_CONSTANT_MACROS",
        "-D__STDC_FORMAT_MACROS",
        "-Wno-bitwise-conditional-parentheses",
        "-Wno-builtin-assume-aligned-alignment",
        "-Wno-builtin-macro-redefined",
        "-Wno-c++11-narrowing",
        "-Wno-deprecated-copy",
        "-Wno-final-dtor-non-final-class",
        "-Wno-ignored-pragma-optimize",
        "-Wno-implicit-fallthrough",
        "-Wno-implicit-int-float-conversion",
        "-Wno-missing-field-initializers",
        "-Wno-non-c-typedef-for-linkage",
        "-Wno-undefined-var-template",
        "-Wno-unknown-warning-option",
        "-Wno-unneeded-internal-declaration",
        "-Wno-unused-parameter",
    ],
}
cc_library_static {
    generated_headers: [
        "angle_commit_id",
    ],
    name: "angle_gpu_info_util",
    stl: "libc++_static",
    static_libs: [
        "angle_common",
    ],
    shared_libs: [
        "liblog",
    ],
    local_include_dirs: [
        "",
        "include/",
        "src/",
        "src/common/third_party/base/",
        "third_party/vulkan-headers/src/include/",
    ],
    srcs: [
        "src/gpu_info_util/SystemInfo.cpp",
        "src/gpu_info_util/SystemInfo_android.cpp",
        "src/gpu_info_util/SystemInfo_vulkan.cpp",
    ],
    sdk_version: "28",
    cflags: [
        "-DANDROID",
        "-DANDROID_NDK_VERSION_ROLL=r20_1",
        "-DANGLE_ENABLE_OPENGL",
        "-DANGLE_ENABLE_OPENGL_NULL",
        "-DANGLE_ENABLE_VULKAN",
        "-DANGLE_USE_CUSTOM_VULKAN_CMD_BUFFERS=1",
        "-DCR_CLANG_REVISION=\"n344329-9284abd0-6\"",
        "-DDYNAMIC_ANNOTATIONS_ENABLED=0",
        "-DHAVE_SYS_UIO_H",
        "-DNDEBUG",
        "-DNVALGRIND",
        "-DVK_USE_PLATFORM_ANDROID_KHR",
        "-D_FORTIFY_SOURCE=2",
        "-D_GNU_SOURCE",
        "-D__STDC_CONSTANT_MACROS",
        "-D__STDC_FORMAT_MACROS",
        "-Wno-bitwise-conditional-parentheses",
        "-Wno-builtin-assume-aligned-alignment",
        "-Wno-builtin-macro-redefined",
        "-Wno-c++11-narrowing",
        "-Wno-deprecated-copy",
        "-Wno-final-dtor-non-final-class",
        "-Wno-ignored-pragma-optimize",
        "-Wno-implicit-fallthrough",
        "-Wno-implicit-int-float-conversion",
        "-Wno-missing-field-initializers",
        "-Wno-non-c-typedef-for-linkage",
        "-Wno-undefined-var-template",
        "-Wno-unknown-warning-option",
        "-Wno-unneeded-internal-declaration",
        "-Wno-unused-parameter",
    ],
    defaults: [
        "angle_vulkan_headers",
    ],
    arch: {
        arm64: {
            cflags: [
                "-DANGLE_IS_64_BIT_CPU",
            ],
        },
        x86_64: {
            cflags: [
                "-DANGLE_IS_64_BIT_CPU",
            ],
        },
        x86: {
            cflags: [
                "-DANGLE_IS_32_BIT_CPU",
            ],
        },
        arm: {
            cflags: [
                "-DANGLE_IS_32_BIT_CPU",
            ],
        },
    },
}
cc_defaults {
    name: "angle_xxhash",
    stl: "libc++_static",
    local_include_dirs: [
        "include/",
        "src/",
    ],
    srcs: [
        "src/common/third_party/xxhash/xxhash.c",
    ],
    sdk_version: "28",
    cflags: [
        "-DANDROID",
        "-DANDROID_NDK_VERSION_ROLL=r20_1",
        "-DCR_CLANG_REVISION=\"n344329-9284abd0-6\"",
        "-DDYNAMIC_ANNOTATIONS_ENABLED=0",
        "-DHAVE_SYS_UIO_H",
        "-DNDEBUG",
        "-DNVALGRIND",
        "-D_FORTIFY_SOURCE=2",
        "-D_GNU_SOURCE",
        "-D__STDC_CONSTANT_MACROS",
        "-D__STDC_FORMAT_MACROS",
        "-Wno-bitwise-conditional-parentheses",
        "-Wno-builtin-assume-aligned-alignment",
        "-Wno-builtin-macro-redefined",
        "-Wno-c++11-narrowing",
        "-Wno-deprecated-copy",
        "-Wno-final-dtor-non-final-class",
        "-Wno-ignored-pragma-optimize",
        "-Wno-implicit-fallthrough",
        "-Wno-implicit-int-float-conversion",
        "-Wno-missing-field-initializers",
        "-Wno-non-c-typedef-for-linkage",
        "-Wno-undefined-var-template",
        "-Wno-unknown-warning-option",
        "-Wno-unneeded-internal-declaration",
        "-Wno-unused-parameter",
    ],
    arch: {
        arm64: {
            cflags: [
                "-DANGLE_IS_64_BIT_CPU",
            ],
        },
        x86_64: {
            cflags: [
                "-DANGLE_IS_64_BIT_CPU",
            ],
        },
        x86: {
            cflags: [
                "-DANGLE_IS_32_BIT_CPU",
            ],
        },
        arm: {
            cflags: [
                "-DANGLE_IS_32_BIT_CPU",
            ],
        },
    },
}
cc_defaults {
    name: "angle_system_utils",
    stl: "libc++_static",
    local_include_dirs: [
        "include/",
        "src/",
    ],
    srcs: [
        "src/common/system_utils.cpp",
        "src/common/system_utils_linux.cpp",
        "src/common/system_utils_posix.cpp",
    ],
    sdk_version: "28",
    cflags: [
        "-DANDROID",
        "-DANDROID_NDK_VERSION_ROLL=r20_1",
        "-DCR_CLANG_REVISION=\"n344329-9284abd0-6\"",
        "-DDYNAMIC_ANNOTATIONS_ENABLED=0",
        "-DHAVE_SYS_UIO_H",
        "-DNDEBUG",
        "-DNVALGRIND",
        "-D_FORTIFY_SOURCE=2",
        "-D_GNU_SOURCE",
        "-D__STDC_CONSTANT_MACROS",
        "-D__STDC_FORMAT_MACROS",
        "-Wno-bitwise-conditional-parentheses",
        "-Wno-builtin-assume-aligned-alignment",
        "-Wno-builtin-macro-redefined",
        "-Wno-c++11-narrowing",
        "-Wno-deprecated-copy",
        "-Wno-final-dtor-non-final-class",
        "-Wno-ignored-pragma-optimize",
        "-Wno-implicit-fallthrough",
        "-Wno-implicit-int-float-conversion",
        "-Wno-missing-field-initializers",
        "-Wno-non-c-typedef-for-linkage",
        "-Wno-undefined-var-template",
        "-Wno-unknown-warning-option",
        "-Wno-unneeded-internal-declaration",
        "-Wno-unused-parameter",
    ],
    arch: {
        arm64: {
            cflags: [
                "-DANGLE_IS_64_BIT_CPU",
            ],
        },
        x86_64: {
            cflags: [
                "-DANGLE_IS_64_BIT_CPU",
            ],
        },
        x86: {
            cflags: [
                "-DANGLE_IS_32_BIT_CPU",
            ],
        },
        arm: {
            cflags: [
                "-DANGLE_IS_32_BIT_CPU",
            ],
        },
    },
}
cc_library_static {
    generated_headers: [
        "angle_commit_id",
    ],
    name: "angle_common",
    stl: "libc++_static",
    shared_libs: [
        "liblog",
    ],
    local_include_dirs: [
        "",
        "include/",
        "src/",
        "src/common/third_party/base/",
    ],
    srcs: [
        "src/common/Float16ToFloat32.cpp",
        "src/common/MemoryBuffer.cpp",
        "src/common/PackedEGLEnums_autogen.cpp",
        "src/common/PackedEnums.cpp",
        "src/common/PackedGLEnums_autogen.cpp",
        "src/common/PoolAlloc.cpp",
        "src/common/aligned_memory.cpp",
        "src/common/android_util.cpp",
        "src/common/angleutils.cpp",
        "src/common/debug.cpp",
        "src/common/event_tracer.cpp",
        "src/common/mathutil.cpp",
        "src/common/matrix_utils.cpp",
        "src/common/string_utils.cpp",
        "src/common/third_party/base/anglebase/sha1.cc",
        "src/common/third_party/smhasher/src/PMurHash.cpp",
        "src/common/tls.cpp",
        "src/common/uniform_type_info_autogen.cpp",
        "src/common/utilities.cpp",
    ],
    sdk_version: "28",
    cflags: [
        "-DANDROID",
        "-DANDROID_NDK_VERSION_ROLL=r20_1",
        "-DCR_CLANG_REVISION=\"n344329-9284abd0-6\"",
        "-DDYNAMIC_ANNOTATIONS_ENABLED=0",
        "-DHAVE_SYS_UIO_H",
        "-DNDEBUG",
        "-DNVALGRIND",
        "-D_FORTIFY_SOURCE=2",
        "-D_GNU_SOURCE",
        "-D__STDC_CONSTANT_MACROS",
        "-D__STDC_FORMAT_MACROS",
        "-Wno-bitwise-conditional-parentheses",
        "-Wno-builtin-assume-aligned-alignment",
        "-Wno-builtin-macro-redefined",
        "-Wno-c++11-narrowing",
        "-Wno-deprecated-copy",
        "-Wno-final-dtor-non-final-class",
        "-Wno-ignored-pragma-optimize",
        "-Wno-implicit-fallthrough",
        "-Wno-implicit-int-float-conversion",
        "-Wno-missing-field-initializers",
        "-Wno-non-c-typedef-for-linkage",
        "-Wno-undefined-var-template",
        "-Wno-unknown-warning-option",
        "-Wno-unneeded-internal-declaration",
        "-Wno-unused-parameter",
    ],
    defaults: [
        "angle_includes",
        "angle_system_utils",
        "angle_version",
        "angle_xxhash",
    ],
    arch: {
        arm64: {
            cflags: [
                "-DANGLE_IS_64_BIT_CPU",
            ],
        },
        x86_64: {
            cflags: [
                "-DANGLE_IS_64_BIT_CPU",
            ],
        },
        x86: {
            cflags: [
                "-DANGLE_IS_32_BIT_CPU",
            ],
        },
        arm: {
            cflags: [
                "-DANGLE_IS_32_BIT_CPU",
            ],
        },
    },
}
cc_defaults {
    generated_headers: [
        "angle_commit_id",
        "angle_spvtools_core_enums_unified1",
        "angle_spvtools_core_tables_unified1",
        "angle_spvtools_generators_inc",
        "angle_spvtools_glsl_tables_glsl1-0",
        "angle_spvtools_language_header_cldebuginfo100",
        "angle_spvtools_language_header_debuginfo",
        "angle_spvtools_opencl_tables_opencl1-0",
        "angle_spvtools_vendor_tables_debuginfo",
        "angle_spvtools_vendor_tables_opencl.debuginfo.100",
        "angle_spvtools_vendor_tables_spv-amd-gcn-shader",
        "angle_spvtools_vendor_tables_spv-amd-shader-ballot",
        "angle_spvtools_vendor_tables_spv-amd-shader-explicit-vertex-parameter",
        "angle_spvtools_vendor_tables_spv-amd-shader-trinary-minmax",
    ],
    name: "angle_libANGLE_base",
    stl: "libc++_static",
    static_libs: [
        "angle_common",
        "angle_gpu_info_util",
        "angle_image_util",
        "angle_preprocessor",
        "angle_spvtools",
        "angle_spvtools_opt",
        "angle_spvtools_val",
        "angle_translator",
    ],
    shared_libs: [
        "liblog",
        "libnativewindow",
        "libvulkan",
    ],
    local_include_dirs: [
        "",
        "include/",
        "src/",
        "src/common/third_party/base/",
        "src/third_party/khronos/",
    ],
    srcs: [
        "src/libANGLE/AttributeMap.cpp",
        "src/libANGLE/BlobCache.cpp",
        "src/libANGLE/Buffer.cpp",
        "src/libANGLE/Caps.cpp",
        "src/libANGLE/Compiler.cpp",
        "src/libANGLE/Config.cpp",
        "src/libANGLE/Context.cpp",
        "src/libANGLE/Context_gl.cpp",
        "src/libANGLE/Context_gles_1_0.cpp",
        "src/libANGLE/Debug.cpp",
        "src/libANGLE/Device.cpp",
        "src/libANGLE/Display.cpp",
        "src/libANGLE/EGLSync.cpp",
        "src/libANGLE/Error.cpp",
        "src/libANGLE/Fence.cpp",
        "src/libANGLE/Framebuffer.cpp",
        "src/libANGLE/FramebufferAttachment.cpp",
        "src/libANGLE/GLES1Renderer.cpp",
        "src/libANGLE/GLES1State.cpp",
        "src/libANGLE/HandleAllocator.cpp",
        "src/libANGLE/Image.cpp",
        "src/libANGLE/ImageIndex.cpp",
        "src/libANGLE/IndexRangeCache.cpp",
        "src/libANGLE/LoggingAnnotator.cpp",
        "src/libANGLE/MemoryObject.cpp",
        "src/libANGLE/MemoryProgramCache.cpp",
        "src/libANGLE/Observer.cpp",
        "src/libANGLE/Platform.cpp",
        "src/libANGLE/Program.cpp",
        "src/libANGLE/ProgramExecutable.cpp",
        "src/libANGLE/ProgramLinkedResources.cpp",
        "src/libANGLE/ProgramPipeline.cpp",
        "src/libANGLE/Query.cpp",
        "src/libANGLE/Renderbuffer.cpp",
        "src/libANGLE/ResourceManager.cpp",
        "src/libANGLE/Sampler.cpp",
        "src/libANGLE/Semaphore.cpp",
        "src/libANGLE/Shader.cpp",
        "src/libANGLE/State.cpp",
        "src/libANGLE/Stream.cpp",
        "src/libANGLE/Surface.cpp",
        "src/libANGLE/Texture.cpp",
        "src/libANGLE/Thread.cpp",
        "src/libANGLE/TransformFeedback.cpp",
        "src/libANGLE/Uniform.cpp",
        "src/libANGLE/VaryingPacking.cpp",
        "src/libANGLE/VertexArray.cpp",
        "src/libANGLE/VertexAttribute.cpp",
        "src/libANGLE/WorkerThread.cpp",
        "src/libANGLE/angletypes.cpp",
        "src/libANGLE/entry_points_enum_autogen.cpp",
        "src/libANGLE/es3_copy_conversion_table_autogen.cpp",
        "src/libANGLE/format_map_autogen.cpp",
        "src/libANGLE/format_map_desktop.cpp",
        "src/libANGLE/formatutils.cpp",
        "src/libANGLE/queryconversions.cpp",
        "src/libANGLE/queryutils.cpp",
        "src/libANGLE/renderer/ContextImpl.cpp",
        "src/libANGLE/renderer/DeviceImpl.cpp",
        "src/libANGLE/renderer/DisplayImpl.cpp",
        "src/libANGLE/renderer/Format_table_autogen.cpp",
        "src/libANGLE/renderer/ProgramPipelineImpl.cpp",
        "src/libANGLE/renderer/QueryImpl.cpp",
        "src/libANGLE/renderer/ShaderImpl.cpp",
        "src/libANGLE/renderer/SurfaceImpl.cpp",
        "src/libANGLE/renderer/TextureImpl.cpp",
        "src/libANGLE/renderer/driver_utils.cpp",
        "src/libANGLE/renderer/gl/BlitGL.cpp",
        "src/libANGLE/renderer/gl/BufferGL.cpp",
        "src/libANGLE/renderer/gl/ClearMultiviewGL.cpp",
        "src/libANGLE/renderer/gl/CompilerGL.cpp",
        "src/libANGLE/renderer/gl/ContextGL.cpp",
        "src/libANGLE/renderer/gl/DispatchTableGL_autogen.cpp",
        "src/libANGLE/renderer/gl/DisplayGL.cpp",
        "src/libANGLE/renderer/gl/FenceNVGL.cpp",
        "src/libANGLE/renderer/gl/FramebufferGL.cpp",
        "src/libANGLE/renderer/gl/FunctionsGL.cpp",
        "src/libANGLE/renderer/gl/ImageGL.cpp",
        "src/libANGLE/renderer/gl/MemoryObjectGL.cpp",
        "src/libANGLE/renderer/gl/ProgramGL.cpp",
        "src/libANGLE/renderer/gl/ProgramPipelineGL.cpp",
        "src/libANGLE/renderer/gl/QueryGL.cpp",
        "src/libANGLE/renderer/gl/RenderbufferGL.cpp",
        "src/libANGLE/renderer/gl/RendererGL.cpp",
        "src/libANGLE/renderer/gl/SamplerGL.cpp",
        "src/libANGLE/renderer/gl/SemaphoreGL.cpp",
        "src/libANGLE/renderer/gl/ShaderGL.cpp",
        "src/libANGLE/renderer/gl/StateManagerGL.cpp",
        "src/libANGLE/renderer/gl/SurfaceGL.cpp",
        "src/libANGLE/renderer/gl/SyncGL.cpp",
        "src/libANGLE/renderer/gl/TextureGL.cpp",
        "src/libANGLE/renderer/gl/TransformFeedbackGL.cpp",
        "src/libANGLE/renderer/gl/VertexArrayGL.cpp",
        "src/libANGLE/renderer/gl/egl/ContextEGL.cpp",
        "src/libANGLE/renderer/gl/egl/DisplayEGL.cpp",
        "src/libANGLE/renderer/gl/egl/FunctionsEGL.cpp",
        "src/libANGLE/renderer/gl/egl/FunctionsEGLDL.cpp",
        "src/libANGLE/renderer/gl/egl/ImageEGL.cpp",
        "src/libANGLE/renderer/gl/egl/PbufferSurfaceEGL.cpp",
        "src/libANGLE/renderer/gl/egl/RendererEGL.cpp",
        "src/libANGLE/renderer/gl/egl/SurfaceEGL.cpp",
        "src/libANGLE/renderer/gl/egl/SyncEGL.cpp",
        "src/libANGLE/renderer/gl/egl/WindowSurfaceEGL.cpp",
        "src/libANGLE/renderer/gl/egl/android/DisplayAndroid.cpp",
        "src/libANGLE/renderer/gl/egl/android/NativeBufferImageSiblingAndroid.cpp",
        "src/libANGLE/renderer/gl/egl/egl_utils.cpp",
        "src/libANGLE/renderer/gl/formatutilsgl.cpp",
        "src/libANGLE/renderer/gl/null_functions.cpp",
        "src/libANGLE/renderer/gl/renderergl_utils.cpp",
        "src/libANGLE/renderer/load_functions_table_autogen.cpp",
        "src/libANGLE/renderer/renderer_utils.cpp",
        "src/libANGLE/validationEGL.cpp",
        "src/libANGLE/validationES.cpp",
        "src/libANGLE/validationES1.cpp",
        "src/libANGLE/validationES2.cpp",
        "src/libANGLE/validationES3.cpp",
        "src/libANGLE/validationES31.cpp",
        "src/libANGLE/validationES32.cpp",
        "src/libANGLE/validationESEXT.cpp",
        "src/libANGLE/validationGL1.cpp",
        "src/libANGLE/validationGL11.cpp",
        "src/libANGLE/validationGL12.cpp",
        "src/libANGLE/validationGL13.cpp",
        "src/libANGLE/validationGL14.cpp",
        "src/libANGLE/validationGL15.cpp",
        "src/libANGLE/validationGL2.cpp",
        "src/libANGLE/validationGL21.cpp",
        "src/libANGLE/validationGL3.cpp",
        "src/libANGLE/validationGL31.cpp",
        "src/libANGLE/validationGL32.cpp",
        "src/libANGLE/validationGL33.cpp",
        "src/libANGLE/validationGL4.cpp",
        "src/libANGLE/validationGL41.cpp",
        "src/libANGLE/validationGL42.cpp",
        "src/libANGLE/validationGL43.cpp",
        "src/libANGLE/validationGL44.cpp",
        "src/libANGLE/validationGL45.cpp",
        "src/libANGLE/validationGL46.cpp",
    ],
    sdk_version: "28",
    cflags: [
        "-DANDROID",
        "-DANDROID_NDK_VERSION_ROLL=r20_1",
        "-DANGLE_ENABLE_OPENGL",
        "-DANGLE_ENABLE_OPENGL_NULL",
        "-DANGLE_ENABLE_VULKAN",
        "-DANGLE_USE_CUSTOM_VULKAN_CMD_BUFFERS=1",
        "-DCR_CLANG_REVISION=\"n344329-9284abd0-6\"",
        "-DDYNAMIC_ANNOTATIONS_ENABLED=0",
        "-DHAVE_SYS_UIO_H",
        "-DLIBANGLE_IMPLEMENTATION",
        "-DNDEBUG",
        "-DNVALGRIND",
        "-D_FORTIFY_SOURCE=2",
        "-D_GNU_SOURCE",
        "-D__STDC_CONSTANT_MACROS",
        "-D__STDC_FORMAT_MACROS",
        "-Wno-bitwise-conditional-parentheses",
        "-Wno-builtin-assume-aligned-alignment",
        "-Wno-builtin-macro-redefined",
        "-Wno-c++11-narrowing",
        "-Wno-deprecated-copy",
        "-Wno-final-dtor-non-final-class",
        "-Wno-ignored-pragma-optimize",
        "-Wno-implicit-fallthrough",
        "-Wno-implicit-int-float-conversion",
        "-Wno-missing-field-initializers",
        "-Wno-non-c-typedef-for-linkage",
        "-Wno-undefined-var-template",
        "-Wno-unknown-warning-option",
        "-Wno-unneeded-internal-declaration",
        "-Wno-unused-parameter",
    ],
    defaults: [
        "angle_includes",
        "angle_libANGLE_headers",
        "angle_version",
        "angle_vulkan_backend",
    ],
    arch: {
        arm64: {
            cflags: [
                "-DANGLE_IS_64_BIT_CPU",
            ],
        },
        x86_64: {
            cflags: [
                "-DANGLE_IS_64_BIT_CPU",
            ],
        },
        x86: {
            cflags: [
                "-DANGLE_IS_32_BIT_CPU",
            ],
        },
        arm: {
            cflags: [
                "-DANGLE_IS_32_BIT_CPU",
            ],
        },
    },
}
cc_defaults {
    generated_headers: [
        "angle_commit_id",
        "angle_spvtools_core_enums_unified1",
        "angle_spvtools_core_tables_unified1",
        "angle_spvtools_generators_inc",
        "angle_spvtools_glsl_tables_glsl1-0",
        "angle_spvtools_language_header_cldebuginfo100",
        "angle_spvtools_language_header_debuginfo",
        "angle_spvtools_opencl_tables_opencl1-0",
        "angle_spvtools_vendor_tables_debuginfo",
        "angle_spvtools_vendor_tables_opencl.debuginfo.100",
        "angle_spvtools_vendor_tables_spv-amd-gcn-shader",
        "angle_spvtools_vendor_tables_spv-amd-shader-ballot",
        "angle_spvtools_vendor_tables_spv-amd-shader-explicit-vertex-parameter",
        "angle_spvtools_vendor_tables_spv-amd-shader-trinary-minmax",
    ],
    name: "angle_libANGLE",
    stl: "libc++_static",
    static_libs: [
        "angle_common",
        "angle_gpu_info_util",
        "angle_image_util",
        "angle_preprocessor",
        "angle_spvtools",
        "angle_spvtools_opt",
        "angle_spvtools_val",
        "angle_translator",
    ],
    shared_libs: [
        "liblog",
        "libnativewindow",
        "libvulkan",
    ],
    local_include_dirs: [
        "",
        "include/",
        "src/",
        "src/common/third_party/base/",
    ],
    srcs: [
        "src/libANGLE/FrameCapture_mock.cpp",
    ],
    sdk_version: "28",
    cflags: [
        "-DANDROID",
        "-DANDROID_NDK_VERSION_ROLL=r20_1",
        "-DANGLE_CAPTURE_ENABLED=0",
        "-DANGLE_ENABLE_OPENGL",
        "-DANGLE_ENABLE_OPENGL_NULL",
        "-DANGLE_ENABLE_VULKAN",
        "-DANGLE_USE_CUSTOM_VULKAN_CMD_BUFFERS=1",
        "-DCR_CLANG_REVISION=\"n344329-9284abd0-6\"",
        "-DDYNAMIC_ANNOTATIONS_ENABLED=0",
        "-DHAVE_SYS_UIO_H",
        "-DLIBANGLE_IMPLEMENTATION",
        "-DNDEBUG",
        "-DNVALGRIND",
        "-D_FORTIFY_SOURCE=2",
        "-D_GNU_SOURCE",
        "-D__STDC_CONSTANT_MACROS",
        "-D__STDC_FORMAT_MACROS",
        "-Wno-bitwise-conditional-parentheses",
        "-Wno-builtin-assume-aligned-alignment",
        "-Wno-builtin-macro-redefined",
        "-Wno-c++11-narrowing",
        "-Wno-deprecated-copy",
        "-Wno-final-dtor-non-final-class",
        "-Wno-ignored-pragma-optimize",
        "-Wno-implicit-fallthrough",
        "-Wno-implicit-int-float-conversion",
        "-Wno-missing-field-initializers",
        "-Wno-non-c-typedef-for-linkage",
        "-Wno-undefined-var-template",
        "-Wno-unknown-warning-option",
        "-Wno-unneeded-internal-declaration",
        "-Wno-unused-parameter",
    ],
    defaults: [
        "angle_libANGLE_base",
    ],
    arch: {
        arm64: {
            cflags: [
                "-DANGLE_IS_64_BIT_CPU",
            ],
        },
        x86_64: {
            cflags: [
                "-DANGLE_IS_64_BIT_CPU",
            ],
        },
        x86: {
            cflags: [
                "-DANGLE_IS_32_BIT_CPU",
            ],
        },
        arm: {
            cflags: [
                "-DANGLE_IS_32_BIT_CPU",
            ],
        },
    },
}
cc_defaults {
    name: "angle_includes",
    stl: "libc++_static",
    local_include_dirs: [
        "include/",
        "src/",
    ],
    sdk_version: "28",
    cflags: [
        "-DANDROID",
        "-DANDROID_NDK_VERSION_ROLL=r20_1",
        "-DCR_CLANG_REVISION=\"n344329-9284abd0-6\"",
        "-DDYNAMIC_ANNOTATIONS_ENABLED=0",
        "-DHAVE_SYS_UIO_H",
        "-DNDEBUG",
        "-DNVALGRIND",
        "-D_FORTIFY_SOURCE=2",
        "-D_GNU_SOURCE",
        "-D__STDC_CONSTANT_MACROS",
        "-D__STDC_FORMAT_MACROS",
        "-Wno-bitwise-conditional-parentheses",
        "-Wno-builtin-assume-aligned-alignment",
        "-Wno-builtin-macro-redefined",
        "-Wno-c++11-narrowing",
        "-Wno-deprecated-copy",
        "-Wno-final-dtor-non-final-class",
        "-Wno-ignored-pragma-optimize",
        "-Wno-implicit-fallthrough",
        "-Wno-implicit-int-float-conversion",
        "-Wno-missing-field-initializers",
        "-Wno-non-c-typedef-for-linkage",
        "-Wno-undefined-var-template",
        "-Wno-unknown-warning-option",
        "-Wno-unneeded-internal-declaration",
        "-Wno-unused-parameter",
    ],
    arch: {
        arm64: {
            cflags: [
                "-DANGLE_IS_64_BIT_CPU",
            ],
        },
        x86_64: {
            cflags: [
                "-DANGLE_IS_64_BIT_CPU",
            ],
        },
        x86: {
            cflags: [
                "-DANGLE_IS_32_BIT_CPU",
            ],
        },
        arm: {
            cflags: [
                "-DANGLE_IS_32_BIT_CPU",
            ],
        },
    },
}
cc_genrule {
    name: "angle_commit_id",
    tool_files: [
        "src/commit_id.py",
    ],
    cmd: "$(location) gen $(location commit.h)",
    sdk_version: "28",
    out: [
        "commit.h",
    ],
}
cc_defaults {
    generated_headers: [
        "angle_commit_id",
    ],
    name: "angle_version",
    stl: "libc++_static",
    local_include_dirs: [
        "",
        "include/",
        "src/",
    ],
    sdk_version: "28",
    cflags: [
        "-DANDROID",
        "-DANDROID_NDK_VERSION_ROLL=r20_1",
        "-DCR_CLANG_REVISION=\"n344329-9284abd0-6\"",
        "-DDYNAMIC_ANNOTATIONS_ENABLED=0",
        "-DHAVE_SYS_UIO_H",
        "-DNDEBUG",
        "-DNVALGRIND",
        "-D_FORTIFY_SOURCE=2",
        "-D_GNU_SOURCE",
        "-D__STDC_CONSTANT_MACROS",
        "-D__STDC_FORMAT_MACROS",
        "-Wno-bitwise-conditional-parentheses",
        "-Wno-builtin-assume-aligned-alignment",
        "-Wno-builtin-macro-redefined",
        "-Wno-c++11-narrowing",
        "-Wno-deprecated-copy",
        "-Wno-final-dtor-non-final-class",
        "-Wno-ignored-pragma-optimize",
        "-Wno-implicit-fallthrough",
        "-Wno-implicit-int-float-conversion",
        "-Wno-missing-field-initializers",
        "-Wno-non-c-typedef-for-linkage",
        "-Wno-undefined-var-template",
        "-Wno-unknown-warning-option",
        "-Wno-unneeded-internal-declaration",
        "-Wno-unused-parameter",
    ],
    arch: {
        arm64: {
            cflags: [
                "-DANGLE_IS_64_BIT_CPU",
            ],
        },
        x86_64: {
            cflags: [
                "-DANGLE_IS_64_BIT_CPU",
            ],
        },
        x86: {
            cflags: [
                "-DANGLE_IS_32_BIT_CPU",
            ],
        },
        arm: {
            cflags: [
                "-DANGLE_IS_32_BIT_CPU",
            ],
        },
    },
}
cc_library_shared {
    generated_headers: [
        "angle_commit_id",
        "angle_spvtools_core_enums_unified1",
        "angle_spvtools_core_tables_unified1",
        "angle_spvtools_generators_inc",
        "angle_spvtools_glsl_tables_glsl1-0",
        "angle_spvtools_language_header_cldebuginfo100",
        "angle_spvtools_language_header_debuginfo",
        "angle_spvtools_opencl_tables_opencl1-0",
        "angle_spvtools_vendor_tables_debuginfo",
        "angle_spvtools_vendor_tables_opencl.debuginfo.100",
        "angle_spvtools_vendor_tables_spv-amd-gcn-shader",
        "angle_spvtools_vendor_tables_spv-amd-shader-ballot",
        "angle_spvtools_vendor_tables_spv-amd-shader-explicit-vertex-parameter",
        "angle_spvtools_vendor_tables_spv-amd-shader-trinary-minmax",
    ],
    name: "libGLESv2_angle",
    stl: "libc++_static",
    static_libs: [
        "angle_common",
        "angle_gpu_info_util",
        "angle_image_util",
        "angle_preprocessor",
        "angle_spvtools",
        "angle_spvtools_opt",
        "angle_spvtools_val",
        "angle_translator",
    ],
    shared_libs: [
        "libdl",
        "liblog",
        "libm",
        "libnativewindow",
        "libvulkan",
    ],
    local_include_dirs: [
        "",
        "include/",
        "src/",
        "src/common/third_party/base/",
    ],
    srcs: [
        "src/libGLESv2/entry_points_egl.cpp",
        "src/libGLESv2/entry_points_egl_ext.cpp",
        "src/libGLESv2/entry_points_gles_1_0_autogen.cpp",
        "src/libGLESv2/entry_points_gles_2_0_autogen.cpp",
        "src/libGLESv2/entry_points_gles_3_0_autogen.cpp",
        "src/libGLESv2/entry_points_gles_3_1_autogen.cpp",
        "src/libGLESv2/entry_points_gles_3_2_autogen.cpp",
        "src/libGLESv2/entry_points_gles_ext_autogen.cpp",
        "src/libGLESv2/global_state.cpp",
        "src/libGLESv2/libGLESv2_autogen.cpp",
        "src/libGLESv2/proc_table_egl_autogen.cpp",
    ],
    sdk_version: "28",
    cflags: [
        "-DANDROID",
        "-DANDROID_NDK_VERSION_ROLL=r20_1",
        "-DANGLE_CAPTURE_ENABLED=0",
        "-DANGLE_ENABLE_OPENGL",
        "-DANGLE_ENABLE_OPENGL_NULL",
        "-DANGLE_ENABLE_VULKAN",
        "-DANGLE_USE_CUSTOM_VULKAN_CMD_BUFFERS=1",
        "-DCR_CLANG_REVISION=\"n344329-9284abd0-6\"",
        "-DDYNAMIC_ANNOTATIONS_ENABLED=0",
        "-DEGL_EGLEXT_PROTOTYPES",
        "-DEGL_EGL_PROTOTYPES=1",
        "-DGL_API=__attribute__((visibility(\"default\")))",
        "-DGL_APICALL=__attribute__((visibility(\"default\")))",
        "-DGL_GLES_PROTOTYPES=1",
        "-DGL_GLEXT_PROTOTYPES",
        "-DHAVE_SYS_UIO_H",
        "-DLIBANGLE_IMPLEMENTATION",
        "-DLIBGLESV2_IMPLEMENTATION",
        "-DNDEBUG",
        "-DNVALGRIND",
        "-D_FORTIFY_SOURCE=2",
        "-D_GNU_SOURCE",
        "-D__STDC_CONSTANT_MACROS",
        "-D__STDC_FORMAT_MACROS",
        "-Wno-bitwise-conditional-parentheses",
        "-Wno-builtin-assume-aligned-alignment",
        "-Wno-builtin-macro-redefined",
        "-Wno-c++11-narrowing",
        "-Wno-deprecated-copy",
        "-Wno-final-dtor-non-final-class",
        "-Wno-ignored-pragma-optimize",
        "-Wno-implicit-fallthrough",
        "-Wno-implicit-int-float-conversion",
        "-Wno-missing-field-initializers",
        "-Wno-non-c-typedef-for-linkage",
        "-Wno-undefined-var-template",
        "-Wno-unknown-warning-option",
        "-Wno-unneeded-internal-declaration",
        "-Wno-unused-parameter",
    ],
    defaults: [
        "angle_includes",
        "angle_libANGLE",
        "angle_version",
    ],
    arch: {
        arm64: {
            cflags: [
                "-DANGLE_IS_64_BIT_CPU",
            ],
        },
        x86_64: {
            cflags: [
                "-DANGLE_IS_64_BIT_CPU",
            ],
        },
        x86: {
            cflags: [
                "-DANGLE_IS_32_BIT_CPU",
            ],
        },
        arm: {
            cflags: [
                "-DANGLE_IS_32_BIT_CPU",
            ],
        },
    },
}
filegroup {
    srcs: [
        "src/**/*.java",
    ],
    name: "ANGLE_srcs",
}
java_defaults {
    jni_libs: [
        "libEGL_angle",
        "libGLESv1_CM_angle",
        "libGLESv2_angle",
        "libfeature_support_angle",
    ],
    srcs: [
        ":ANGLE_srcs",
    ],
    plugins: [
        "java_api_finder",
    ],
    owner: "google",
    name: "ANGLE_java_defaults",
    use_embedded_native_libs: true,
    min_sdk_version: "28",
    sdk_version: "system_current",
    aaptflags: [
        "--extra-packages com.android.angle.common",
        "-0 .json",
    ],
    compile_multilib: "both",
    privileged: true,
}
android_library {
    sdk_version: "system_current",
    name: "ANGLE_library",
    aaptflags: [
        "-0 .json",
    ],
    manifest: "src/android_system_settings/src/com/android/angle/AndroidManifest.xml",
    static_libs: [
        "androidx.preference_preference",
    ],
    min_sdk_version: "28",
    resource_dirs: [
        "src/android_system_settings/res",
    ],
    asset_dirs: [
        "src/android_system_settings/assets",
    ],
}
android_app {
    static_libs: [
        "ANGLE_library",
    ],
    required: [
        "privapp_whitelist_com.android.angle",
    ],
    name: "ANGLE",
    defaults: [
        "ANGLE_java_defaults",
    ],
    manifest: "src/android_system_settings/src/com/android/angle/AndroidManifest.xml",
}
