if(NOT CMAKE_BUILD_TYPE)
    set(CMAKE_BUILD_TYPE Release CACHE STRING
        "Choose the type of build, options are: None(CMAKE_CXX_FLAGS or CMAKE_C_FLAGS used) Debug Release RelWithDebInfo MinSizeRel."
        FORCE)
endif()

cmake_minimum_required(VERSION 2.8)

# surpress CXX_VISIBILITY_PRESET warning
cmake_policy(SET CMP0063 NEW)

include_directories(
    ../xcore
    ../xcore/base
    ./
    )

if(WIN32)
    set(PREFIX )
    set(SUFFIX lib)
else()
    set(PREFIX ${LIBRARY_OUTPUT_PATH}/lib)
    set(SUFFIX a)
endif()

macro(dec_algo_v name version chk_file src_list)
    set(_src_list ${src_list} ${ARGN} )
    if (${version} EQUAL 0)
        set(target_name "rkaiq_${name}")
        set(target_folder "algos/${name}")
    else()
        set(target_name "rkaiq_${name}_v${version}")
        set(target_folder "algos/${name}${version}")
    endif()
    if(EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/${chk_file}")
        add_library(${target_name} STATIC ${_src_list})
        set_target_properties(${target_name} PROPERTIES FOLDER "${target_folder}")
        set_target_properties(${target_name} PROPERTIES CLEAN_DIRECT_OUTPUT 1)
        set_target_properties(${target_name} PROPERTIES C_VISIBILITY_PRESET default)
        set_target_properties(${target_name} PROPERTIES CXX_VISIBILITY_PRESET default)
    else()
        message(STATUS "Can NOT found ${CMAKE_CURRENT_SOURCE_DIR}/${chk_file}. Using lib")
        string(TOLOWER ${CMAKE_SYSTEM_NAME} OS)
        set(PREFIX "${CMAKE_CURRENT_LIST_DIR}/${OS}/${ARCH}/lib")
        add_library(${target_name} STATIC IMPORTED GLOBAL)
        set_target_properties(${target_name} PROPERTIES IMPORTED_LOCATION
            "${PREFIX}${target_name}.${SUFFIX}")
        set_target_properties(${target_name} PROPERTIES IMPORTED_IMPLIB
            "${PREFIX}${target_name}.${SUFFIX}")
    endif()
endmacro(dec_algo_v)

macro(dec_algo name chk_file src_list)
    set(_src_list ${src_list} ${ARGN})
    dec_algo_v(${name} 0 ${chk_file} ${_src_list})
endmacro(dec_algo)

add_subdirectory(ae)
add_subdirectory(awb)
add_subdirectory(af)
add_subdirectory(aie)
add_subdirectory(amerge)
add_subdirectory(atmo)
add_subdirectory(adrc)
add_subdirectory(anr)
add_subdirectory(asharp)
add_subdirectory(asd)
add_subdirectory(acp)
add_subdirectory(adehaze)
add_subdirectory(a3dlut)
add_subdirectory(ablc)
add_subdirectory(accm)
add_subdirectory(acgc)
add_subdirectory(adebayer)
add_subdirectory(adpcc)
add_subdirectory(afec)
add_subdirectory(agamma)
add_subdirectory(adegamma)
add_subdirectory(agic)
add_subdirectory(aldch)
add_subdirectory(alsc)
add_subdirectory(aorb)
add_subdirectory(acsm)
add_subdirectory(awdr)
add_subdirectory(asharp3)
add_subdirectory(aynr2)
add_subdirectory(acnr)
add_subdirectory(arawnr2)
add_subdirectory(aeis)
add_subdirectory(amd)
add_subdirectory(arawnr)
add_subdirectory(aynr)
add_subdirectory(auvnr)
add_subdirectory(amfnr)
add_subdirectory(again)
add_subdirectory(again2)
add_subdirectory(aynr3)
add_subdirectory(acnr2)
add_subdirectory(asharp4)
add_subdirectory(abayer2dnr2)
add_subdirectory(abayertnr2)
add_subdirectory(acac)
