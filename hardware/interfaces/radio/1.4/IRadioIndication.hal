/*
 * Copyright (C) 2018 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package android.hardware.radio@1.4;

import @1.0::RadioIndicationType;
import @1.3::IRadioIndication;

/**
 * Interface declaring unsolicited radio indications.
 */
interface IRadioIndication extends @1.3::IRadioIndication {
    /**
     * Report the current list of emergency numbers
     *
     * Each emergency number (@1.4::EmergencyNumber) in the emergency number list contains a
     * dialing number, zero or more service category(s), zero or more emergency uniform resource
     * names, mobile country code, mobile network code, and source(s) that indicate where it comes
     * from.
     *
     * Radio must report all the valid emergency numbers with known mobile country code, mobile
     * network code, emergency service categories, and emergency uniform resource names from all
     * available sources including network signaling, sim, modem/oem configuration, and default
     * configuration (112 and 911 must be always available; additionally, 000, 08, 110, 999, 118
     * and 119 must be available when sim is not present). Radio shall not report emergency numbers
     * that are invalid in the current locale. The reported emergency number list must not have
     * duplicate @1.4::EmergencyNumber entries. Please refer the documentation of
     * @1.4::EmergencyNumber to construct each emergency number to report.
     *
     * Radio must report the complete list of emergency numbers whenever the emergency numbers in
     * the list are changed or whenever the client and the radio server are connected.
     *
     * Reference: 3gpp 22.101, Section 10 - Emergency Calls;
     *            3gpp 24.008, Section 9.2.13.4 - Emergency Number List
     *
     * @param type Type of radio indication
     * @param emergencyNumberList Current list of emergency numbers known to radio.
     */
    oneway currentEmergencyNumberList(RadioIndicationType type,
            vec<EmergencyNumber> emergencyNumberList);

    /**
     * Report all of the current cell information known to the radio.
     *
     * @param type Type of radio indication
     * @param records Current cell information
     */
    oneway cellInfoList_1_4(RadioIndicationType type, vec<CellInfo> records);

    /**
     * Incremental network scan results
     */
    oneway networkScanResult_1_4(RadioIndicationType type, NetworkScanResult result);

    /**
     * Indicates physical channel configurations.
     *
     * An empty configs list indicates that the radio is in idle mode.
     *
     * @param type Type of radio indication
     * @param configs Vector of PhysicalChannelConfigs
     */
    oneway currentPhysicalChannelConfigs_1_4(RadioIndicationType type,
            vec<PhysicalChannelConfig> configs);

    /**
     * Indicates data call contexts have changed.
     *
     * @param type Type of radio indication
     * @param dcList Array of SetupDataCallResult identical to that returned by
     *        IRadio.getDataCallList(). It is the complete list of current data contexts including
     *        new contexts that have been activated. A data call is only removed from this list
     *        when below conditions matched.
     *        1. The framework sends a IRadio.deactivateDataCall().
     *        2. The radio is powered off/on.
     *        3. Unsolicited disconnect from either modem or network side.
     */
    oneway dataCallListChanged_1_4(RadioIndicationType type, vec<SetupDataCallResult> dcList);

    /**
     * Indicates current signal strength of the radio.
     *
     * @param type Type of radio indication
     * @param signalStrength SignalStrength information
     */
    oneway currentSignalStrength_1_4(RadioIndicationType type, SignalStrength signalStrength);
};
