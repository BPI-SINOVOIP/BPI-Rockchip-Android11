// Copyright (C) 2015 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// =====================
// libdrmhwcutils.a
// =====================
cc_library_static {
    name: "libdrmhwcutils",

    srcs: ["utils/worker.cpp"],

    include_dirs: ["hardware/rockchip/hwcomposer/include"],

    cflags: [
        "-Wall",
        "-Werror",
    ],

    vendor: true,

}

// =====================
// hwcomposer.drm.so
// =====================
cc_defaults {
    name: "hwcomposer.drm_hwc_defaults",

    shared_libs: [
        "libcutils",
        "libdrm",
        "libhardware",
        "liblog",
        "libsync_vendor",
        "libui",
        "libutils",
    ],

    include_dirs: [
        "hardware/rockchip/hwcomposer/include",
        "hardware/rockchip/libgralloc/midgard",
        "external/libdrm/include/drm",
        "system/core"
    ],

    static_libs: ["libdrmhwcutils"],

    cflags: [
        "-Wall",
        "-Werror",
        "-Wno-unused-private-field",
        "-Wno-unused-function",
    ],

    cppflags: [
        "-DHWC2_USE_CPP11",
        "-DHWC2_INCLUDE_STRINGIFICATION",
        "-DRK_DRM_GRALLOC",
        "-DUSE_HWC2",
        "-DMALI_AFBC_GRALLOC",
//        "-DUSE_MULTI_AREAS",
//        "-DUSE_NO_ASPECT_RATIO",
    ],

    relative_install_path: "hw",
    vendor: true,
}
cc_library_static {
    name: "rk_drm_hwcomposer",
    defaults: ["hwcomposer.drm_hwc_defaults"],
    srcs: [
        "drmhwctwo.cpp",

        "compositor/drmdisplaycomposition.cpp",
        "compositor/drmdisplaycompositor.cpp",

        "drm/drmconnector.cpp",
        "drm/drmcrtc.cpp",
        "drm/drmdevice.cpp",
        "drm/drmencoder.cpp",
        "drm/drmeventlistener.cpp",
        "drm/drmmode.cpp",
        "drm/drmplane.cpp",
        "drm/drmproperty.cpp",
        "drm/drmcompositorworker.cpp",
        "drm/resourcemanager.cpp",
        "drm/vsyncworker.cpp",

        "platform/platform.cpp",

        "utils/autolock.cpp",
        "utils/hwcutils.cpp",

        "rockchip/utils/drmdebug.cpp",
        "rockchip/drmtype.cpp",
        "rockchip/drmgralloc.cpp",
        "rockchip/platform/drmvop.cpp",
        "rockchip/platform/drmvop2.cpp"
    ],
}

cc_library_shared {
    name: "hwcomposer.rk30board",
    defaults: ["hwcomposer.drm_hwc_defaults"],
    whole_static_libs: ["rk_drm_hwcomposer"],
    srcs: ["platform/platformdrmgeneric.cpp"],
    cppflags: ["-DUSE_DRM_GENERIC_IMPORTER"],
}
