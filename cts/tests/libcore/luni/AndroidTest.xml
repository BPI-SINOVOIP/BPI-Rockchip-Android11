<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (C) 2015 The Android Open Source Project

     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
-->
<configuration description="Config for CTS Libcore test cases">
    <option name="test-suite-tag" value="cts" />
    <option name="config-descriptor:metadata" key="component" value="libcore" />
    <option name="config-descriptor:metadata" key="parameter" value="multi_abi" />
    <!-- Test is eligible to run on Android Multiuser users other than SYSTEM.
         See source.android.com/devices/tech/admin/multi-user#user_types -->
    <option name="config-descriptor:metadata" key="parameter" value="secondary_user" />
    <option name="config-descriptor:metadata" key="parameter" value="not_instant_app" />
    <target_preparer class="com.android.tradefed.targetprep.RunCommandTargetPreparer">
        <option name="run-command" value="mkdir -p /data/local/tmp/ctslibcore/java.io.tmpdir" />
        <option name="run-command" value="mkdir -p /data/local/tmp/ctslibcore/user.home" />
        <option name="teardown-command" value="rm -rf /data/local/tmp/ctslibcore" />
    </target_preparer>
    <target_preparer class="com.android.tradefed.targetprep.suite.SuiteApkInstaller">
        <option name="cleanup-apks" value="true" />
        <!-- this has just the instrumentation which acts as the tests we want to run -->
        <option name="test-file-name" value="CtsLibcoreTestCases.apk" />
    </target_preparer>
    <test class="com.android.compatibility.testtype.LibcoreTest" >
        <option name="package" value="android.libcore.cts" />
        <option name="instrumentation-arg" key="filter"
                value="com.android.cts.core.runner.ExpectationBasedFilter" />
        <option name="core-expectation" value="/knownfailures.txt" />
        <option name="virtual-device-core-expectation" value="/virtualdeviceknownfailures.txt" />
        <option name="runtime-hint" value="45m"/>
        <!-- 20x default timeout of 600sec -->
        <option name="shell-timeout" value="12000000"/>
        <option name="hidden-api-checks" value="false"/>
        <option name="device-listeners" value="org.conscrypt.ConscryptInstrumentationListener" />
        <option name="instrumentation-arg" key="conscrypt_sslsocket_implementation" value="engine" />
    </test>
    <!-- Re-run a subset of tests using Conscrypt's file-descriptor based implementation to ensure
         there are no regressions in this implementation before it is fully deprecated.

         Expectations for these tests are the same as above, only timeout and SSLSocket
         implementation are different.
    -->
    <test class="com.android.compatibility.testtype.LibcoreTest" >
        <option name="package" value="android.libcore.cts" />
        <option name="include-filter" value="libcore.javax.net.ssl" />
        <option name="include-filter" value="com.android.org.conscrypt.javax.net.ssl" />
        <option name="include-filter" value="org.apache.harmony.tests.javax.net.ssl" />
        <option name="instrumentation-arg" key="filter"
                value="com.android.cts.core.runner.ExpectationBasedFilter" />
        <option name="core-expectation" value="/knownfailures.txt" />
        <option name="virtual-device-core-expectation" value="/virtualdeviceknownfailures.txt" />
        <option name="runtime-hint" value="5m"/>
        <option name="hidden-api-checks" value="false"/>
        <option name="device-listeners" value="org.conscrypt.ConscryptInstrumentationListener" />
        <option name="instrumentation-arg" key="conscrypt_sslsocket_implementation" value="fd" />
    </test>

    <object type="module_controller" class="com.android.tradefed.testtype.suite.module.TestFailureModuleController">
        <option name="screenshot-on-failure" value="false" />
    </object>
</configuration>
