LIBNATIVEWINDOW {
  global:
    AHardwareBuffer_acquire;
    AHardwareBuffer_allocate;
    AHardwareBuffer_createFromHandle; # llndk # apex
    AHardwareBuffer_describe;
    AHardwareBuffer_getNativeHandle; # llndk # apex
    AHardwareBuffer_isSupported; # introduced=29
    AHardwareBuffer_lock;
    AHardwareBuffer_lockAndGetInfo; # introduced=29
    AHardwareBuffer_lockPlanes; # introduced=29
    AHardwareBuffer_recvHandleFromUnixSocket;
    AHardwareBuffer_release;
    AHardwareBuffer_sendHandleToUnixSocket;
    AHardwareBuffer_unlock;
    ANativeWindowBuffer_getHardwareBuffer; # llndk
    ANativeWindow_OemStorageGet; # llndk
    ANativeWindow_OemStorageSet; # llndk
    ANativeWindow_acquire;
    ANativeWindow_cancelBuffer; # llndk
    ANativeWindow_dequeueBuffer; # llndk
    ANativeWindow_getBuffersDataSpace; # introduced=28
    ANativeWindow_getFormat;
    ANativeWindow_getHeight;
    ANativeWindow_getLastDequeueDuration; # apex # introduced=30
    ANativeWindow_getLastDequeueStartTime; # apex # introduced=30
    ANativeWindow_getLastQueueDuration; # apex # introduced=30
    ANativeWindow_getWidth;
    ANativeWindow_lock;
    ANativeWindow_query; # llndk
    ANativeWindow_queryf; # llndk
    ANativeWindow_queueBuffer; # llndk
    ANativeWindow_setCancelBufferInterceptor; # apex # introduced=30
    ANativeWindow_setDequeueBufferInterceptor; # apex # introduced=30
    ANativeWindow_setPerformInterceptor; # apex # introduced=30
    ANativeWindow_setQueueBufferInterceptor; # apex # introduced=30
    ANativeWindow_release;
    ANativeWindow_setAutoPrerotation; # llndk
    ANativeWindow_setAutoRefresh; # llndk
    ANativeWindow_setBufferCount; # llndk
    ANativeWindow_setBuffersDataSpace; # introduced=28
    ANativeWindow_setBuffersDimensions; # llndk
    ANativeWindow_setBuffersFormat; # llndk
    ANativeWindow_setBuffersGeometry;
    ANativeWindow_setBuffersTimestamp; # llndk
    ANativeWindow_setBuffersTransform;
    ANativeWindow_setDequeueTimeout; # apex # introduced=30
    ANativeWindow_setFrameRate; # introduced=30
    ANativeWindow_setSharedBufferMode; # llndk
    ANativeWindow_setSwapInterval; # llndk
    ANativeWindow_setUsage; # llndk
    ANativeWindow_tryAllocateBuffers; # introduced=30
    ANativeWindow_unlockAndPost;
  local:
    *;
};

LIBNATIVEWINDOW_PLATFORM {
  global:
    extern "C++" {
      android::AHardwareBuffer_isValidPixelFormat*;
      android::AHardwareBuffer_convertFromPixelFormat*;
      android::AHardwareBuffer_convertToPixelFormat*;
      android::AHardwareBuffer_convertFromGrallocUsageBits*;
      android::AHardwareBuffer_convertToGrallocUsageBits*;
      android::AHardwareBuffer_to_GraphicBuffer*;
      android::AHardwareBuffer_to_ANativeWindowBuffer*;
      android::AHardwareBuffer_from_GraphicBuffer*;
    };
} LIBNATIVEWINDOW;
