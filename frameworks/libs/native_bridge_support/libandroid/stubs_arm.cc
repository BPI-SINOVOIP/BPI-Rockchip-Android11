//
// Copyright (C) 2020 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

// clang-format off
#include "native_bridge_support/vdso/interceptable_functions.h"

DEFINE_INTERCEPTABLE_STUB_FUNCTION(AAssetDir_close);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AAssetDir_getNextFileName);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AAssetDir_rewind);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AAssetManager_fromJava);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AAssetManager_open);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AAssetManager_openDir);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AAsset_close);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AAsset_getBuffer);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AAsset_getLength);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AAsset_getLength64);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AAsset_getRemainingLength);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AAsset_getRemainingLength64);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AAsset_isAllocated);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AAsset_openFileDescriptor);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AAsset_openFileDescriptor64);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AAsset_read);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AAsset_seek);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AAsset_seek64);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AChoreographer_getInstance);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AChoreographer_postFrameCallback);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AChoreographer_postFrameCallback64);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AChoreographer_postFrameCallbackDelayed);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AChoreographer_postFrameCallbackDelayed64);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AChoreographer_registerRefreshRateCallback);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AChoreographer_unregisterRefreshRateCallback);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AConfiguration_copy);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AConfiguration_delete);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AConfiguration_diff);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AConfiguration_fromAssetManager);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AConfiguration_getCountry);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AConfiguration_getDensity);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AConfiguration_getKeyboard);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AConfiguration_getKeysHidden);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AConfiguration_getLanguage);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AConfiguration_getLayoutDirection);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AConfiguration_getMcc);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AConfiguration_getMnc);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AConfiguration_getNavHidden);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AConfiguration_getNavigation);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AConfiguration_getOrientation);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AConfiguration_getScreenHeightDp);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AConfiguration_getScreenLong);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AConfiguration_getScreenRound);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AConfiguration_getScreenSize);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AConfiguration_getScreenWidthDp);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AConfiguration_getSdkVersion);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AConfiguration_getSmallestScreenWidthDp);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AConfiguration_getTouchscreen);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AConfiguration_getUiModeNight);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AConfiguration_getUiModeType);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AConfiguration_isBetterThan);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AConfiguration_match);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AConfiguration_new);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AConfiguration_setCountry);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AConfiguration_setDensity);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AConfiguration_setKeyboard);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AConfiguration_setKeysHidden);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AConfiguration_setLanguage);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AConfiguration_setLayoutDirection);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AConfiguration_setMcc);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AConfiguration_setMnc);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AConfiguration_setNavHidden);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AConfiguration_setNavigation);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AConfiguration_setOrientation);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AConfiguration_setScreenHeightDp);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AConfiguration_setScreenLong);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AConfiguration_setScreenSize);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AConfiguration_setScreenWidthDp);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AConfiguration_setSdkVersion);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AConfiguration_setSmallestScreenWidthDp);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AConfiguration_setTouchscreen);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AConfiguration_setUiModeNight);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AConfiguration_setUiModeType);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AFontMatcher_create);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AFontMatcher_destroy);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AFontMatcher_match);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AFontMatcher_setFamilyVariant);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AFontMatcher_setLocales);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AFontMatcher_setStyle);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AFont_close);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AFont_getAxisCount);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AFont_getAxisTag);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AFont_getAxisValue);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AFont_getCollectionIndex);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AFont_getFontFilePath);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AFont_getLocale);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AFont_getWeight);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AFont_isItalic);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AHardwareBuffer_acquire);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AHardwareBuffer_allocate);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AHardwareBuffer_describe);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AHardwareBuffer_fromHardwareBuffer);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AHardwareBuffer_getNativeHandle);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AHardwareBuffer_isSupported);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AHardwareBuffer_lock);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AHardwareBuffer_lockAndGetInfo);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AHardwareBuffer_lockPlanes);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AHardwareBuffer_recvHandleFromUnixSocket);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AHardwareBuffer_release);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AHardwareBuffer_sendHandleToUnixSocket);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AHardwareBuffer_toHardwareBuffer);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AHardwareBuffer_unlock);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AInputEvent_getDeviceId);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AInputEvent_getSource);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AInputEvent_getType);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AInputEvent_release);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AInputQueue_attachLooper);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AInputQueue_detachLooper);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AInputQueue_finishEvent);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AInputQueue_getEvent);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AInputQueue_hasEvents);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AInputQueue_preDispatchEvent);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AKeyEvent_fromJava);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AKeyEvent_getAction);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AKeyEvent_getDownTime);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AKeyEvent_getEventTime);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AKeyEvent_getFlags);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AKeyEvent_getKeyCode);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AKeyEvent_getMetaState);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AKeyEvent_getRepeatCount);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AKeyEvent_getScanCode);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ALooper_acquire);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ALooper_addFd);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ALooper_forThread);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ALooper_pollAll);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ALooper_pollOnce);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ALooper_prepare);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ALooper_release);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ALooper_removeFd);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ALooper_wake);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AMotionEvent_fromJava);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AMotionEvent_getAction);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AMotionEvent_getAxisValue);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AMotionEvent_getButtonState);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AMotionEvent_getDownTime);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AMotionEvent_getEdgeFlags);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AMotionEvent_getEventTime);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AMotionEvent_getFlags);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AMotionEvent_getHistoricalAxisValue);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AMotionEvent_getHistoricalEventTime);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AMotionEvent_getHistoricalOrientation);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AMotionEvent_getHistoricalPressure);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AMotionEvent_getHistoricalRawX);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AMotionEvent_getHistoricalRawY);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AMotionEvent_getHistoricalSize);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AMotionEvent_getHistoricalToolMajor);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AMotionEvent_getHistoricalToolMinor);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AMotionEvent_getHistoricalTouchMajor);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AMotionEvent_getHistoricalTouchMinor);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AMotionEvent_getHistoricalX);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AMotionEvent_getHistoricalY);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AMotionEvent_getHistorySize);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AMotionEvent_getMetaState);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AMotionEvent_getOrientation);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AMotionEvent_getPointerCount);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AMotionEvent_getPointerId);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AMotionEvent_getPressure);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AMotionEvent_getRawX);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AMotionEvent_getRawY);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AMotionEvent_getSize);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AMotionEvent_getToolMajor);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AMotionEvent_getToolMinor);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AMotionEvent_getToolType);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AMotionEvent_getTouchMajor);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AMotionEvent_getTouchMinor);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AMotionEvent_getX);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AMotionEvent_getXOffset);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AMotionEvent_getXPrecision);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AMotionEvent_getY);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AMotionEvent_getYOffset);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AMotionEvent_getYPrecision);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ANativeActivity_finish);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ANativeActivity_hideSoftInput);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ANativeActivity_setWindowFlags);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ANativeActivity_setWindowFormat);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ANativeActivity_showSoftInput);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ANativeWindow_acquire);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ANativeWindow_fromSurface);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ANativeWindow_getFormat);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ANativeWindow_getHeight);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ANativeWindow_getWidth);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ANativeWindow_lock);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ANativeWindow_release);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ANativeWindow_setBuffersGeometry);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ANativeWindow_toSurface);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ANativeWindow_unlockAndPost);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AObbInfo_delete);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AObbInfo_getFlags);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AObbInfo_getPackageName);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AObbInfo_getVersion);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AObbScanner_getObbInfo);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASensorEventQueue_disableSensor);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASensorEventQueue_enableSensor);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASensorEventQueue_getEvents);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASensorEventQueue_hasEvents);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASensorEventQueue_registerSensor);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASensorEventQueue_requestAdditionalInfoEvents);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASensorEventQueue_setEventRate);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASensorManager_configureDirectReport);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASensorManager_createEventQueue);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASensorManager_createHardwareBufferDirectChannel);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASensorManager_createSharedMemoryDirectChannel);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASensorManager_destroyDirectChannel);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASensorManager_destroyEventQueue);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASensorManager_getDefaultSensor);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASensorManager_getDefaultSensorEx);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASensorManager_getInstance);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASensorManager_getInstanceForPackage);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASensorManager_getSensorList);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASensor_getFifoMaxEventCount);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASensor_getFifoReservedEventCount);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASensor_getHandle);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASensor_getHighestDirectReportRateLevel);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASensor_getMinDelay);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASensor_getName);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASensor_getReportingMode);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASensor_getResolution);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASensor_getStringType);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASensor_getType);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASensor_getVendor);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASensor_isDirectChannelTypeSupported);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASensor_isWakeUpSensor);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASharedMemory_create);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASharedMemory_dupFromJava);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASharedMemory_getSize);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASharedMemory_setProt);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AStorageManager_delete);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AStorageManager_getMountedObbPath);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AStorageManager_isObbMounted);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AStorageManager_mountObb);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AStorageManager_new);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AStorageManager_unmountObb);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASurfaceControl_create);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASurfaceControl_createFromWindow);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASurfaceControl_release);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASurfaceTexture_acquireANativeWindow);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASurfaceTexture_attachToGLContext);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASurfaceTexture_detachFromGLContext);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASurfaceTexture_fromSurfaceTexture);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASurfaceTexture_getTimestamp);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASurfaceTexture_getTransformMatrix);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASurfaceTexture_release);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASurfaceTexture_updateTexImage);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASurfaceTransactionStats_getASurfaceControls);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASurfaceTransactionStats_getAcquireTime);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASurfaceTransactionStats_getLatchTime);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASurfaceTransactionStats_getPresentFenceFd);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASurfaceTransactionStats_getPreviousReleaseFenceFd);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASurfaceTransactionStats_releaseASurfaceControls);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASurfaceTransaction_apply);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASurfaceTransaction_create);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASurfaceTransaction_delete);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASurfaceTransaction_reparent);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASurfaceTransaction_setBuffer);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASurfaceTransaction_setBufferAlpha);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASurfaceTransaction_setBufferDataSpace);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASurfaceTransaction_setBufferTransparency);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASurfaceTransaction_setColor);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASurfaceTransaction_setDamageRegion);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASurfaceTransaction_setDesiredPresentTime);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASurfaceTransaction_setFrameRate);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASurfaceTransaction_setGeometry);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASurfaceTransaction_setHdrMetadata_cta861_3);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASurfaceTransaction_setHdrMetadata_smpte2086);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASurfaceTransaction_setOnComplete);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASurfaceTransaction_setVisibility);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASurfaceTransaction_setZOrder);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASystemFontIterator_close);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASystemFontIterator_next);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ASystemFontIterator_open);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AThermal_acquireManager);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AThermal_getCurrentThermalStatus);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AThermal_registerThermalStatusListener);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AThermal_releaseManager);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(AThermal_unregisterThermalStatusListener);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ATrace_beginAsyncSection);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ATrace_beginSection);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ATrace_endAsyncSection);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ATrace_endSection);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ATrace_isEnabled);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(ATrace_setCounter);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(android_getaddrinfofornetwork);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(android_res_cancel);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(android_res_nquery);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(android_res_nresult);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(android_res_nsend);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(android_setprocnetwork);
DEFINE_INTERCEPTABLE_STUB_FUNCTION(android_setsocknetwork);

static void __attribute__((constructor(0))) init_stub_library() {
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AAssetDir_close);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AAssetDir_getNextFileName);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AAssetDir_rewind);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AAssetManager_fromJava);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AAssetManager_open);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AAssetManager_openDir);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AAsset_close);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AAsset_getBuffer);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AAsset_getLength);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AAsset_getLength64);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AAsset_getRemainingLength);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AAsset_getRemainingLength64);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AAsset_isAllocated);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AAsset_openFileDescriptor);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AAsset_openFileDescriptor64);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AAsset_read);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AAsset_seek);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AAsset_seek64);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AChoreographer_getInstance);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AChoreographer_postFrameCallback);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AChoreographer_postFrameCallback64);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AChoreographer_postFrameCallbackDelayed);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AChoreographer_postFrameCallbackDelayed64);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AChoreographer_registerRefreshRateCallback);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AChoreographer_unregisterRefreshRateCallback);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AConfiguration_copy);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AConfiguration_delete);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AConfiguration_diff);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AConfiguration_fromAssetManager);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AConfiguration_getCountry);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AConfiguration_getDensity);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AConfiguration_getKeyboard);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AConfiguration_getKeysHidden);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AConfiguration_getLanguage);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AConfiguration_getLayoutDirection);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AConfiguration_getMcc);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AConfiguration_getMnc);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AConfiguration_getNavHidden);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AConfiguration_getNavigation);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AConfiguration_getOrientation);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AConfiguration_getScreenHeightDp);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AConfiguration_getScreenLong);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AConfiguration_getScreenRound);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AConfiguration_getScreenSize);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AConfiguration_getScreenWidthDp);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AConfiguration_getSdkVersion);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AConfiguration_getSmallestScreenWidthDp);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AConfiguration_getTouchscreen);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AConfiguration_getUiModeNight);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AConfiguration_getUiModeType);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AConfiguration_isBetterThan);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AConfiguration_match);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AConfiguration_new);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AConfiguration_setCountry);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AConfiguration_setDensity);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AConfiguration_setKeyboard);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AConfiguration_setKeysHidden);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AConfiguration_setLanguage);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AConfiguration_setLayoutDirection);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AConfiguration_setMcc);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AConfiguration_setMnc);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AConfiguration_setNavHidden);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AConfiguration_setNavigation);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AConfiguration_setOrientation);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AConfiguration_setScreenHeightDp);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AConfiguration_setScreenLong);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AConfiguration_setScreenSize);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AConfiguration_setScreenWidthDp);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AConfiguration_setSdkVersion);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AConfiguration_setSmallestScreenWidthDp);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AConfiguration_setTouchscreen);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AConfiguration_setUiModeNight);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AConfiguration_setUiModeType);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AFontMatcher_create);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AFontMatcher_destroy);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AFontMatcher_match);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AFontMatcher_setFamilyVariant);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AFontMatcher_setLocales);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AFontMatcher_setStyle);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AFont_close);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AFont_getAxisCount);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AFont_getAxisTag);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AFont_getAxisValue);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AFont_getCollectionIndex);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AFont_getFontFilePath);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AFont_getLocale);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AFont_getWeight);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AFont_isItalic);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AHardwareBuffer_acquire);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AHardwareBuffer_allocate);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AHardwareBuffer_describe);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AHardwareBuffer_fromHardwareBuffer);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AHardwareBuffer_getNativeHandle);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AHardwareBuffer_isSupported);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AHardwareBuffer_lock);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AHardwareBuffer_lockAndGetInfo);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AHardwareBuffer_lockPlanes);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AHardwareBuffer_recvHandleFromUnixSocket);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AHardwareBuffer_release);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AHardwareBuffer_sendHandleToUnixSocket);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AHardwareBuffer_toHardwareBuffer);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AHardwareBuffer_unlock);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AInputEvent_getDeviceId);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AInputEvent_getSource);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AInputEvent_getType);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AInputEvent_release);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AInputQueue_attachLooper);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AInputQueue_detachLooper);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AInputQueue_finishEvent);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AInputQueue_getEvent);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AInputQueue_hasEvents);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AInputQueue_preDispatchEvent);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AKeyEvent_fromJava);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AKeyEvent_getAction);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AKeyEvent_getDownTime);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AKeyEvent_getEventTime);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AKeyEvent_getFlags);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AKeyEvent_getKeyCode);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AKeyEvent_getMetaState);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AKeyEvent_getRepeatCount);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AKeyEvent_getScanCode);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ALooper_acquire);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ALooper_addFd);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ALooper_forThread);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ALooper_pollAll);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ALooper_pollOnce);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ALooper_prepare);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ALooper_release);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ALooper_removeFd);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ALooper_wake);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AMotionEvent_fromJava);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AMotionEvent_getAction);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AMotionEvent_getAxisValue);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AMotionEvent_getButtonState);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AMotionEvent_getDownTime);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AMotionEvent_getEdgeFlags);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AMotionEvent_getEventTime);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AMotionEvent_getFlags);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AMotionEvent_getHistoricalAxisValue);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AMotionEvent_getHistoricalEventTime);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AMotionEvent_getHistoricalOrientation);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AMotionEvent_getHistoricalPressure);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AMotionEvent_getHistoricalRawX);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AMotionEvent_getHistoricalRawY);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AMotionEvent_getHistoricalSize);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AMotionEvent_getHistoricalToolMajor);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AMotionEvent_getHistoricalToolMinor);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AMotionEvent_getHistoricalTouchMajor);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AMotionEvent_getHistoricalTouchMinor);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AMotionEvent_getHistoricalX);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AMotionEvent_getHistoricalY);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AMotionEvent_getHistorySize);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AMotionEvent_getMetaState);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AMotionEvent_getOrientation);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AMotionEvent_getPointerCount);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AMotionEvent_getPointerId);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AMotionEvent_getPressure);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AMotionEvent_getRawX);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AMotionEvent_getRawY);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AMotionEvent_getSize);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AMotionEvent_getToolMajor);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AMotionEvent_getToolMinor);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AMotionEvent_getToolType);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AMotionEvent_getTouchMajor);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AMotionEvent_getTouchMinor);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AMotionEvent_getX);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AMotionEvent_getXOffset);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AMotionEvent_getXPrecision);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AMotionEvent_getY);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AMotionEvent_getYOffset);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AMotionEvent_getYPrecision);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ANativeActivity_finish);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ANativeActivity_hideSoftInput);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ANativeActivity_setWindowFlags);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ANativeActivity_setWindowFormat);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ANativeActivity_showSoftInput);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ANativeWindow_acquire);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ANativeWindow_fromSurface);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ANativeWindow_getFormat);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ANativeWindow_getHeight);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ANativeWindow_getWidth);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ANativeWindow_lock);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ANativeWindow_release);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ANativeWindow_setBuffersGeometry);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ANativeWindow_toSurface);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ANativeWindow_unlockAndPost);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AObbInfo_delete);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AObbInfo_getFlags);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AObbInfo_getPackageName);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AObbInfo_getVersion);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AObbScanner_getObbInfo);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASensorEventQueue_disableSensor);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASensorEventQueue_enableSensor);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASensorEventQueue_getEvents);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASensorEventQueue_hasEvents);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASensorEventQueue_registerSensor);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASensorEventQueue_requestAdditionalInfoEvents);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASensorEventQueue_setEventRate);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASensorManager_configureDirectReport);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASensorManager_createEventQueue);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASensorManager_createHardwareBufferDirectChannel);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASensorManager_createSharedMemoryDirectChannel);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASensorManager_destroyDirectChannel);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASensorManager_destroyEventQueue);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASensorManager_getDefaultSensor);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASensorManager_getDefaultSensorEx);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASensorManager_getInstance);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASensorManager_getInstanceForPackage);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASensorManager_getSensorList);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASensor_getFifoMaxEventCount);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASensor_getFifoReservedEventCount);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASensor_getHandle);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASensor_getHighestDirectReportRateLevel);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASensor_getMinDelay);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASensor_getName);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASensor_getReportingMode);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASensor_getResolution);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASensor_getStringType);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASensor_getType);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASensor_getVendor);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASensor_isDirectChannelTypeSupported);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASensor_isWakeUpSensor);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASharedMemory_create);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASharedMemory_dupFromJava);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASharedMemory_getSize);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASharedMemory_setProt);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AStorageManager_delete);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AStorageManager_getMountedObbPath);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AStorageManager_isObbMounted);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AStorageManager_mountObb);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AStorageManager_new);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AStorageManager_unmountObb);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASurfaceControl_create);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASurfaceControl_createFromWindow);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASurfaceControl_release);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASurfaceTexture_acquireANativeWindow);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASurfaceTexture_attachToGLContext);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASurfaceTexture_detachFromGLContext);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASurfaceTexture_fromSurfaceTexture);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASurfaceTexture_getTimestamp);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASurfaceTexture_getTransformMatrix);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASurfaceTexture_release);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASurfaceTexture_updateTexImage);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASurfaceTransactionStats_getASurfaceControls);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASurfaceTransactionStats_getAcquireTime);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASurfaceTransactionStats_getLatchTime);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASurfaceTransactionStats_getPresentFenceFd);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASurfaceTransactionStats_getPreviousReleaseFenceFd);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASurfaceTransactionStats_releaseASurfaceControls);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASurfaceTransaction_apply);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASurfaceTransaction_create);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASurfaceTransaction_delete);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASurfaceTransaction_reparent);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASurfaceTransaction_setBuffer);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASurfaceTransaction_setBufferAlpha);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASurfaceTransaction_setBufferDataSpace);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASurfaceTransaction_setBufferTransparency);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASurfaceTransaction_setColor);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASurfaceTransaction_setDamageRegion);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASurfaceTransaction_setDesiredPresentTime);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASurfaceTransaction_setFrameRate);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASurfaceTransaction_setGeometry);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASurfaceTransaction_setHdrMetadata_cta861_3);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASurfaceTransaction_setHdrMetadata_smpte2086);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASurfaceTransaction_setOnComplete);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASurfaceTransaction_setVisibility);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASurfaceTransaction_setZOrder);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASystemFontIterator_close);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASystemFontIterator_next);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ASystemFontIterator_open);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AThermal_acquireManager);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AThermal_getCurrentThermalStatus);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AThermal_registerThermalStatusListener);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AThermal_releaseManager);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", AThermal_unregisterThermalStatusListener);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ATrace_beginAsyncSection);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ATrace_beginSection);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ATrace_endAsyncSection);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ATrace_endSection);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ATrace_isEnabled);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", ATrace_setCounter);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", android_getaddrinfofornetwork);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", android_res_cancel);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", android_res_nquery);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", android_res_nresult);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", android_res_nsend);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", android_setprocnetwork);
  INIT_INTERCEPTABLE_STUB_FUNCTION("libandroid.so", android_setsocknetwork);
}
// clang-format on
