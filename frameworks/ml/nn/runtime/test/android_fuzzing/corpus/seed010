model {
  operands {
    operand {
      type: TENSOR_FLOAT32
      dimensions {
        dimension: 3
        dimension: 3
      }
      scale: 0.25
      zero_point: 0
      lifetime: CONSTANT_COPY
      channel_quant {
        scales {
        }
        channel_dim: 0
      }
      data {
        random_seed: 0
      }
    }
    operand {
      type: FLOAT32
      dimensions {
      }
      scale: 0
      zero_point: 0
      lifetime: TEMPORARY_VARIABLE
      channel_quant {
        scales {
        }
        channel_dim: 0
      }
      data {
        random_seed: 0
      }
    }
    operand {
      type: INT32
      dimensions {
      }
      scale: 0
      zero_point: 0
      lifetime: SUBGRAPH_OUTPUT
      channel_quant {
        scales {
        }
        channel_dim: 0
      }
      data {
        random_seed: 0
      }
    }
    operand {
      type: TENSOR_FLOAT32
      dimensions {
        dimension: 1
      }
      scale: 0
      zero_point: 0
      lifetime: CONSTANT_COPY
      channel_quant {
        scales {
        }
        channel_dim: 0
      }
      data {
        random_seed: 173552573
      }
    }
    operand {
      type: TENSOR_BOOL8
      dimensions {
      }
      scale: 0
      zero_point: 0
      lifetime: CONSTANT_COPY
      channel_quant {
        scales {
        }
        channel_dim: 0
      }
      data {
        random_seed: 3936078570
      }
    }
    operand {
      type: TENSOR_FLOAT32
      dimensions {
        dimension: 3
        dimension: 3
      }
      scale: 0
      zero_point: 0
      lifetime: CONSTANT_COPY
      channel_quant {
        scales {
        }
        channel_dim: 0
      }
      data {
        random_seed: 173552573
      }
    }
  }
  operations {
    operation {
      type: HASHTABLE_LOOKUP
      inputs {
        index: 0
        index: 1
        index: 2
      }
      outputs {
        index: 3
        index: 4
      }
    }
    operation {
      type: SPLIT
      inputs {
        index: 0
        index: 1
        index: 2
      }
      outputs {
        index: 3
        index: 4
      }
    }
    operation {
      type: SPLIT
      inputs {
        index: 0
        index: 1
        index: 2
      }
      outputs {
        index: 3
        index: 4
      }
    }
  }
  input_indexes {
    index: 5
    index: 6
  }
  output_indexes {
    index: 2
    index: 2
  }
  is_relaxed: true
}
